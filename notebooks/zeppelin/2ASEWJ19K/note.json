{
  "paragraphs": [
    {
      "text": "%md # Non-Personalized Recs: Top Likes and Top Influencers",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435977216561_-1963558278",
      "id": "20150704-023336_79817663",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch1\u003eNon-Personalized Recs: Top Likes and Top Influencers\u003c/h1\u003e\n"
      },
      "dateCreated": "Jul 4, 2015 2:33:36 AM",
      "dateStarted": "Jul 29, 2015 1:55:49 AM",
      "dateFinished": "Jul 29, 2015 1:55:49 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "1. Most Desirable Users By Like Count",
      "text": "val mostDesirableUsersByLikeCountDF \u003d enrichedRealTimeLikesDF.select($\"to_user_id\", $\"name\", $\"img\").groupBy($\"to_user_id\".as(\"id\"), $\"name\", $\"img\").count().sort($\"count\".desc).limit(5).cache()",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435977405035_-365251694",
      "id": "20150704-023645_415722549",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "mostDesirableUsersByLikeCountDF: org.apache.spark.sql.DataFrame \u003d [id: int, name: string, img: string, count: bigint]\n"
      },
      "dateCreated": "Jul 4, 2015 2:36:45 AM",
      "dateStarted": "Jul 29, 2015 1:55:49 AM",
      "dateFinished": "Jul 29, 2015 1:55:50 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Save Top Users by like count",
      "text": "import org.elasticsearch.spark.sql._ \nval esConfig \u003d Map(\"pushdown\" -\u003e \"true\", \"es.nodes\" -\u003e \"52.27.56.210\", \"es.port\" -\u003e \"39200\")\n\nmostDesirableUsersByLikeCountDF.write.format(\"org.elasticsearch.spark.sql\").mode(SaveMode.Overwrite).options(esConfig).save(\"sparkafterdark/top-users-by-count\")",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1438126490868_349657592",
      "id": "20150728-233450_597528207",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.elasticsearch.spark.sql._\nesConfig: scala.collection.immutable.Map[String,String] \u003d Map(pushdown -\u003e true, es.nodes -\u003e 52.27.56.210, es.port -\u003e 39200)\n"
      },
      "dateCreated": "Jul 28, 2015 11:34:50 PM",
      "dateStarted": "Jul 29, 2015 1:55:49 AM",
      "dateFinished": "Jul 29, 2015 1:55:52 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "2. Most Influential Users By Like Graph",
      "text": "%md ![Most Desirable Users](https://raw.githubusercontent.com/cfregly/spark-after-dark/master/img/pagerank.png)",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435977492747_2053618668",
      "id": "20150704-023812_81431125",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003e\u003cimg src\u003d\"https://raw.githubusercontent.com/cfregly/spark-after-dark/master/img/pagerank.png\" alt\u003d\"Most Desirable Users\" /\u003e\u003c/p\u003e\n"
      },
      "dateCreated": "Jul 4, 2015 2:38:12 AM",
      "dateStarted": "Jul 29, 2015 1:55:49 AM",
      "dateFinished": "Jul 29, 2015 1:55:49 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Run PageRank On The Like Graph And Enrich With Reference Data",
      "text": "import org.apache.spark.graphx._\nimport org.apache.spark.graphx.util._\n\nval edgeTuples \u003d enrichedRealTimeLikesDF.map(like \u003d\u003e \n  (like(0).toString.toLong, like(1).toString.toLong)\n)\n\nval convergenceThreshold \u003d 0.01\nval graph \u003d Graph.fromEdgeTuples(edgeTuples, \"\", Some(PartitionStrategy.RandomVertexCut))\nval pageRank \u003d graph.pageRank(convergenceThreshold).cache()\n\nval topInfluencers \u003d pageRank.vertices.top(10)(Ordering.by(rank \u003d\u003e rank._2))\nval topInfluencersDF \u003d sc.parallelize(topInfluencers).toDF(\"user_id\", \"rank\")\n\nval enrichedTopInfluencersDF \u003d \n  topInfluencersDF.join(actressesAndActorsDF,\n    $\"user_id\" \u003d\u003d\u003d $\"id\").select($\"id\", $\"name\", $\"bio\", $\"img\", $\"rank\").limit(5).cache()",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435977512315_408062946",
      "id": "20150704-023832_2082939526",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.apache.spark.graphx._\nimport org.apache.spark.graphx.util._\nedgeTuples: org.apache.spark.rdd.RDD[(Long, Long)] \u003d MapPartitionsRDD[51493] at map at \u003cconsole\u003e:124\nconvergenceThreshold: Double \u003d 0.01\ngraph: org.apache.spark.graphx.Graph[String,Int] \u003d org.apache.spark.graphx.impl.GraphImpl@c49c265\npageRank: org.apache.spark.graphx.Graph[Double,Double] \u003d org.apache.spark.graphx.impl.GraphImpl@63b49b54\ntopInfluencers: Array[(org.apache.spark.graphx.VertexId, Double)] \u003d Array((90009,0.33062499999999995), (10004,0.2532142857142857), (90010,0.24709686147186144), (10009,0.22230519480519478), (90015,0.2107142857142857), (10002,0.2107142857142857), (90005,0.2107142857142857), (90013,0.20666666666666667), (90008,0.2010551948051948), (10007,0.19700757575757574))\ntopInfluencersDF: org.apache.spark.sql.DataFrame \u003d [user_id: bigint, rank: double]\nenrichedTopInfluencersDF: org.apache.spark.sql.DataFrame \u003d [id: bigint, name: string, bio: string, img: string, rank: double]\n"
      },
      "dateCreated": "Jul 4, 2015 2:38:32 AM",
      "dateStarted": "Jul 29, 2015 1:55:51 AM",
      "dateFinished": "Jul 29, 2015 1:55:56 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Save Top Influencers to ElasticSearch",
      "text": "enrichedTopInfluencersDF.write.format(\"org.elasticsearch.spark.sql\").mode(SaveMode.Overwrite).options(esConfig).save(\"sparkafterdark/top-influencers\")",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1438129559892_1582020354",
      "id": "20150729-002559_2041051440",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "Jul 29, 2015 12:25:59 AM",
      "dateStarted": "Jul 29, 2015 1:55:52 AM",
      "dateFinished": "Jul 29, 2015 1:55:57 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "[TODO] Write Recommendations To ElasticSearch To Be Used By The WebApp",
      "text": "",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435977607013_1537471179",
      "id": "20150704-024007_801415737",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT"
      },
      "dateCreated": "Jul 4, 2015 2:40:07 AM",
      "dateStarted": "Jul 29, 2015 1:55:57 AM",
      "dateFinished": "Jul 29, 2015 1:55:57 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "SparkAfterDark-Generate-Non-Personalized-Recs-Counts-PageRank",
  "id": "2ASEWJ19K",
  "angularObjects": {},
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}