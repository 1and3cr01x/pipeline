{
  "paragraphs": [
    {
      "text": "%md #Setup and Test all Dependent Services and Apps\n* Apache Httpd\n* Spark Master/Workers\n* Spark Job Server\n* Spark JDBC/ODBC Thrift Server (Beeline, Tableau)\n* Cassandra\n* ElasticSearch\n* Zeppelin Spark Interpreter\n* Logstash\n* Kibana",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1436048412369_-1213918359",
      "id": "20150704-222012_1191312165",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch1\u003eSetup and Test all Dependent Services and Apps\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eApache Httpd\u003c/li\u003e\n\u003cli\u003eSpark Master/Workers\u003c/li\u003e\n\u003cli\u003eSpark Job Server\u003c/li\u003e\n\u003cli\u003eSpark JDBC/ODBC Thrift Server (Beeline, Tableau)\u003c/li\u003e\n\u003cli\u003eCassandra\u003c/li\u003e\n\u003cli\u003eElasticSearch\u003c/li\u003e\n\u003cli\u003eZeppelin Spark Interpreter\u003c/li\u003e\n\u003cli\u003eLogstash\u003c/li\u003e\n\u003cli\u003eKibana\u003c/li\u003e\n\u003c/ul\u003e\n"
      },
      "dateCreated": "Jul 4, 2015 10:20:12 PM",
      "dateStarted": "Jul 4, 2015 10:50:15 PM",
      "dateFinished": "Jul 4, 2015 10:50:15 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%dep\nz.addRepo(\"maven central\").url(\"search.maven.org\")\nz.load(\"com.datastax.spark:spark-cassandra-connector_2.10:1.4.0-M1\")\nz.load(\"org.elasticsearch:elasticsearch-spark_2.10:2.1.0\")\nz.load(\"org.apache.spark:spark-streaming-kafka-assembly_2.10:1.4.0\")",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1436152405092_-138944350",
      "id": "20150706-031325_430962518",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "res0: org.apache.zeppelin.spark.dep.Dependency \u003d org.apache.zeppelin.spark.dep.Dependency@12e6b414\n"
      },
      "dateCreated": "Jul 6, 2015 3:13:25 AM",
      "dateStarted": "Jul 7, 2015 6:48:24 PM",
      "dateFinished": "Jul 7, 2015 6:48:30 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "[Apache Httpd] test Apache Httpd endpoint for Spark After Dark App UI",
      "text": "%sh curl \u0027sparkafterdark.com/index.html\u0027",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1436049270333_475903744",
      "id": "20150704-223430_1351941975",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r100  7368  100  7368    0     0 \u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"\u003e\n\u003chtml\u003e\n\u003chead\u003e\n  \u003cmeta http-equiv\u003d\"Content-Type\" content\u003d\"text/html; charset\u003dutf-8\"\u003e\n  \u003cmeta http-equiv\u003d\"Content-Style-Type\" content\u003d\"text/css\"\u003e\n  \u003cmeta name\u003d\"viewport\" content\u003d\"width\u003ddevice-width, initial-scale\u003d1.0\"\u003e\n  \u003cmeta name\u003d\"description\" content\u003d\"\"\u003e\n  \u003cmeta name\u003d\"keywords\" content\u003d\"Apache, Apache Spark, Spark, Shark, Spork, SQL, SparkSQL, SparkR, Streaming, Storm, S4, SAMOA, MLbase, MLlib, MLI, MLOptimizer, Mahout, R, RStudio, Graph, GraphX, GraphLab, Giraph, Berkeley Data Analytics Stack, BDAS, Big Data, Hadoop, HBase, HDFS, S3, ZooKeeper, Parquet, RCFile, Avro, GZip, LZO, Snappy, SequenceFile, InputFormat, OutputFormat, InputSplit, Fast, Data Analytics, OLTP, OLAP, BlinkDB, Tachyon, Hive, Pig, Cascading, Oozie, Spork, Kite, UDF, DDL, DML, DAG, Directed Acyclic Graph, Scala, Java, Java 8, Python, Schema, Linear Algebra, Matrix, Breeze, Sparse, Dense, Columnar, Database, Analytics, Performance, MapReduce, Tez, Drill, Accumulo, Solr, SolrCloud, ElasticSearch, Lucene, Impala, YARN, Hue, Flume, Sqoop, Whirr, MapR, Cloudera, Hortonworks, Join, GroupBy, Union, Sort, Filter, Map, Reduce, Pipe, Streaming, Machine Learning, PageRank, Lambda Architecture, Ad-Hoc, Interactive, Real-time, Near real-time, Statistics, Linear Regression, Logistic Regression, Feature Selection, Stochastic Gradient Descent, Statistcal Analysis, Clustering, Classification, Collaborative Filtering, Recommendations, Item-Item Recommendations, User-Item Recommendations, Distributed Systems, Fault-Tolerance, Failover, Cluster, EMR, Elastic MapReduce, DynamoDB, RedShift, Kinesis, MQTT, Kafka, Twitter, ZeroMQ, Batch Processing, Akka, Functional Programming, Data Science, Play, ETL, Extract, Transform, Load, Cassandra, VNode, Virtual Node, Hinted Handoff, Circuit Breaker, Alternate Least Squares, Ganglia, Parallel, MPI, Distributed System, Lightning Fast Cluster Computing\"\u003e\n  \u003ctitle\u003eSpark After Dark\u003c/title\u003e\n    \u003c!-- Bootstrap --\u003e\n    \u003clink href\u003d\"css/bootstrap.min.css\" rel\u003d\"stylesheet\" media\u003d\"screen\"\u003e\n    \u003cstyle\u003e\n      body {\n        background-color: black;\n\tcolor: white;\n      }\n      li {\n\tdisplay: inline;\n\tlist-style-type: none;\n\tposition: relative;\n      }\n      li .heart {\n        position: absolute;\n\tz-index: 99;\n        left: 0px;\n\tdisplay: none;\n      }\n    \u003c/style\u003e\n\n\u003cscript src\u003d\"js/jquery.min.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\nvar myId \u003d Math.floor((Math.random() * 100000) + 1);\n\nfunction like(personId) {\n  $(\"#heart\" + personId).show()\n\n  var encodedKey \u003d btoa(myId)\n  var encodedValue \u003d btoa(personId)\n  $.ajax({\n    url:\u0027http://sparkafterdark.com/like\u0027,\n    type:\u0027POST\u0027,\n    data:\u0027{\"records\":[{\"key\":\"\u0027 + encodedKey + \u0027\", \"value\":\"\u0027 + encodedValue + \u0027\"}]}\u0027,\n    contentType:\u0027application/vnd.kafka.binary.v1+json\u0027,\n    dataType:\u0027json\u0027,\n    success: function(data, status){\n      //alert(\u0027Data: \u0027 + data + \u0027\\nStatus: \u0027 + status);\n    }\n  })\n}\n\nfunction loadPeople(type) {\n  $.getJSON( \"data/\" + type + \".json\", function( data ) {\n    var startIdx \u003d 10000; // actors start with 10000, actresses start with 90000 \n    if (type \u003d\u003d \u0027actresses\u0027) {\n\tstartIdx \u003d 90000;\n    }\n\n    var mePerson \u003d [];\n    var items \u003d [];\n    $.each( data.results.people, function( arrayIdx, person ) {\n      var imgSrc \u003d person.hero.src \n      var personIdx \u003d startIdx + person.index\n      var personName \u003d person.name.text \n \n      items.push( \"\u003cli id\u003d\u0027li\" + personIdx + \"\u0027\u003e\u003ca href\u003d\u0027javascript:like(\" + personIdx + \")\u0027\u003e\u003cimg id\u003d\u0027img\" + personIdx + \"\u0027 alt\u003d\u0027\" + personName + \"\u0027 src\u003d\u0027\" + imgSrc + \"\u0027 width\u003d\u0027140\u0027 height\u003d\u0027209\u0027\u003e\u003c/a\u003e\u003cimg class\u003d\u0027heart\u0027 id\u003d\u0027heart\" + personIdx + \"\u0027 alt\u003d\u0027liked\u0027 src\u003d\u0027img/heart.png\u0027 width\u003d\u002745\u0027 height\u003d\u002738\u0027\u003e\u003c/li\u003e\" );\n    });\n    \n    $( \"\u003cul/\u003e\", {\n      html: \"\u003cdiv id\u003d\u0027\" + type + \"-inner\u0027\u003e\u003chr\u003e\u003ch3\u003e\u003chr\u003e\u003ccenter\u003eChoose a few favorite \" + type + \"\u003c/center\u003e\u003chr\u003e\u003c/h3\u003e\u003chr\u003e\u003ccenter\u003e\" + items.join( \"\" ) + \"\u003c/center\u003e\u003c/div\u003e\"\n    }).appendTo(\"#\" + type);  \n  });\n}\n\nfunction loadPersonalizedALS() {\n  $.getJSON( \"https://s3.amazonaws.com/fluxcapacitor.com/sparkafterdark/recommendations/personalized-als.json\", fun 1311k      0 --:--:-- --:--:-- --:--:-- 1439k\nction( data ) {\n    var items \u003d [];\n    $.each( data, function( arrayIdx, rec ) {\n      if (rec.from_user_id \u003d\u003d myId) {\n\t  var personIdx \u003d rec.to_user_id\n\t  var imgSrc \u003d rec.img\n\t  var personName \u003d rec.name \n\n          items.push( \"\u003cli id\u003d\u0027li\" + personIdx + \"\u0027\u003e\u003ca href\u003d\u0027javascript:like(\" + personIdx + \")\u0027\u003e\u003cimg id\u003d\u0027img\" + personIdx + \"\u0027 alt\u003d\u0027\" + personName + \"\u0027 src\u003d\u0027\" + imgSrc + \"\u0027 width\u003d\u0027140\u0027 height\u003d\u0027209\u0027\u003e\u003c/a\u003e\u003cimg class\u003d\u0027heart\u0027 id\u003d\u0027heart\" + personIdx + \"\u0027 alt\u003d\u0027liked\u0027 src\u003d\u0027img/heart.png\u0027 width\u003d\u002745\u0027 height\u003d\u002738\u0027\u003e\u003c/li\u003e\" );\n      }\n    });\n    \n    $( \"\u003cul/\u003e\", {\n      html: \"\u003c/br\u003e\u003ccenter\u003e\" + items.join( \"\" ) + \"\u003c/center\u003e\"\n    }).appendTo( \"#personalized-als\" );  \n  });\n}\n\nfunction loadTopInfluencers() {\n  $.getJSON( \"https://s3.amazonaws.com/fluxcapacitor.com/sparkafterdark/recommendations/top-influencers.json\", function( data ) {\n    var items \u003d [];\n    $.each( data, function( arrayIdx, rec) {\n      var personIdx \u003d rec.id\n      var personName \u003d rec.name\n      var imgSrc \u003d rec.img\n\n      items.push( \"\u003cli id\u003d\u0027li\" + personIdx + \"\u0027\u003e\u003ca href\u003d\u0027javascript:like(\" + personIdx + \")\u0027\u003e\u003cimg id\u003d\u0027img\" + personIdx + \"\u0027 alt\u003d\u0027\" + personName + \"\u0027 src\u003d\u0027\" + imgSrc + \"\u0027 width\u003d\u0027140\u0027 height\u003d\u0027209\u0027\u003e\u003c/a\u003e\u003cimg class\u003d\u0027heart\u0027 id\u003d\u0027heart\" + personIdx + \"\u0027 alt\u003d\u0027liked\u0027 src\u003d\u0027img/heart.png\u0027 width\u003d\u002745\u0027 height\u003d\u002738\u0027\u003e\u003c/li\u003e\" );\n    });\n    \n    $( \"\u003cul/\u003e\", {\n      html: \"\u003c/br\u003e\u003ccenter\u003e\" + items.join( \"\" ) + \"\u003c/center\u003e\"\n    }).appendTo( \"#top-influencers\" );  \n  });\n}\n\nfunction loadTopUsersByCount() {\n  $.getJSON( \"https://s3.amazonaws.com/fluxcapacitor.com/sparkafterdark/recommendations/top-users-by-count.json\", function( data ) {\n    var items \u003d [];\n    $.each( data, function( arrayIdx, rec) {\n      var personIdx \u003d rec.id\n      var personName \u003d rec.name\n      var imgSrc \u003d rec.img \n\n      items.push( \"\u003cli id\u003d\u0027li\" + personName + \"\u0027\u003e\u003ca href\u003d\u0027javascript:like(\" + personIdx + \")\u0027\u003e\u003cimg id\u003d\u0027img\" + personIdx + \"\u0027 alt\u003d\u0027\" + personName + \"\u0027 src\u003d\u0027\" + imgSrc + \"\u0027 width\u003d\u0027140\u0027 height\u003d\u0027209\u0027\u003e\u003c/a\u003e\u003cimg class\u003d\u0027heart\u0027 id\u003d\u0027heart\" + personIdx + \"\u0027 alt\u003d\u0027liked\u0027 src\u003d\u0027img/heart.png\u0027 width\u003d\u002745\u0027 height\u003d\u002738\u0027\u003e\u003c/li\u003e\" );\n    });\n    \n    $( \"\u003cul/\u003e\", {\n      html: \"\u003c/br\u003e\u003ccenter\u003e\" + items.join( \"\" ) + \"\u003c/center\u003e\"\n    }).appendTo( \"#top-users-by-count\" );  \n  });\n}\n\u003c/script\u003e\n\u003c/head\u003e\n\n\u003cbody\u003e\n\u003cimg style\u003d\"width: 100%; height\u003d100%;\" src\u003d\"img/sparkafterdark.png\"\u003e\n\u003cscript\u003e $(\"body\").append(\"\u003ch1\u003e\u003ccenter\u003eWelcome, Anonymous User \" + myId + \"!\u003c/center\u003e\u003ch1\u003e\") \u003c/script\u003e\n\n\u003cdiv id\u003d\"actresses\"\u003e\n\u003c/div\u003e\n\u003cdiv id\u003d\"actors\"\u003e\n\u003c/div\u003e\n\u003chr\u003e\u003chr\u003e\u003ch3\u003e\u003ccenter\u003e... Please Wait ...\u003c/br\u003e... Before Clicking ...\u003c/br\u003e... The Links Below ...\u003c/center\u003e\u003c/h3\u003e\n\u003cdiv id\u003d\"top-users-by-count\"\u003e\n\u003c/div\u003e\n\u003cdiv id\u003d\"top-influencers\"\u003e\n\u003c/div\u003e\n\u003cdiv id\u003d\"personalized-als\"\u003e\n\u003c/div\u003e\n\u003chr\u003e\u003chr\u003e\n\u003cscript\u003e\n  loadPeople(\u0027actresses\u0027)\n  loadPeople(\u0027actors\u0027)\n\u003c/script\u003e\n\u003cscript\u003e $(\"#top-users-by-count\").append(\"\u003chr\u003e\u003chr\u003e\u003ch3\u003e\u003ccenter\u003e\u003ca href\u003d\u0027javascript:loadTopUsersByCount()\u0027\u003eGet Top Users by Like Count\u003c/a\u003e\u003c/center\u003e\u003ch3\u003e\")\u003c/script\u003e\n\u003cscript\u003e $(\"#top-influencers\").append(\"\u003chr\u003e\u003chr\u003e\u003ch3\u003e\u003ccenter\u003e\u003ca href\u003d\u0027javascript:loadTopInfluencers()\u0027\u003eGet Top Influencers by Like Graph\u003c/a\u003e\u003c/center\u003e\u003ch3\u003e\")\u003c/script\u003e\n\u003cscript\u003e $(\"#personalized-als\").append(\"\u003chr\u003e\u003chr\u003e\u003ch3\u003e\u003ccenter\u003e\u003ca href\u003d\u0027javascript:loadPersonalizedALS()\u0027\u003eGet Personalized Recs by ALS\u003c/a\u003e\u003c/center\u003e\u003ch3\u003e\")\u003c/script\u003e\n\u003c/div\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n"
      },
      "dateCreated": "Jul 4, 2015 10:34:30 PM",
      "dateStarted": "Jul 4, 2015 10:49:31 PM",
      "dateFinished": "Jul 4, 2015 10:49:31 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "[Spark Master/Workers] Test Admin UIs",
      "text": "\n",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1436049516227_445460963",
      "id": "20150704-223836_1348425664",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT"
      },
      "dateCreated": "Jul 4, 2015 10:38:36 PM",
      "dateStarted": "Jul 4, 2015 10:49:31 PM",
      "dateFinished": "Jul 4, 2015 10:49:31 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "[Spark Job Server] Test Admin UI",
      "text": "",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1436049545854_1168250905",
      "id": "20150704-223905_1465796536",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT"
      },
      "dateCreated": "Jul 4, 2015 10:39:05 PM",
      "dateStarted": "Jul 4, 2015 10:49:31 PM",
      "dateFinished": "Jul 4, 2015 10:49:31 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "[Spark JDBC/ODBC Thrift Server] Test Thrift Server Endpoint with Beeline and Tableau",
      "text": "",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1436049902413_1637966371",
      "id": "20150704-224502_457835392",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT"
      },
      "dateCreated": "Jul 4, 2015 10:45:02 PM",
      "dateStarted": "Jul 4, 2015 10:49:31 PM",
      "dateFinished": "Jul 4, 2015 10:49:31 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "[Cassandra] Create the Keyspace/Table for Real-Time Likes",
      "text": "%md TODO",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1436049166774_1784899412",
      "id": "20150704-223246_2143433029",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003eTODO\u003c/p\u003e\n"
      },
      "dateCreated": "Jul 4, 2015 10:32:46 PM",
      "dateStarted": "Jul 4, 2015 10:49:31 PM",
      "dateFinished": "Jul 4, 2015 10:49:31 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "[ElasticSearch] Create Index/Type for Generated Recommendations",
      "text": "",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1436049579577_1076726639",
      "id": "20150704-223939_458176266",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT"
      },
      "dateCreated": "Jul 4, 2015 10:39:39 PM",
      "dateStarted": "Jul 4, 2015 10:49:31 PM",
      "dateFinished": "Jul 4, 2015 10:49:31 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "[Zeppelin Spark Interpreter] Restart for Fresh Start",
      "text": "%md ###[Restart](#/interpreter)",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1436050018826_-320096879",
      "id": "20150704-224658_1382908652",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003e\u003ca href\u003d\"#/interpreter\"\u003eRestart\u003c/a\u003e\u003c/h3\u003e\n"
      },
      "dateCreated": "Jul 4, 2015 10:46:58 PM",
      "dateStarted": "Jul 4, 2015 10:49:31 PM",
      "dateFinished": "Jul 4, 2015 10:49:31 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "[Logstash] Test Logstash UI for generated Logs from All Services",
      "text": "",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1436049630588_1579501507",
      "id": "20150704-224030_1040763339",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT"
      },
      "dateCreated": "Jul 4, 2015 10:40:30 PM",
      "dateStarted": "Jul 4, 2015 10:49:31 PM",
      "dateFinished": "Jul 4, 2015 10:49:31 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "[Kibana] Test Admin UI",
      "text": "",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1436049132338_1584583152",
      "id": "20150704-223212_557559316",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT"
      },
      "dateCreated": "Jul 4, 2015 10:32:12 PM",
      "dateStarted": "Jul 4, 2015 10:49:31 PM",
      "dateFinished": "Jul 4, 2015 10:49:31 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "SparkAfterDark-Setup-Dependent-Services-And-Apps",
  "id": "2AU63A335",
  "angularObjects": {},
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}