{
  "paragraphs": [
    {
      "title": "Import Dependencies",
      "text": "%dep\nz.reset()\nz.addRepo(\"maven central\").url(\"search.maven.org\")\nz.load(\"com.datastax.spark:spark-cassandra-connector_2.10:1.4.0-M1\")\nz.load(\"org.elasticsearch:elasticsearch-spark_2.10:2.1.0\")",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435904425694_1044927616",
      "id": "20150703-062025_1689760268",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "Must be used before SparkInterpreter (%spark) initialized"
      },
      "dateCreated": "Jul 3, 2015 6:20:25 AM",
      "dateStarted": "Sep 27, 2015 4:32:15 AM",
      "dateFinished": "Sep 27, 2015 4:32:15 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Read the real-time Likes coming from kafka",
      "text": "val likesDF \u003d sqlContext.read.format(\"org.apache.spark.sql.cassandra\").options(Map(\"keyspace\" -\u003e \"pipeline\", \"table\" -\u003e \"likes\")).load().toDF(\"from_user_id\", \"to_user_id\", \"batch_time\")",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435900511434_-2036302443",
      "id": "20150703-051511_2118186706",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "likesDF: org.apache.spark.sql.DataFrame \u003d [from_user_id: int, to_user_id: int, batch_time: bigint]\n"
      },
      "dateCreated": "Jul 3, 2015 5:15:11 AM",
      "dateStarted": "Aug 18, 2015 12:17:32 AM",
      "dateFinished": "Aug 18, 2015 12:17:32 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Current count of real-time likes",
      "text": "likesDF.count()",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435903555217_1061802373",
      "id": "20150703-060555_1147518830",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "res131: Long \u003d 364\n"
      },
      "dateCreated": "Jul 3, 2015 6:05:55 AM",
      "dateStarted": "Aug 18, 2015 12:17:32 AM",
      "dateFinished": "Aug 18, 2015 12:17:33 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Use the dataFrame API to query the real-time likes",
      "text": "likesDF.select(\"from_user_id\", \"to_user_id\", \"batch_time\").collect().mkString(\"\\n\")",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435903580253_1496599278",
      "id": "20150703-060620_2086361325",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "res133: String \u003d \n[87685,10006,1439856878000]\n[87685,90004,1439856860000]\n[87685,90010,1439856866000]\n[60367,10014,1439856870000]\n[97632,10001,1439856880000]\n[97632,10004,1439856874000]\n[97632,10007,1439856878000]\n[97632,10010,1439856876000]\n[97632,10014,1439856878000]\n[97632,90006,1439856868000]\n[97632,90013,1439856870000]\n[97632,90015,1439856872000]\n[80344,10001,1439841612000]\n[80344,10002,1439841612000]\n[80344,10004,1439841614000]\n[80344,10005,1439841614000]\n[80344,90001,1439841528000]\n[80344,90006,1439841528000]\n[80344,90007,1439841610000]\n[80344,90009,1439841530000]\n[80344,90011,1439841530000]\n[80344,90012,1439841552000]\n[80344,90013,1439841554000]\n[80344,90014,1439841554000]\n[80344,90015,1439841530000]\n[63219,10008,1439856956000]\n[63219,10010,1439856950000]\n[63219,10012,1439856950..."
      },
      "dateCreated": "Jul 3, 2015 6:06:20 AM",
      "dateStarted": "Aug 18, 2015 12:17:33 AM",
      "dateFinished": "Aug 18, 2015 12:17:34 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Show number of distinct Real-time participating users",
      "text": "import org.apache.spark.sql.functions._\n\nlikesDF.select(countDistinct($\"from_user_id\").as(\"distinct_user_count\")).collect()(0)",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435903786952_671772613",
      "id": "20150703-060946_1260514447",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.apache.spark.sql.functions._\nres136: org.apache.spark.sql.Row \u003d [57]\n"
      },
      "dateCreated": "Jul 3, 2015 6:09:46 AM",
      "dateStarted": "Aug 18, 2015 12:17:33 AM",
      "dateFinished": "Aug 18, 2015 12:17:35 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "register the real-time likes as a temp table",
      "text": "likesDF.cache()\nlikesDF.registerTempTable(\"likes_temp\")",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435904979849_80174944",
      "id": "20150703-062939_414600917",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "res138: likesDF.type \u003d [from_user_id: int, to_user_id: int, batch_time: bigint]\n"
      },
      "dateCreated": "Jul 3, 2015 6:29:39 AM",
      "dateStarted": "Aug 18, 2015 12:17:34 AM",
      "dateFinished": "Aug 18, 2015 12:17:35 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Show Most desirable users by Like Count",
      "text": "%sql SELECT name, count(to_user_id) as count FROM likes_temp JOIN actresses_and_actors ON (likes_temp.to_user_id \u003d actresses_and_actors.id) GROUP BY name HAVING count \u003e 0 ORDER BY count DESC",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "multiBarChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "name",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "count",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "name",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "count",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "title": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435904577933_-1977276639",
      "id": "20150703-062257_361919402",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "name\tcount\nMorgan Freeman\t24\nAshley Judd\t22\nSof√≠a Vergara\t21\nLeonardo DiCaprio\t19\nBobbie Phillips\t19\nGail O\u0027Grady\t18\nJohnny Depp\t16\nBarbara Niven\t15\nJames Franco\t14\nTom Hanks\t14\nTiffani Thiessen\t13\nStacey Dash\t13\nClive Owen\t12\nRobert De Niro\t11\nDenzel Washington\t11\nAl Pacino\t11\nAngell Conwell\t10\nRosalind Allen\t10\nTatyana Ali\t10\nShannah Laumeister\t10\nLinda Blair\t9\nJames Gandolfini\t9\nAnthony Hopkins\t8\nShannon Whirry\t8\nMarlon Brando\t8\nMark Wahlberg\t7\nKeshia Knight Pulliam\t7\nPam Grier\t6\nJohn Travolta\t6\nChazz Palminteri\t4\n"
      },
      "dateCreated": "Jul 3, 2015 6:22:57 AM",
      "dateStarted": "Aug 18, 2015 12:29:51 AM",
      "dateFinished": "Aug 18, 2015 12:29:51 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md ### Compare The Physical Plans Between DataFrames And SQL (Should Be Equal)",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1438120230768_-497996483",
      "id": "20150728-215030_753792481",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003eCompare The Physical Plans Between DataFrames And SQL (Should Be Equal)\u003c/h3\u003e\n"
      },
      "dateCreated": "Jul 28, 2015 9:50:30 PM",
      "dateStarted": "Aug 18, 2015 12:17:30 AM",
      "dateFinished": "Aug 18, 2015 12:17:30 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Explain Plan for SQL Query",
      "text": "sqlContext.sql(\"SELECT count(to_user_id) as count FROM likes_temp GROUP BY to_user_id ORDER BY count DESC\").explain()",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435904897005_-1761757602",
      "id": "20150703-062817_715212992",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\u003d\u003d Physical Plan \u003d\u003d\nSort [count#1175L DESC], true\n Exchange (RangePartitioning 200)\n  Aggregate false, [to_user_id#1117], [Coalesce(SUM(PartialCount#1193L),0) AS count#1175L]\n   Exchange (HashPartitioning 200)\n    Aggregate true, [to_user_id#1117], [to_user_id#1117,COUNT(to_user_id#1117) AS PartialCount#1193L]\n     InMemoryColumnarTableScan [to_user_id#1117], (InMemoryRelation [from_user_id#1116,to_user_id#1117,batch_time#1118L], true, 10000, StorageLevel(true, true, false, true, 1), (Project [fromuserid#1113 AS from_user_id#1116,touserid#1114 AS to_user_id#1117,batchtime#1115L AS batch_time#1118L]), None)\n"
      },
      "dateCreated": "Jul 3, 2015 6:28:17 AM",
      "dateStarted": "Aug 18, 2015 12:17:35 AM",
      "dateFinished": "Aug 18, 2015 12:17:37 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Explain Plan for DataFrame Query",
      "text": "likesDF.groupBy(\"to_user_id\").count().as(\"ct\").sort($\"count\".desc).explain()",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435904813656_1068531928",
      "id": "20150703-062653_388339500",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\u003d\u003d Physical Plan \u003d\u003d\nSort [count#1197L DESC], true\n Exchange (RangePartitioning 200)\n  Aggregate false, [to_user_id#1117], [to_user_id#1117,Coalesce(SUM(PartialCount#1215L),0) AS count#1197L]\n   Exchange (HashPartitioning 200)\n    Aggregate true, [to_user_id#1117], [to_user_id#1117,COUNT(1) AS PartialCount#1215L]\n     InMemoryColumnarTableScan [to_user_id#1117], (InMemoryRelation [from_user_id#1116,to_user_id#1117,batch_time#1118L], true, 10000, StorageLevel(true, true, false, true, 1), (Project [fromuserid#1113 AS from_user_id#1116,touserid#1114 AS to_user_id#1117,batchtime#1115L AS batch_time#1118L]), None)\n"
      },
      "dateCreated": "Jul 3, 2015 6:26:53 AM",
      "dateStarted": "Aug 18, 2015 12:17:37 AM",
      "dateFinished": "Aug 18, 2015 12:17:37 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md ### Generate Top-K Recommendations",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1443327931442_-1682486349",
      "id": "20150927-042531_810181892",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003eGenerate Top-K Recommendations\u003c/h3\u003e\n"
      },
      "dateCreated": "Sep 27, 2015 4:25:31 AM",
      "dateStarted": "Sep 27, 2015 4:25:54 AM",
      "dateFinished": "Sep 27, 2015 4:25:54 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Enrich Real-Time Likes With Actress And Actors Reference Data",
      "text": "val enrichedLikesDF \u003d likesDF.join(actressesAndActorsDF, $\"to_user_id\" \u003d\u003d\u003d $\"id\").select($\"from_user_id\", $\"to_user_id\", $\"name\", $\"bio\", $\"img\").cache()\nenrichedLikesDF.collect()",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1438122122445_605191340",
      "id": "20150728-222202_1206474036",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "enrichedLikesDF: org.apache.spark.sql.DataFrame \u003d [from_user_id: int, to_user_id: int, name: string, bio: string, img: string]\nres145: Array[org.apache.spark.sql.Row] \u003d Array([87685,10006,Marlon Brando,Marlon Brando is widely considered the greatest movie actor of all time, rivaled only by the more theatrically oriented Laurence Olivier in terms of esteem. Unlike Olivier, who preferred the stage to the screen, Brando concentrated his talents on movies after bidding the Broadway stage adieu in 1949...,img/people/10006.jpg], [87685,90004,Bobbie Phillips,Brains and beauty are two words that have been repeatedly used to describe Bobbie Phillips throughout her career. Graduating high school at 16 years old, Bobbie tried several different career paths. After taking college classes to become a litigation attorney, it was suggested she also take drama classes...,img/people/90004.jpg], [87685,90010,Tiffani Thiessen,Tiff..."
      },
      "dateCreated": "Jul 28, 2015 10:22:02 PM",
      "dateStarted": "Aug 18, 2015 12:17:37 AM",
      "dateFinished": "Aug 18, 2015 12:17:37 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Aggregate Most Desirable Users By Like Count",
      "text": "val mostDesirableUsersByLikeCountDF \u003d enrichedLikesDF.select($\"to_user_id\", $\"name\", $\"img\").groupBy($\"to_user_id\".as(\"id\"), $\"name\", $\"img\").count().sort($\"count\".desc).limit(5).cache()",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1443327429247_981995018",
      "id": "20150927-041709_316941617",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "\u003cconsole\u003e:27: error: not found: value enrichedLikesDF\n       val mostDesirableUsersByLikeCountDF \u003d enrichedLikesDF.select($\"to_user_id\", $\"name\", $\"img\").groupBy($\"to_user_id\".as(\"id\"), $\"name\", $\"img\").count().sort($\"count\".desc).limit(5).cache()\n                                             ^\n"
      },
      "dateCreated": "Sep 27, 2015 4:17:09 AM",
      "dateStarted": "Sep 27, 2015 4:17:12 AM",
      "dateFinished": "Sep 27, 2015 4:17:12 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Save in ElasticSearch",
      "text": "import org.elasticsearch.spark.sql._ \nval esConfig \u003d Map(\"pushdown\" -\u003e \"true\", \"es.nodes\" -\u003e \"demo.fluxcapacitor.com\", \"es.port\" -\u003e \"39200\")\nmostDesirableUsersByLikeCountDF.write.format(\"org.elasticsearch.spark.sql\").mode(SaveMode.Overwrite).options(esConfig).save(\"fluxcapacitor/top-users-by-count\")",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435995768565_760353753",
      "id": "20150704-074248_89399310",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "import org.elasticsearch.spark.sql._\nesConfig: scala.collection.immutable.Map[String,String] \u003d Map(pushdown -\u003e true, es.nodes -\u003e demo.fluxcapacitor.com, es.port -\u003e 39200)\n\u003cconsole\u003e:54: error: not found: value mostDesirableUsersByLikeCountDF\n              mostDesirableUsersByLikeCountDF.write.format(\"org.elasticsearch.spark.sql\").mode(SaveMode.Overwrite).options(esConfig).save(\"fluxcapacitor/top-users-by-count\")\n              ^\n"
      },
      "dateCreated": "Jul 4, 2015 7:42:48 AM",
      "dateStarted": "Sep 27, 2015 4:34:35 AM",
      "dateFinished": "Sep 27, 2015 4:34:35 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1443325831704_2093931080",
      "id": "20150927-035031_1373657975",
      "dateCreated": "Sep 27, 2015 3:50:31 AM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "1. Aggregations: Top-K Recommendations",
  "id": "2AUUDPT56",
  "angularObjects": {},
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}