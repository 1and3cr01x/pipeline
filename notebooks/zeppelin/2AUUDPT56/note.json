{
  "paragraphs": [
    {
      "title": "Import Dependencies",
      "text": "%dep\nz.reset()\nz.addRepo(\"maven central\").url(\"search.maven.org\")\nz.load(\"com.datastax.spark:spark-cassandra-connector_2.10:1.4.0\")\nz.load(\"org.elasticsearch:elasticsearch-spark_2.10:2.1.0\")\nz.load(\"com.databricks:spark-csv_2.10:1.2.0\")\nz.load(\"org.apache.spark:spark-streaming-kafka-assembly_2.10:1.5.1\")\nz.load(\"/root/zeppelin-0.6.0-spark-1.5.1-hadoop-2.6.0-fluxcapacitor/lib/mysql-connector-java.jar\")\nz.load(\"/root/pipeline/myapps/simpledatasource/target/scala-2.10/simpledatasource_2.10-1.0.jar\")",
      "dateUpdated": "Oct 15, 2015 6:32:00 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435904425694_1044927616",
      "id": "20150703-062025_1689760268",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "Must be used before SparkInterpreter (%spark) initialized"
      },
      "dateCreated": "Jul 3, 2015 6:20:25 AM",
      "dateStarted": "Oct 15, 2015 6:32:00 PM",
      "dateFinished": "Oct 15, 2015 6:32:00 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Populate ActressesAndActorsDF Reference Data created in Earlier Setup Reference Data Notebook",
      "text": "val actressesAndActorsDF \u003d sqlContext.sql(\"SELECT id, name, bio, img FROM actresses_and_actors_perm\")\nactressesAndActorsDF.show(30)",
      "dateUpdated": "Oct 17, 2015 11:43:26 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1445082028303_-2088975818",
      "id": "20151017-114028_278811533",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "actressesAndActorsDF: org.apache.spark.sql.DataFrame \u003d [id: bigint, name: string, bio: string, img: string]\n+-----+--------------------+--------------------+--------------------+\n|   id|                name|                 bio|                 img|\n+-----+--------------------+--------------------+--------------------+\n|10001|   Leonardo DiCaprio|Few actors in the...|img/people/10001.jpg|\n|10002|     Anthony Hopkins|Anthony Hopkins w...|img/people/10002.jpg|\n|10003|           Al Pacino|One of the greate...|img/people/10003.jpg|\n|10004|      Morgan Freeman|With an authorita...|img/people/10004.jpg|\n|10005|    James Gandolfini|James Gandolfini ...|img/people/10005.jpg|\n|10006|       Marlon Brando|Marlon Brando is ...|img/people/10006.jpg|\n|10007|   Denzel Washington|Denzel Hayes Wash...|img/people/10007.jpg|\n|10008|      Robert De Niro|Robert De Niro, t...|img/people/10008.jpg|\n|10009|    Chazz Palminteri|Bronx-born and ra...|img/people/10009.jpg|\n|10010|           Tom Hanks|Thomas Jeffrey Ha...|img/people/10010.jpg|\n|10011|       John Travolta|John Travolta was...|img/people/10011.jpg|\n|10012|         Johnny Depp|Johnny Depp is pe...|img/people/10012.jpg|\n|10013|       Mark Wahlberg|American actor Ma...|img/people/10013.jpg|\n|10014|        James Franco|Known for his bre...|img/people/10014.jpg|\n|10015|          Clive Owen|Darkly handsome B...|img/people/10015.jpg|\n|90001|         Linda Blair|From the age of f...|img/people/90001.jpg|\n|90002|      Shannon Whirry|Shannon Whirry is...|img/people/90002.jpg|\n|90003|      Rosalind Allen|Rosalind Allen (b...|img/people/90003.jpg|\n|90004|     Bobbie Phillips|Brains and beauty...|img/people/90004.jpg|\n|90005|Keshia Knight Pul...|Keshia Knight Pul...|img/people/90005.jpg|\n|90006|         Tatyana Ali|On January 24, 19...|img/people/90006.jpg|\n|90007|      Angell Conwell|Born in the tiny ...|img/people/90007.jpg|\n|90008|  Shannah Laumeister|Shannah Laumeiste...|img/people/90008.jpg|\n|90009|           Pam Grier|Pam Grier was bor...|img/people/90009.jpg|\n|90010|    Tiffani Thiessen|Tiffani-Amber Thi...|img/people/90010.jpg|\n|90011|         Ashley Judd|Ashley Judd was b...|img/people/90011.jpg|\n|90012|         Stacey Dash|Stacey Dash was b...|img/people/90012.jpg|\n|90013|       Sofía Vergara|Sofía Margarita V...|img/people/90013.jpg|\n|90014|         Gail OGrady|Gail OGrady was b...|img/people/90014.jpg|\n|90015|       Barbara Niven|Barbara Niven was...|img/people/90015.jpg|\n+-----+--------------------+--------------------+--------------------+\n\n"
      },
      "dateCreated": "Oct 17, 2015 11:40:28 AM",
      "dateStarted": "Oct 17, 2015 11:42:44 AM",
      "dateFinished": "Oct 17, 2015 11:42:45 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Read the real-time Likes coming from kafka",
      "text": "val cassandraConfig \u003d Map(\"keyspace\" -\u003e \"fluxcapacitor\", \"table\" -\u003e \"likes\")\nval likesDF \u003d sqlContext.read.format(\"org.apache.spark.sql.cassandra\").options(cassandraConfig).load().toDF(\"from_user_id\", \"to_user_id\", \"batch_time\")",
      "dateUpdated": "Oct 15, 2015 7:02:52 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435900511434_-2036302443",
      "id": "20150703-051511_2118186706",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "cassandraConfig: scala.collection.immutable.Map[String,String] \u003d Map(keyspace -\u003e fluxcapacitor, table -\u003e likes)\nlikesDF: org.apache.spark.sql.DataFrame \u003d [from_user_id: int, to_user_id: int, batch_time: bigint]\n"
      },
      "dateCreated": "Jul 3, 2015 5:15:11 AM",
      "dateStarted": "Oct 15, 2015 7:02:52 PM",
      "dateFinished": "Oct 15, 2015 7:02:53 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Current count of real-time likes",
      "text": "likesDF.count()",
      "dateUpdated": "Oct 16, 2015 12:19:48 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435903555217_1061802373",
      "id": "20150703-060555_1147518830",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "res230: Long \u003d 188\n"
      },
      "dateCreated": "Jul 3, 2015 6:05:55 AM",
      "dateStarted": "Oct 16, 2015 12:19:48 PM",
      "dateFinished": "Oct 16, 2015 12:19:48 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Use the dataFrame API to query the real-time likes",
      "text": "likesDF.select(\"from_user_id\", \"to_user_id\", \"batch_time\").collect().mkString(\"\\n\")",
      "dateUpdated": "Oct 15, 2015 6:32:00 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false,
        "editorHide": false,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435903580253_1496599278",
      "id": "20150703-060620_2086361325",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "res147: String \u003d \n[45804,10002,1444850350000]\n[45804,10004,1444850350000]\n[45804,10005,1444850352000]\n[45804,90003,1444850346000]\n[45804,90005,1444850346000]\n[45804,90010,1444850348000]\n[51155,10007,1444932116000]\n[51155,10008,1444932116000]\n[51155,10011,1444932116000]\n[51155,90001,1444932118000]\n[51155,90009,1444932120000]\n[51155,90010,1444932120000]\n[85934,10001,1444893784000]\n[85934,10006,1444893788000]\n[85934,10007,1444893790000]\n[85934,10012,1444893798000]\n[85934,10014,1444893800000]\n[85934,10015,1444893802000]\n[85934,90001,1444893760000]\n[85934,90002,1444893760000]\n[85934,90004,1444893762000]\n[85934,90006,1444893766000]\n[85934,90007,1444893770000]\n[85934,90012,1444893774000]\n[85934,90013,1444893780000]\n[85934,90014,1444893780000]\n[53708,10009,1444883942000]\n[53708,10011,1444883942..."
      },
      "dateCreated": "Jul 3, 2015 6:06:20 AM",
      "dateStarted": "Oct 15, 2015 6:32:01 PM",
      "dateFinished": "Oct 15, 2015 6:32:02 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Show number of distinct Real-time participating users",
      "text": "import org.apache.spark.sql.functions._\n\nlikesDF.select(countDistinct($\"from_user_id\").as(\"distinct_user_count\")).collect()(0)",
      "dateUpdated": "Oct 16, 2015 12:19:32 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435903786952_671772613",
      "id": "20150703-060946_1260514447",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.apache.spark.sql.functions._\nres228: org.apache.spark.sql.Row \u003d [29]\n"
      },
      "dateCreated": "Jul 3, 2015 6:09:46 AM",
      "dateStarted": "Oct 16, 2015 12:19:32 PM",
      "dateFinished": "Oct 16, 2015 12:19:33 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "register the real-time likes as a temp table",
      "text": "likesDF.cache()\nlikesDF.registerTempTable(\"likes_temp\")",
      "dateUpdated": "Oct 15, 2015 7:03:16 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435904979849_80174944",
      "id": "20150703-062939_414600917",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "res185: likesDF.type \u003d [from_user_id: int, to_user_id: int, batch_time: bigint]\n"
      },
      "dateCreated": "Jul 3, 2015 6:29:39 AM",
      "dateStarted": "Oct 15, 2015 7:03:16 PM",
      "dateFinished": "Oct 15, 2015 7:03:17 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Show Most desirable users by Like Count",
      "text": "%sql SELECT name, count(to_user_id) as count FROM likes_temp JOIN actresses_and_actors_perm ON (likes_temp.to_user_id \u003d actresses_and_actors_perm.id) GROUP BY name HAVING count \u003e 10 ORDER BY count DESC",
      "dateUpdated": "Oct 15, 2015 7:03:35 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "multiBarChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "name",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "count",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "name",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "count",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "title": true,
        "tableHide": false,
        "editorHide": false,
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435904577933_-1977276639",
      "id": "20150703-062257_361919402",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "name\tcount\nSofía Vergara\t16\nGail OGrady\t13\nMorgan Freeman\t12\nRobert De Niro\t12\nLeonardo DiCaprio\t12\nAshley Judd\t11\n"
      },
      "dateCreated": "Jul 3, 2015 6:22:57 AM",
      "dateStarted": "Oct 15, 2015 7:03:35 PM",
      "dateFinished": "Oct 15, 2015 7:03:36 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md ### Compare The Physical Plans Between DataFrames And SQL (Should Be Equal)",
      "dateUpdated": "Oct 15, 2015 6:32:00 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1438120230768_-497996483",
      "id": "20150728-215030_753792481",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003eCompare The Physical Plans Between DataFrames And SQL (Should Be Equal)\u003c/h3\u003e\n"
      },
      "dateCreated": "Jul 28, 2015 9:50:30 PM",
      "dateStarted": "Oct 15, 2015 6:32:00 PM",
      "dateFinished": "Oct 15, 2015 6:32:00 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Explain Plan for SQL Query",
      "text": "sqlContext.sql(\"SELECT count(to_user_id) as count FROM likes_temp GROUP BY to_user_id ORDER BY count DESC\").explain(true)",
      "dateUpdated": "Oct 15, 2015 7:05:40 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "title": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435904897005_-1761757602",
      "id": "20150703-062817_715212992",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\u003d\u003d Parsed Logical Plan \u003d\u003d\n\u0027Sort [\u0027count DESC], true\n \u0027Aggregate [\u0027to_user_id], [unresolvedalias(\u0027count(\u0027to_user_id) AS count#646)]\n  \u0027UnresolvedRelation [likes_temp], None\n\n\u003d\u003d Analyzed Logical Plan \u003d\u003d\ncount: bigint\nSort [count#646L DESC], true\n Aggregate [to_user_id#575], [count(to_user_id#575) AS count#646L]\n  Subquery likes_temp\n   Project [fromuserid#571 AS from_user_id#574,touserid#572 AS to_user_id#575,batchtime#573L AS batch_time#576L]\n    Relation[fromuserid#571,touserid#572,batchtime#573L] org.apache.spark.sql.cassandra.CassandraSourceRelation@55cc6c35\n\n\u003d\u003d Optimized Logical Plan \u003d\u003d\nSort [count#646L DESC], true\n Aggregate [to_user_id#575], [count(to_user_id#575) AS count#646L]\n  Project [to_user_id#575]\n   InMemoryRelation [from_user_id#574,to_user_id#575,batch_time#576L], true, 10000, StorageLevel(true, true, false, true, 1), (Project [fromuserid#571 AS from_user_id#574,touserid#572 AS to_user_id#575,batchtime#573L AS batch_time#576L]), None\n\n\u003d\u003d Physical Plan \u003d\u003d\nTungstenSort [count#646L DESC], true, 0\n ConvertToUnsafe\n  Exchange rangepartitioning(count#646L DESC)\n   ConvertToSafe\n    TungstenAggregate(key\u003d[to_user_id#575], functions\u003d[(count(to_user_id#575),mode\u003dFinal,isDistinct\u003dfalse)], output\u003d[count#646L])\n     TungstenExchange hashpartitioning(to_user_id#575)\n      TungstenAggregate(key\u003d[to_user_id#575], functions\u003d[(count(to_user_id#575),mode\u003dPartial,isDistinct\u003dfalse)], output\u003d[to_user_id#575,currentCount#667L])\n       InMemoryColumnarTableScan [to_user_id#575], (InMemoryRelation [from_user_id#574,to_user_id#575,batch_time#576L], true, 10000, StorageLevel(true, true, false, true, 1), (Project [fromuserid#571 AS from_user_id#574,touserid#572 AS to_user_id#575,batchtime#573L AS batch_time#576L]), None)\n\nCode Generation: true\n"
      },
      "dateCreated": "Jul 3, 2015 6:28:17 AM",
      "dateStarted": "Oct 15, 2015 7:05:40 PM",
      "dateFinished": "Oct 15, 2015 7:05:40 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Explain Plan for DataFrame Query",
      "text": "likesDF.groupBy(\"to_user_id\").count().as(\"ct\").sort($\"count\".desc).explain()",
      "dateUpdated": "Oct 15, 2015 6:32:00 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435904813656_1068531928",
      "id": "20150703-062653_388339500",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\u003d\u003d Physical Plan \u003d\u003d\nTungstenSort [count#433L DESC], true, 0\n ConvertToUnsafe\n  Exchange rangepartitioning(count#433L DESC)\n   ConvertToSafe\n    TungstenAggregate(key\u003d[to_user_id#361], functions\u003d[(count(1),mode\u003dFinal,isDistinct\u003dfalse)], output\u003d[to_user_id#361,count#433L])\n     TungstenExchange hashpartitioning(to_user_id#361)\n      TungstenAggregate(key\u003d[to_user_id#361], functions\u003d[(count(1),mode\u003dPartial,isDistinct\u003dfalse)], output\u003d[to_user_id#361,currentCount#452L])\n       InMemoryColumnarTableScan [to_user_id#361], (InMemoryRelation [from_user_id#360,to_user_id#361,batch_time#362L], true, 10000, StorageLevel(true, true, false, true, 1), (Project [fromuserid#357 AS from_user_id#360,touserid#358 AS to_user_id#361,batchtime#359L AS batch_time#362L]), None)\n"
      },
      "dateCreated": "Jul 3, 2015 6:26:53 AM",
      "dateStarted": "Oct 15, 2015 6:32:04 PM",
      "dateFinished": "Oct 15, 2015 6:32:05 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md ### Generate Top-K Recommendations",
      "dateUpdated": "Oct 15, 2015 6:32:00 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1443327931442_-1682486349",
      "id": "20150927-042531_810181892",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003eGenerate Top-K Recommendations\u003c/h3\u003e\n"
      },
      "dateCreated": "Sep 27, 2015 4:25:31 AM",
      "dateStarted": "Oct 15, 2015 6:32:00 PM",
      "dateFinished": "Oct 15, 2015 6:32:00 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Enrich Real-Time Likes With Actress And Actors Reference Data",
      "text": "val enrichedLikesDF \u003d likesDF.join(actressesAndActorsDF, $\"to_user_id\" \u003d\u003d\u003d $\"id\").select($\"from_user_id\", $\"to_user_id\", $\"name\", $\"bio\", $\"img\").cache()\nenrichedLikesDF.collect()",
      "dateUpdated": "Oct 15, 2015 7:11:34 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1438122122445_605191340",
      "id": "20150728-222202_1206474036",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "enrichedLikesDF: org.apache.spark.sql.DataFrame \u003d [from_user_id: int, to_user_id: int, name: string, bio: string, img: string]\nres190: Array[org.apache.spark.sql.Row] \u003d Array([37254,10008,Robert De Niro,Robert De Niro, thought of as one of the greatest American actors of all time, was born in New York City, to artists Virginia (Admiral) and Robert De Niro Sr. His paternal grandfather was of Italian descent, and his other ancestry is Irish, Dutch, English, French, and German. He was trained at the Stella Adler Conservatory and the American Workshop...,img/people/10008.jpg], [37254,90011,Ashley Judd,Ashley Judd was born on April 19, 1968 in Granada Hills, California, USA as Ashley Tyler Ciminella. She is an actress and producer, known for Divergent (2014), Heat (1995) and Double Jeopardy (1999). She was previously married to Dario Franchitti.,img/people/90011.jpg], [51325,90004,Bobbie Phillips,Brains and beauty a..."
      },
      "dateCreated": "Jul 28, 2015 10:22:02 PM",
      "dateStarted": "Oct 15, 2015 7:11:34 PM",
      "dateFinished": "Oct 15, 2015 7:11:35 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Aggregate Most Desirable Users By Like Count",
      "text": "val mostDesirableUsersByLikeCountDF \u003d enrichedLikesDF.select($\"to_user_id\", $\"name\", $\"img\").groupBy($\"to_user_id\".as(\"id\"), $\"name\", $\"img\").count().sort($\"count\".desc).limit(5).cache()",
      "dateUpdated": "Oct 15, 2015 7:11:42 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1443327429247_981995018",
      "id": "20150927-041709_316941617",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "mostDesirableUsersByLikeCountDF: org.apache.spark.sql.DataFrame \u003d [id: int, name: string, img: string, count: bigint]\n"
      },
      "dateCreated": "Sep 27, 2015 4:17:09 AM",
      "dateStarted": "Oct 15, 2015 7:11:42 PM",
      "dateFinished": "Oct 15, 2015 7:11:43 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Save in ElasticSearch",
      "text": "import org.elasticsearch.spark.sql._\n\nval esConfig \u003d Map(\"pushdown\" -\u003e \"true\", \"es.nodes\" -\u003e \"demo.fluxcapacitor.com\", \"es.port\" -\u003e \"39200\")\nmostDesirableUsersByLikeCountDF.write.format(\"org.elasticsearch.spark.sql\").mode(SaveMode.Overwrite).options(esConfig).save(\"fluxcapacitor/top-users-by-count\")",
      "dateUpdated": "Oct 15, 2015 7:12:06 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "title": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435995768565_760353753",
      "id": "20150704-074248_89399310",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.elasticsearch.spark.sql._\nesConfig: scala.collection.immutable.Map[String,String] \u003d Map(pushdown -\u003e true, es.nodes -\u003e demo.fluxcapacitor.com, es.port -\u003e 39200)\n"
      },
      "dateCreated": "Jul 4, 2015 7:42:48 AM",
      "dateStarted": "Oct 15, 2015 7:12:06 PM",
      "dateFinished": "Oct 15, 2015 7:12:12 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "",
      "dateUpdated": "Oct 15, 2015 6:32:53 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1443325831704_2093931080",
      "id": "20150927-035031_1373657975",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT"
      },
      "dateCreated": "Sep 27, 2015 3:50:31 AM",
      "dateStarted": "Oct 15, 2015 6:32:05 PM",
      "dateFinished": "Oct 15, 2015 6:32:05 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Likes 2: Aggregations: Top-K Recommendations",
  "id": "2AUUDPT56",
  "angularObjects": {
    "2AR33ZMZJ": [],
    "2AS9P7JSA": [],
    "2ARR8UZDJ": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}