FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04

WORKDIR /root

RUN \
  apt-get update \
  && apt-get install -y software-properties-common \
  && add-apt-repository -y ppa:openjdk-r/ppa \
  && apt-get update \
  && apt-get install -y --no-install-recommends openjdk-8-jdk openjdk-8-jre-headless \
  && apt-get install -y apt-transport-https \
  && apt-get install -y wget \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*

ENV \
  JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/

RUN \
  echo "deb https://dl.bintray.com/sbt/debian /" | tee -a /etc/apt/sources.list.d/sbt.list \
  && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823 \
  && apt-get update \
  && apt-get install -y sbt

RUN \
  sbt clean clean-files

RUN \
  wget http://apache.mirrors.tds.net/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz \
  && tar -xvzf apache-maven-3.3.9-bin.tar.gz \
  && rm apache-maven-3.3.9-bin.tar.gz

ENV \
  MAVEN_HOME=/root/apache-maven-3.3.9/

ENV \
  PATH=$MAVEN_HOME/bin:$PATH

ENV \
  BAZEL_VERSION=0.4.4 \
  TENSORFLOW_SERVING_VERSION=0.5.1
 
# TensorFlow Serving Home (not required on PATH)
ENV \
  TENSORFLOW_SERVING_HOME=/root/serving \
  TENSORFLOW_HOME=/root/serving/tensorflow

# Required by TensorFlow Serving
RUN \
  apt-get update && apt-get install -y \
        build-essential \
        curl \
        libcurl3-dev \
        git \
        libfreetype6-dev \
        libpng12-dev \
        libzmq3-dev \
        pkg-config \
        python-dev \
        python-numpy \
        python-pip \
        software-properties-common \
        swig \
        zip \
        zlib1g-dev

RUN \
  pip install grpcio

RUN \
  echo "build --spawn_strategy=standalone --genrule_strategy=standalone" >>/root/.bazelrc

ENV \
  BAZELRC=/root/.bazelrc

RUN \ 
  mkdir /root/bazel \
  && cd /root/bazel \
  && curl -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \
  && curl -fSsL -o /root/bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE.txt \
  && chmod +x bazel-*.sh \
  && ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \
  && rm bazel-$BAZEL_VERSION-installer-linux-x86_64.sh

# TensorFlow Serving
RUN \
 cd ~ \
 && git clone -b $TENSORFLOW_SERVING_VERSION --recurse-submodules https://github.com/tensorflow/serving.git

ENV CUDA_PATH /usr/local/cuda:$CUDA_PATH
ENV CUDA_TOOLKIT_PATH /usr/local/cuda:$CUDA_TOOLKIT_PATH
ENV CUDNN_INSTALL_PATH /usr/lib/x86_64-linux-gnu:$CUDNN_INSTALL_PATH
ENV TF_NEED_CUDA 1
ENV CI_BUILD_PYTHON python
ENV LD_LIBRARY_PATH /usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH
ENV TF_CUDA_COMPUTE_CAPABILITIES=3.0,3.5,5.2,6.0,6.1

#RUN \ 
#  apt-get install -y libcupti-dev

# https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/docker/Dockerfile.devel-gpu

#RUN \
#  cd $TENSORFLOW_HOME \
#  && printf "\n\n\n\n\n\n\n\n\n\nY\n\n\n\n\n\n\n" | ./configure \
#  && cd $TENSORFLOW_SERVING_HOME \
#  && bazel build -c opt --config=cuda tensorflow_serving/...

RUN \
  cd $TENSORFLOW_SERVING_HOME \
#  && ./$TENSORFLOW_HOME/tensorflow/tools/ci_build/builds/configured GPU \
  bazel build -c opt --config=cuda tensorflow_serving/...
#  bazel build -c opt --config=cuda tensorflow/tools/pip_package:build_pip_package && \
#  bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/pip && \
#  pip --no-cache-dir install --upgrade /tmp/pip/tensorflow-*.whl && \
#  rm -rf /tmp/pip && \
#  rm -rf /root/.cache

ENV \
  PATH=$TENSORFLOW_SERVING_HOME/bazel-bin/tensorflow_serving/model_servers/:$PATH

# Utility for optimizing/simplifying models for inference
#RUN \
#  cd $TENSORFLOW_HOME \
#  && bazel build tensorflow/python/tools:optimize_for_inference

# Install Python with conda
RUN wget -q https://repo.continuum.io/miniconda/Miniconda3-4.1.11-Linux-x86_64.sh -O /tmp/miniconda.sh  && \
    echo '874dbb0d3c7ec665adf7231bbb575ab2 */tmp/miniconda.sh' | md5sum -c - && \
    bash /tmp/miniconda.sh -f -b -p /opt/conda && \
    /opt/conda/bin/conda install --yes python=3.5 sqlalchemy tornado jinja2 traitlets requests pip && \
    /opt/conda/bin/pip install --upgrade pip && \
    rm /tmp/miniconda.sh

ENV \
  PATH=/opt/conda/bin:$PATH

RUN \
  conda install --yes openblas scikit-learn numpy scipy matplotlib pandas seaborn

ENV \
  TENSORFLOW_VERSION=1.0.1

RUN \
  pip install --ignore-installed --upgrade pip setuptools \
  && pip install --upgrade tensorflow-gpu==$TENSORFLOW_VERSION

RUN \
  apt-get update \
  && apt-get install -y python-qt4

RUN \
  mkdir -p /root/logs

ENV \
  LOGS_HOME=/root/logs

COPY run run
COPY src/ src/
COPY build.sbt build.sbt
COPY lib/ lib/
COPY client/ client/
#COPY store/ store/

RUN \
  cd client \
  && /root/apache-maven-3.3.9/bin/mvn clean install \
  && cp target/tensorflow-prediction-client-1.0-SNAPSHOT.jar ../lib

RUN \
  sbt clean package 

RUN \
  mkdir -p /root/tensorboard 

ENV \
  STORE_HOME=/root/store

EXPOSE 5678 6006 9000 9001 9002 9040 

#CMD ["supervise", "."]
