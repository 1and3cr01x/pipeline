{
  "paragraphs": [
    {
      "title": "Collaborative Filtering:  Matrix Factorization using Alternating Least Squares (ALS)",
      "text": "%md ![Alternating Least Squares - Matrix Factorization](https://s3.amazonaws.com/fluxcapacitor.com/img/collaborative-filtering-with-als-matrix-factorization.png)",
      "dateUpdated": "Mar 28, 2016 10:18:55 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1457905030101_1285078097",
      "id": "20160313-213710_1635189671",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "Interpreter md not found"
      },
      "dateCreated": "Mar 13, 2016 9:37:10 PM",
      "dateStarted": "Mar 17, 2016 12:56:59 AM",
      "dateFinished": "Mar 17, 2016 12:56:59 AM",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Get Reference Data for Enrichment",
      "text": "val itemsDF \u003d sqlContext.read.format(\"com.databricks.spark.csv\")\n  .option(\"header\", \"true\")\n  .option(\"inferSchema\", \"true\")\n  .load(\"file:/root/pipeline/datasets/movielens/ml-latest/movies.csv\")\n  .toDF(\"itemId\", \"title\", \"tags\")\n  .as(\"items\")\n\nz.show(itemsDF.select($\"itemId\", $\"title\", $\"tags\"))",
      "dateUpdated": "Mar 28, 2016 10:18:55 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "title": true,
        "graph": {
          "mode": "table",
          "height": 175.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "itemId",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "title",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "itemId",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "title",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1457905030102_1286232344",
      "id": "20160313-213710_539662782",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "Interpreter null not found"
      },
      "dateCreated": "Mar 13, 2016 9:37:10 PM",
      "dateStarted": "Mar 18, 2016 12:53:08 PM",
      "dateFinished": "Mar 18, 2016 12:53:08 PM",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Get Ratings",
      "text": "val itemRatingsDF \u003d sqlContext.read.format(\"com.databricks.spark.csv\")\n  .option(\"header\", \"true\")\n  .option(\"inferSchema\", \"true\")\n  .load(\"file:/root/pipeline/datasets/movielens/ml-latest/ratings.csv\")\n  .toDF(\"userId\", \"itemId\", \"rating\", \"timestamp\")\n  .as(\"itemRatings\")\n  \nz.show(itemsDF.select($\"itemId\", $\"title\", $\"tags\"))",
      "dateUpdated": "Mar 28, 2016 10:18:55 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1457905030102_1286232344",
      "id": "20160313-213710_1348231886",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "Interpreter null not found"
      },
      "dateCreated": "Mar 13, 2016 9:37:10 PM",
      "dateStarted": "Mar 18, 2016 12:53:37 PM",
      "dateFinished": "Mar 18, 2016 12:53:59 PM",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Train The ALS Model",
      "text": "import org.apache.spark.ml.recommendation.ALS\n\nval rank \u003d 10 // this is k\nval maxIterations \u003d 5\nval convergenceThreshold \u003d 0.01\n\nval als \u003d new ALS()\n  .setRank(rank)\n  .setRegParam(convergenceThreshold)\n  .setUserCol(\"userId\")\n  .setItemCol(\"itemId\")\n  .setRatingCol(\"rating\")\n\nval model \u003d als.fit(itemRatingsDF)",
      "dateUpdated": "Mar 28, 2016 10:18:55 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1457905030102_1286232344",
      "id": "20160313-213710_1491838569",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "Interpreter null not found"
      },
      "dateCreated": "Mar 13, 2016 9:37:10 PM",
      "dateStarted": "Mar 18, 2016 12:54:27 PM",
      "dateFinished": "Mar 18, 2016 12:57:46 PM",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Show User Factors Matrix",
      "text": "val userFactorsDF \u003d model.userFactors.sort($\"id\")\n\nz.show(userFactorsDF)",
      "dateUpdated": "Mar 28, 2016 10:18:55 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "title": true,
        "graph": {
          "mode": "pieChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "id",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "features",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "id",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "features",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1457905030102_1286232344",
      "id": "20160313-213710_22609128",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "Interpreter null not found"
      },
      "dateCreated": "Mar 13, 2016 9:37:10 PM",
      "dateStarted": "Mar 18, 2016 12:59:14 PM",
      "dateFinished": "Mar 18, 2016 12:59:15 PM",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Show ItemFactors Matrix",
      "text": "val itemFactorsDF \u003d model.itemFactors.sort($\"id\")\n\nz.show(itemFactorsDF)",
      "dateUpdated": "Mar 28, 2016 10:18:55 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "title": true,
        "graph": {
          "mode": "table",
          "height": 314.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "id",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "features",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "id",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "features",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1457905030102_1286232344",
      "id": "20160313-213710_1967874580",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "Interpreter null not found"
      },
      "dateCreated": "Mar 13, 2016 9:37:10 PM",
      "dateStarted": "Mar 18, 2016 12:59:41 PM",
      "dateFinished": "Mar 18, 2016 12:59:42 PM",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Generate Personalized Recommendations For All Users",
      "text": "model.setPredictionCol(\"confidence\")\nval recommendationsDF \u003d model.transform(itemRatingsDF.select($\"userId\", $\"itemId\")).toDF(\"userId\", \"recommendedItemId\", \"confidence\")\n\nval enrichedRecommendationsDF \u003d \n   recommendationsDF.join(itemsDF, $\"itemId\" \u003d\u003d\u003d $\"recommendedItemId\")\n   .select($\"userId\", $\"recommendedItemId\", $\"title\", $\"tags\", $\"confidence\")\n   .sort($\"userId\", $\"recommendedItemId\", $\"confidence\" desc)\n   \nz.show(enrichedRecommendationsDF.select($\"userId\", $\"recommendedItemId\", $\"title\", $\"confidence\"))",
      "dateUpdated": "Mar 28, 2016 10:18:55 PM",
      "config": {
        "tableHide": false,
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 284.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "userId",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "userId",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1457905030102_1286232344",
      "id": "20160313-213710_1177695329",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "Interpreter null not found"
      },
      "dateCreated": "Mar 13, 2016 9:37:10 PM",
      "dateStarted": "Mar 18, 2016 1:00:03 PM",
      "dateFinished": "Mar 18, 2016 1:00:52 PM",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "userFactor Vector dot product ItemFactor vector ",
      "text": "import org.jblas.DoubleMatrix\n\n// ItemId 318:  Shawshank Redemption\nval anItemFeatureArray \u003d model.itemFactors.select($\"id\".as(\"itemId\"), $\"features\".as(\"itemFeatures\"))\n  .where($\"itemId\" \u003d\u003d\u003d 318).flatMap(row \u003d\u003e row.getSeq[Float](1)).map(_.toDouble).collect()\n\n// UserId 1\nval aUserFeatureArray \u003d model.userFactors.select($\"id\".as(\"userId\"), $\"features\".as(\"userFeatures\"))\n  .where($\"userId\" \u003d\u003d\u003d 1).flatMap(row \u003d\u003e row.getSeq[Float](1)).map(_.toDouble).collect()\n\n// Create JBlas DoubleMatrix\nval aUserFeatureVector \u003d new DoubleMatrix(aUserFeatureArray)\nval anItemFeatureVector \u003d new DoubleMatrix(anItemFeatureArray)\n\n// Take dot product of the User x Item vectors\n// This should equal the confidence value in the offline-generated matrix\nval confidence \u003d aUserFeatureVector.dot(anItemFeatureVector)",
      "dateUpdated": "Mar 28, 2016 10:18:55 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1457905030102_1286232344",
      "id": "20160313-213710_1139739168",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "Interpreter null not found"
      },
      "dateCreated": "Mar 13, 2016 9:37:10 PM",
      "dateStarted": "Mar 18, 2016 1:03:13 PM",
      "dateFinished": "Mar 18, 2016 1:03:14 PM",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "dateUpdated": "Mar 28, 2016 10:18:55 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1457905030102_1286232344",
      "id": "20160313-213710_727947389",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "Interpreter null not found"
      },
      "dateCreated": "Mar 13, 2016 9:37:10 PM",
      "dateStarted": "Mar 17, 2016 1:00:57 AM",
      "dateFinished": "Mar 17, 2016 1:00:57 AM",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Recommendations/01: User-to-Item Collaborative Filtering (ALS)",
  "id": "2BF4C1KPJ",
  "angularObjects": {},
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}