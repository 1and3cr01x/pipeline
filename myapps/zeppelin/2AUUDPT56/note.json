{
  "paragraphs": [
    {
      "title": "Load Reference Data for Enrichment",
      "text": "val itemsDF \u003d sqlContext.read.format(\"json\")\n  .load(\"file:/root/pipeline/html/advancedspark.com/json/software.json\")\n\nz.show(itemsDF.select($\"id\", $\"title\", $\"img\", $\"tags\").limit(10))",
      "dateUpdated": "Apr 23, 2016 2:26:38 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 180.0,
          "optionOpen": true,
          "keys": [
            {
              "name": "id",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "title",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "id",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "title",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "title": true,
        "enabled": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1448389076669_946770032",
      "id": "20151124-181756_1657385240",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "id\ttitle\timg\ttags\n1\tApache Cassandra\timg/software/cassandra.png\tWrappedArray(Database, NoSQL, Java, Eventually Consistent, Transactional)\n2\tTachyon\timg/software/tachyon.png\tWrappedArray(Distributed Cache, Object Store, S3, Swift, HDFS)\n3\tApache Ambari\timg/software/ambari.png\tWrappedArray(Cluster Provision, Hadoop, Cluster Monitoring, REST API, Metrics, Alerts)\n4\tDocker\timg/software/docker.png\tWrappedArray(Container, Linux, DevOps, Deployment)\n5\tMicrosft Azure\timg/software/azure.png\tWrappedArray(Cloud Provider, Microsoft)\n6\tApache Flink\timg/software/flink.png\tWrappedArray(Data Processing, Java, Scala, SQL, DataFrame, Table, Streaming Analytics, Batch Analytics, Machine Learning, Graph Analytics, Approximations, Sampling)\n7\tApache Spark\timg/software/spark.png\tWrappedArray(Data Processing, Java, Scala, SQL, R, Python, DataFrame, Table, DataStream, Streaming Analytics, Batch Analytics, Machine Learning, Graph Analytics, Approximations, Sampling, Lazy)\n8\tApache Flume\timg/software/flume.png\tWrappedArray(Library, Java, Log Collection)\n9\tApache Giraph\timg/software/giraph.png\tWrappedArray(Library, Java, Graph Analytics, Batch)\n10\tApache HDFS\timg/software/hdfs.png\tWrappedArray(File System, Hadoop, Java)\n"
      },
      "dateCreated": "Nov 24, 2015 6:17:56 PM",
      "dateStarted": "Apr 23, 2016 2:26:39 AM",
      "dateFinished": "Apr 23, 2016 2:26:43 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Get Live Ratings from Cassandra",
      "text": "val cassandraConfig \u003d Map(\"keyspace\" -\u003e \"advancedspark\", \"table\" -\u003e \"item_ratings\")\n\nval itemRatingsDF \u003d sqlContext.read.format(\"org.apache.spark.sql.cassandra\")\n  .options(cassandraConfig)\n  .load()\n  .toDF(\"userId\", \"itemId\", \"rating\", \"timestamp\")",
      "dateUpdated": "Apr 23, 2016 2:30:14 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false,
        "editorMode": "ace/mode/scala",
        "enabled": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435900511434_-2036302443",
      "id": "20150703-051511_2118186706",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "cassandraConfig: scala.collection.immutable.Map[String,String] \u003d Map(keyspace -\u003e advancedspark, table -\u003e item_ratings)\nitemRatingsDF: org.apache.spark.sql.DataFrame \u003d [userId: int, itemId: int, rating: int, timestamp: bigint]\n"
      },
      "dateCreated": "Jul 3, 2015 5:15:11 AM",
      "dateStarted": "Apr 23, 2016 2:30:14 AM",
      "dateFinished": "Apr 23, 2016 2:30:15 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "z.show(itemRatingsDF)",
      "dateUpdated": "Apr 23, 2016 2:27:29 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "rating",
              "index": 2.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "userId",
              "index": 0.0,
              "aggr": "count"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "userId",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "itemId",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461378368245_-1276536270",
      "id": "20160423-022608_673297080",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "userId\titemId\trating\ttimestamp\n49360\t5\t1\t1460676654000\n49360\t7\t1\t1460676582000\n49360\t42\t1\t1460676574000\n49360\t47\t1\t1460676664000\n49360\t54\t1\t1460676620000\n49360\t70\t1\t1460676646000\n53734\t12\t1\t1460752840000\n53734\t63\t1\t1460752842000\n53734\t79\t1\t1460752870000\n34063\t21\t1\t1460676560000\n34063\t24\t1\t1460676562000\n34063\t29\t1\t1460676566000\n34063\t35\t1\t1460676568000\n34063\t36\t1\t1460676570000\n34063\t37\t1\t1460676572000\n34063\t41\t1\t1460676576000\n34063\t44\t1\t1460676580000\n34063\t49\t1\t1460676594000\n34063\t50\t1\t1460676578000\n34063\t52\t1\t1460676592000\n34063\t54\t1\t1460676582000\n34063\t74\t1\t1460676608000\n34063\t77\t1\t1460676624000\n99839\t7\t1\t1460676556000\n99839\t10\t1\t1460676552000\n99839\t11\t1\t1460676554000\n99839\t18\t1\t1460676558000\n99839\t31\t1\t1460676604000\n99839\t69\t1\t1460676564000\n99839\t77\t1\t1460676568000\n29427\t1\t1\t1460676622000\n29427\t18\t1\t1460676600000\n29427\t21\t1\t1460676602000\n29427\t42\t1\t1460676680000\n29427\t51\t1\t1460676628000\n29427\t52\t1\t1460676958000\n6437\t27\t1\t1460676664000\n6437\t33\t1\t1460676670000\n6437\t42\t1\t1460676672000\n6437\t61\t1\t1460676678000\n6437\t65\t1\t1460676920000\n6437\t69\t1\t1460676686000\n86868\t7\t1\t1460676718000\n86868\t20\t1\t1460676872000\n86868\t59\t1\t1460676694000\n86868\t62\t1\t1460676868000\n86868\t63\t1\t1460676868000\n86868\t70\t1\t1460676876000\n96971\t1\t1\t1460763032000\n96971\t7\t1\t1460763036000\n96971\t18\t1\t1460763038000\n96971\t20\t1\t1460763040000\n96971\t44\t1\t1460763046000\n56348\t39\t1\t1460676624000\n56348\t40\t1\t1460676630000\n56348\t44\t1\t1460676642000\n56348\t49\t1\t1460676656000\n56348\t52\t1\t1460676624000\n56348\t64\t1\t1460676678000\n56348\t77\t1\t1460676676000\n37477\t38\t1\t1460677094000\n37022\t7\t1\t1460676692000\n37022\t20\t1\t1460676656000\n37022\t24\t1\t1460676788000\n37022\t28\t1\t1460676626000\n37022\t33\t1\t1460677644000\n37022\t42\t1\t1460676650000\n37022\t43\t1\t1460676648000\n37022\t69\t1\t1460676668000\n37022\t76\t1\t1460676670000\n25639\t2\t1\t1460676656000\n25639\t7\t1\t1460676662000\n25639\t9\t1\t1460676154000\n25639\t14\t1\t1460676318000\n25639\t15\t1\t1460676686000\n25639\t17\t1\t1460676686000\n25639\t18\t1\t1460676664000\n25639\t33\t1\t1460676448000\n25639\t45\t1\t1460676084000\n25639\t60\t1\t1460676132000\n25639\t61\t1\t1460676834000\n96340\t7\t1\t1460676578000\n96340\t8\t1\t1460676610000\n96340\t10\t1\t1460676586000\n96340\t11\t1\t1460676586000\n96340\t12\t1\t1460676560000\n96340\t13\t1\t1460676562000\n96340\t14\t1\t1460676564000\n96340\t16\t1\t1460676576000\n96340\t17\t1\t1460676582000\n96340\t18\t1\t1460676580000\n96340\t20\t1\t1460676584000\n96340\t27\t1\t1460676576000\n96340\t32\t1\t1460676588000\n96340\t33\t1\t1460676588000\n96340\t42\t1\t1460676612000\n96340\t47\t1\t1460676566000\n96340\t49\t1\t1460676574000\n96340\t52\t1\t1460676614000\n96340\t53\t1\t1460676614000\n96340\t60\t1\t1460676660000\n96340\t61\t1\t1460676574000\n96340\t62\t1\t1460676572000\n96340\t63\t1\t1460676572000\n96340\t64\t1\t1460676616000\n8910\t1\t1\t1460670952000\n8910\t7\t1\t1460670964000\n8910\t9\t1\t1460670952000\n8910\t10\t1\t1460670952000\n8910\t14\t1\t1460670954000\n8910\t15\t1\t1460670954000\n8910\t16\t1\t1460670952000\n27569\t1\t1\t1460677316000\n27569\t2\t1\t1460677318000\n27569\t21\t1\t1460676674000\n27569\t28\t1\t1460676678000\n27569\t37\t1\t1460676680000\n27569\t40\t1\t1460676682000\n27569\t44\t1\t1460676686000\n27569\t62\t1\t1460676690000\n17841\t9\t1\t1460676606000\n17841\t11\t1\t1460676606000\n17841\t12\t1\t1460676608000\n17841\t14\t1\t1460676610000\n17841\t39\t1\t1460676620000\n17841\t40\t1\t1460676622000\n17841\t42\t1\t1460676624000\n17841\t44\t1\t1460676624000\n17841\t63\t1\t1460676632000\n27045\t1\t1\t1460676672000\n27045\t7\t1\t1460676668000\n27045\t18\t1\t1460676678000\n27045\t20\t1\t1460676680000\n27045\t42\t1\t1460676686000\n27045\t60\t1\t1460676874000\n27045\t62\t1\t1460676862000\n27045\t63\t1\t1460676862000\n27045\t70\t1\t1460676858000\n27045\t79\t1\t1460676884000\n5342\t25\t1\t1460676660000\n5342\t33\t1\t1460676658000\n5342\t34\t1\t1460676658000\n5342\t40\t1\t1460676662000\n5342\t50\t1\t1460676656000\n5342\t62\t1\t1460676652000\n5342\t63\t1\t1460676652000\n5342\t66\t1\t1460676652000\n5342\t67\t1\t1460676650000\n5342\t72\t1\t1460676650000\n73744\t7\t1\t1460675948000\n73744\t18\t1\t1460675942000\n73744\t28\t1\t1460675922000\n73744\t34\t1\t1460675910000\n73744\t68\t1\t1460675930000\n23426\t11\t1\t1460676766000\n23426\t18\t1\t1460676770000\n23426\t42\t1\t1460676740000\n23426\t63\t1\t1460676814000\n23426\t69\t1\t1460676812000\n23426\t70\t1\t1460676754000\n3969\t3\t1\t1460676594000\n3969\t7\t1\t1460676596000\n3969\t8\t1\t1460676598000\n3969\t10\t1\t1460676598000\n3969\t11\t1\t1460676598000\n3969\t12\t1\t1460676600000\n3969\t14\t1\t1460676602000\n3969\t15\t1\t1460676600000\n3969\t18\t1\t1460676602000\n3969\t25\t1\t1460676604000\n3969\t28\t1\t1460676606000\n3969\t29\t1\t1460676608000\n3969\t34\t1\t1460676652000\n3969\t38\t1\t1460676610000\n3969\t41\t1\t1460676612000\n3969\t42\t1\t1460676612000\n3969\t51\t1\t1460676614000\n3969\t52\t1\t1460676614000\n3969\t54\t1\t1460676614000\n3969\t61\t1\t1460676618000\n3969\t62\t1\t1460676618000\n3969\t63\t1\t1460676618000\n80675\t6\t1\t1460726666000\n80675\t7\t1\t1460726668000\n28567\t7\t1\t1460676602000\n28567\t11\t1\t1460676616000\n28567\t35\t1\t1460676612000\n28567\t61\t1\t1460676628000\n28567\t74\t1\t1460676642000\n28567\t78\t1\t1460676676000\n82510\t7\t1\t1460676618000\n82510\t21\t1\t1460676588000\n82510\t52\t1\t1460676644000\n82510\t53\t1\t1460676646000\n82510\t54\t1\t1460676642000\n82510\t62\t1\t1460676626000\n82510\t63\t1\t1460676626000\n82510\t69\t1\t1460676628000\n82510\t74\t1\t1460676632000\n54801\t19\t1\t1460676616000\n54801\t29\t1\t1460676624000\n54801\t35\t1\t1460676788000\n54801\t36\t1\t1460676632000\n54801\t37\t1\t1460676634000\n54801\t40\t1\t1460676636000\n54801\t41\t1\t1460676638000\n54801\t64\t1\t1460676654000\n54801\t73\t1\t1460676662000\n54801\t75\t1\t1460676658000\n12663\t1\t1\t1460676716000\n12663\t7\t1\t1460676720000\n12663\t10\t1\t1460676724000\n12663\t11\t1\t1460676724000\n12663\t12\t1\t1460676718000\n12663\t13\t1\t1460676728000\n12663\t14\t1\t1460676726000\n12663\t15\t1\t1460676726000\n12663\t16\t1\t1460676730000\n12663\t17\t1\t1460676730000\n12663\t18\t1\t1460676730000\n12663\t24\t1\t1460676732000\n12663\t26\t1\t1460676736000\n12663\t28\t1\t1460676738000\n12663\t30\t1\t1460676740000\n12663\t32\t1\t1460676744000\n12663\t33\t1\t1460676742000\n12663\t38\t1\t1460676746000\n12663\t39\t1\t1460676746000\n12663\t42\t1\t1460676748000\n12663\t44\t1\t1460676750000\n12663\t49\t1\t1460676752000\n12663\t51\t1\t1460676754000\n12663\t54\t1\t1460676756000\n12663\t60\t1\t1460676766000\n12663\t61\t1\t1460676764000\n12663\t62\t1\t1460676760000\n12663\t63\t1\t1460676760000\n12663\t74\t1\t1460676776000\n12663\t79\t1\t1460676768000\n74715\t18\t1\t1460676688000\n74715\t52\t1\t1460676660000\n74715\t81\t1\t1460676656000\n13338\t56\t1\t1460676660000\n88005\t6\t1\t1460845306000\n45777\t38\t1\t1460671896000\n45777\t45\t1\t1460671896000\n45777\t50\t1\t1460671896000\n45777\t51\t1\t1460671898000\n60978\t7\t1\t1460676622000\n60978\t36\t1\t1460676638000\n60978\t44\t1\t1460676642000\n60978\t62\t1\t1460676670000\n60978\t67\t1\t1460676648000\n60978\t78\t1\t1460676652000\n20229\t7\t1\t1460676668000\n20229\t18\t1\t1460676678000\n20229\t20\t1\t1460676766000\n20229\t24\t1\t1460676682000\n20229\t28\t1\t1460676684000\n20229\t40\t1\t1460676696000\n20229\t42\t1\t1460676688000\n20229\t49\t1\t1460676692000\n20229\t51\t1\t1460676692000\n20229\t62\t1\t1460676698000\n13077\t2\t1\t1460752818000\n13077\t3\t1\t1460752818000\n13077\t12\t1\t1460752816000\n13077\t13\t1\t1460752824000\n37902\t7\t1\t1460676602000\n37902\t10\t1\t1460676668000\n37902\t11\t1\t1460676874000\n37902\t12\t1\t1460676664000\n37902\t39\t1\t1460676614000\n37902\t42\t1\t1460676642000\n37902\t47\t1\t1460676612000\n"
      },
      "dateCreated": "Apr 23, 2016 2:26:08 AM",
      "dateStarted": "Apr 23, 2016 2:26:46 AM",
      "dateFinished": "Apr 23, 2016 2:26:47 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Total ratings and Distinct Users",
      "text": "import org.apache.spark.sql.functions._\n\nval totalRatings \u003d itemRatingsDF.count()\nval distinctUsers \u003d itemRatingsDF.select(countDistinct($\"userId\")).collect()(0)(0)",
      "dateUpdated": "Apr 23, 2016 1:43:17 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false,
        "editorMode": "ace/mode/scala",
        "enabled": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435903786952_671772613",
      "id": "20150703-060946_1260514447",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.apache.spark.sql.functions._\ntotalRatings: Long \u003d 275\ndistinctUsers: Any \u003d 34\n"
      },
      "dateCreated": "Jul 3, 2015 6:09:46 AM",
      "dateStarted": "Apr 23, 2016 1:43:18 AM",
      "dateFinished": "Apr 23, 2016 1:43:22 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "distribution of ratings ",
      "text": "val joinedDF \u003d itemRatingsDF.join(itemsDF, $\"itemId\" \u003d\u003d\u003d $\"id\")\n  .select($\"itemId\", $\"title\", $\"img\")\n  .groupBy($\"itemId\", $\"title\", $\"img\")\n  .agg(count($\"itemId\").as(\"count\"))\n  .orderBy($\"count\".desc)\n  .limit(5)\n\nz.show(joinedDF)",
      "dateUpdated": "Apr 23, 2016 1:43:17 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "pieChart",
          "height": 348.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "title",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "count",
              "index": 3.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "itemId",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "title",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "title": true,
        "enabled": true,
        "editorHide": false,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1451072111148_1271278951",
      "id": "20151225-193511_1695756196",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "itemId\ttitle\timg\tcount\n7\tApache Spark\timg/software/spark.png\t18\n42\tScala\timg/software/scala.png\t12\n18\tApache Kafka\timg/software/kafka.png\t12\n62\tSpark Streaming\timg/software/spark-streaming.png\t10\n63\tSpark SQL\timg/software/spark-sql.png\t10\n"
      },
      "dateCreated": "Dec 25, 2015 7:35:11 PM",
      "dateStarted": "Apr 23, 2016 1:43:19 AM",
      "dateFinished": "Apr 23, 2016 1:43:22 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md ### Compare DataFrame and SQL Query Plans",
      "dateUpdated": "Apr 23, 2016 1:43:17 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1457238016249_-353959629",
      "id": "20160306-042016_536378124",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003eCompare DataFrame and SQL Query Plans\u003c/h3\u003e\n"
      },
      "dateCreated": "Mar 6, 2016 4:20:16 AM",
      "dateStarted": "Apr 23, 2016 1:43:17 AM",
      "dateFinished": "Apr 23, 2016 1:43:17 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "joinedDF.explain()",
      "dateUpdated": "Apr 23, 2016 1:43:17 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1457238155680_-55997059",
      "id": "20160306-042235_1222664988",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\u003d\u003d Physical Plan \u003d\u003d\nTakeOrderedAndProject(limit\u003d5, orderBy\u003d[count#174L DESC], output\u003d[itemId#161,title#155,img#153,count#174L])\n+- ConvertToSafe\n   +- TungstenAggregate(key\u003d[itemId#161,title#155,img#153], functions\u003d[(count(itemId#161),mode\u003dFinal,isDistinct\u003dfalse)], output\u003d[itemId#161,title#155,img#153,count#174L])\n      +- TungstenExchange hashpartitioning(itemId#161,title#155,img#153,200), None\n         +- TungstenAggregate(key\u003d[itemId#161,title#155,img#153], functions\u003d[(count(itemId#161),mode\u003dPartial,isDistinct\u003dfalse)], output\u003d[itemId#161,title#155,img#153,count#177L])\n            +- Project [itemId#161,title#155,img#153]\n               +- BroadcastHashJoin [cast(itemId#161 as bigint)], [id#152L], BuildRight\n                  :- Project [itemid#157 AS itemId#161]\n                  :  +- Scan org.apache.spark.sql.cassandra.CassandraSourceRelation@445a2c0a[itemid#157] \n                  +- Scan JSONRelation[title#155,img#153,id#152L] InputPaths: file:/root/pipeline/html/advancedspark.com/json/software.json\n"
      },
      "dateCreated": "Mar 6, 2016 4:22:35 AM",
      "dateStarted": "Apr 23, 2016 1:43:22 AM",
      "dateFinished": "Apr 23, 2016 1:43:23 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "itemsDF.registerTempTable(\"items_temp\")\nitemRatingsDF.registerTempTable(\"item_ratings_temp\")\n\nval joinedSql \u003d sqlContext.sql(\"\"\"SELECT itemId, title, count(itemId) as count FROM item_ratings_temp \n  JOIN items_temp ON (item_ratings_temp.itemId \u003d items_temp.id) \n  GROUP BY itemId, title \n  ORDER BY count \n  DESC LIMIT 5\"\"\")\n  \njoinedSql.explain()",
      "dateUpdated": "Apr 23, 2016 1:43:17 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1457237439293_2074159508",
      "id": "20160306-041039_153351581",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "joinedSql: org.apache.spark.sql.DataFrame \u003d [itemId: int, title: string, count: bigint]\n\u003d\u003d Physical Plan \u003d\u003d\nTakeOrderedAndProject(limit\u003d5, orderBy\u003d[count#180L DESC], output\u003d[itemId#161,title#155,count#180L])\n+- ConvertToSafe\n   +- TungstenAggregate(key\u003d[itemId#161,title#155], functions\u003d[(count(itemId#161),mode\u003dFinal,isDistinct\u003dfalse)], output\u003d[itemId#161,title#155,count#180L])\n      +- TungstenExchange hashpartitioning(itemId#161,title#155,200), None\n         +- TungstenAggregate(key\u003d[itemId#161,title#155], functions\u003d[(count(itemId#161),mode\u003dPartial,isDistinct\u003dfalse)], output\u003d[itemId#161,title#155,count#186L])\n            +- Project [itemId#161,title#155]\n               +- BroadcastHashJoin [cast(itemId#161 as bigint)], [id#152L], BuildRight\n                  :- Project [itemid#157 AS itemId#161]\n                  :  +- Scan org.apache.spark.sql.cassandra.CassandraSourceRelation@445a2c0a[itemid#157] \n                  +- Scan JSONRelation[title#155,id#152L] InputPaths: file:/root/pipeline/html/advancedspark.com/json/software.json\n"
      },
      "dateCreated": "Mar 6, 2016 4:10:39 AM",
      "dateStarted": "Apr 23, 2016 1:43:23 AM",
      "dateFinished": "Apr 23, 2016 1:43:24 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Save Top 5 Most Rated Items to ElasticSearch",
      "text": "import org.elasticsearch.spark.sql._\nimport org.apache.spark.sql.SaveMode\n\nval esConfig \u003d Map(\"pushdown\" -\u003e \"true\", \"es.nodes\" -\u003e \"127.0.0.1\", \"es.port\" -\u003e \"9200\")\n\njoinedDF.limit(5).write.format(\"org.elasticsearch.spark.sql\")\n  .mode(SaveMode.Overwrite)\n  .options(esConfig)\n  .save(\"advancedspark/top-items-by-exact-rating-count\")\n\nz.show(joinedDF)\n",
      "dateUpdated": "Apr 23, 2016 1:48:18 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 196.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "itemId",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "title",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "itemId",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "title",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "title": true,
        "enabled": true,
        "editorHide": false,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1447754108027_-274054386",
      "id": "20151117-095508_447614045",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "import org.elasticsearch.spark.sql._\nimport org.apache.spark.sql.SaveMode\nesConfig: scala.collection.immutable.Map[String,String] \u003d Map(pushdown -\u003e true, es.nodes -\u003e 127.0.0.1, es.port -\u003e 9200)\norg.elasticsearch.hadoop.rest.EsHadoopInvalidRequest: [DELETE] on [advancedspark/top-items-by-exact-rating-count] failed; server[127.0.0.1:9200] returned [400|Bad Request:]\n\tat org.elasticsearch.hadoop.rest.RestClient.checkResponse(RestClient.java:368)\n\tat org.elasticsearch.hadoop.rest.RestClient.executeNotFoundAllowed(RestClient.java:344)\n\tat org.elasticsearch.hadoop.rest.RestClient.delete(RestClient.java:397)\n\tat org.elasticsearch.hadoop.rest.RestRepository.delete(RestRepository.java:447)\n\tat org.elasticsearch.spark.sql.ElasticsearchRelation.insert(DefaultSource.scala:299)\n\tat org.elasticsearch.spark.sql.DefaultSource.createRelation(DefaultSource.scala:65)\n\tat org.apache.spark.sql.execution.datasources.ResolvedDataSource$.apply(ResolvedDataSource.scala:222)\n\tat org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:148)\n\tat org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:139)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:99)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:104)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:106)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:108)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:110)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:112)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:114)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:116)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:118)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:120)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:122)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:124)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:126)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:128)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:130)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:132)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:134)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:136)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:138)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:140)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:142)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:144)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:146)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:148)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:150)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:152)\n\tat $iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:154)\n\tat $iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:156)\n\tat $iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:158)\n\tat $iwC.\u003cinit\u003e(\u003cconsole\u003e:160)\n\tat \u003cinit\u003e(\u003cconsole\u003e:162)\n\tat .\u003cinit\u003e(\u003cconsole\u003e:166)\n\tat .\u003cclinit\u003e(\u003cconsole\u003e)\n\tat .\u003cinit\u003e(\u003cconsole\u003e:7)\n\tat .\u003cclinit\u003e(\u003cconsole\u003e)\n\tat $print(\u003cconsole\u003e)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.spark.repl.SparkIMain$ReadEvalPrint.call(SparkIMain.scala:1065)\n\tat org.apache.spark.repl.SparkIMain$Request.loadAndRun(SparkIMain.scala:1346)\n\tat org.apache.spark.repl.SparkIMain.loadAndRunReq$1(SparkIMain.scala:840)\n\tat org.apache.spark.repl.SparkIMain.interpret(SparkIMain.scala:871)\n\tat org.apache.spark.repl.SparkIMain.interpret(SparkIMain.scala:819)\n\tat org.apache.zeppelin.spark.SparkInterpreter.interpretInput(SparkInterpreter.java:709)\n\tat org.apache.zeppelin.spark.SparkInterpreter.interpret(SparkInterpreter.java:674)\n\tat org.apache.zeppelin.spark.SparkInterpreter.interpret(SparkInterpreter.java:667)\n\tat org.apache.zeppelin.interpreter.ClassloaderInterpreter.interpret(ClassloaderInterpreter.java:57)\n\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:93)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:300)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:169)\n\tat org.apache.zeppelin.scheduler.FIFOScheduler$1.run(FIFOScheduler.java:134)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat java.lang.Thread.run(Thread.java:745)\n\n"
      },
      "dateCreated": "Nov 17, 2015 9:55:08 AM",
      "dateStarted": "Apr 23, 2016 1:48:18 AM",
      "dateFinished": "Apr 23, 2016 1:48:19 AM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "dateUpdated": "Apr 23, 2016 1:43:17 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1460922712529_1849006590",
      "id": "20160417-195152_2028584432",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT"
      },
      "dateCreated": "Apr 17, 2016 7:51:52 PM",
      "dateStarted": "Apr 23, 2016 1:43:25 AM",
      "dateFinished": "Apr 23, 2016 1:43:25 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Live Recs/01: TopK and Summary Statistics (SQL, DataFrames)",
  "id": "2AUUDPT56",
  "angularObjects": {
    "2ARR8UZDJ": [],
    "2AS9P7JSA": [],
    "2AR33ZMZJ": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}