{
  "paragraphs": [
    {
      "text": "%md ![SVD](http://advancedspark.com/img/svd.png)",
      "dateUpdated": "May 11, 2016 2:48:57 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1462812135673_-2088906267",
      "id": "20160509-164215_300469675",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003e\u003cimg src\u003d\"http://advancedspark.com/img/svd.png\" alt\u003d\"SVD\" /\u003e\u003c/p\u003e\n"
      },
      "dateCreated": "May 9, 2016 4:42:15 PM",
      "dateStarted": "May 11, 2016 2:48:58 PM",
      "dateFinished": "May 11, 2016 2:48:58 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val nameOrPrefix \u003d \"\"\n\n// Put this variable into Zeppelin\u0027s ResourcePool to be accessed by Python later\nz.put(\"nameOrPrefix\", nameOrPrefix)",
      "dateUpdated": "May 11, 2016 4:56:29 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1462946685056_1740753861",
      "id": "20160511-060445_1084856315",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "nameOrPrefix: String \u003d \"\"\nres52: Object \u003d \"\"\n"
      },
      "dateCreated": "May 11, 2016 6:04:45 AM",
      "dateStarted": "May 11, 2016 4:56:29 PM",
      "dateFinished": "May 11, 2016 4:56:30 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Perform Singular Value Decomposition (SVD)",
      "text": "val numSingularValues \u003d 8\n\nval svd \u003d scaledImagesAsPixelsVectorMatrix.computeSVD(numSingularValues, computeU \u003d false)",
      "dateUpdated": "May 11, 2016 2:48:58 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "title": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1462812143008_-2007324176",
      "id": "20160509-164223_141783922",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "numSingularValues: Int \u003d 8\nsvd: org.apache.spark.mllib.linalg.SingularValueDecomposition[org.apache.spark.mllib.linalg.distributed.RowMatrix,org.apache.spark.mllib.linalg.Matrix] \u003d \nSingularValueDecomposition(null,[187055.47275122663,105083.32619073642,83579.76486147907,78121.49449127496,71950.82065662766,63993.970459944845,61391.28043371654,57424.06254171584],-0.008730843117309251  0.005771934138229281    ... (8 total)\n-0.01127592826224869   0.006395026406829034    ...\n-0.013473039620767272  0.0058893744926825226   ...\n-0.015079937210608988  0.004675674141452415    ...\n-0.01625522561869052   0.003182189792742085    ...\n-0.01693334592820582   0.0022410560343084484   ...\n-0.01754158198872033   0.001386690871525016    ...\n-0.01764115870662704   6.338030072434941E-4    ...\n-0.017805110007382267  1.8633248632472376E-..."
      },
      "dateCreated": "May 9, 2016 4:42:23 PM",
      "dateStarted": "May 11, 2016 2:58:46 PM",
      "dateFinished": "May 11, 2016 3:48:47 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val singularValues \u003d svd.s.toArray.zipWithIndex.map(tuple \u003d\u003e tuple.swap)\n\nz.show(sc.parallelize(singularValues).toDF(\"numSingularValues\", \"singularValue\"))",
      "dateUpdated": "May 11, 2016 2:48:58 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1462812235741_337105758",
      "id": "20160509-164355_1177395846",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "numSingularValues\tsingularValue\n0\t187055.47275122663\n1\t105083.32619073642\n2\t83579.76486147907\n3\t78121.49449127496\n4\t71950.82065662766\n5\t63993.970459944845\n6\t61391.28043371654\n7\t57424.06254171584\n"
      },
      "dateCreated": "May 9, 2016 4:43:55 PM",
      "dateStarted": "May 11, 2016 2:58:47 PM",
      "dateFinished": "May 11, 2016 3:48:51 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import com.advancedspark.spark.ml.MatrixIO\n\nMatrixIO.saveArray(svd.s.toArray, s\"/tmp/${nameOrPrefix}/svd-s.csv\")",
      "dateUpdated": "May 11, 2016 2:48:58 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1462812247428_1266305000",
      "id": "20160509-164407_233633438",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import com.advancedspark.spark.ml.MatrixIO\n"
      },
      "dateCreated": "May 9, 2016 4:44:07 PM",
      "dateStarted": "May 11, 2016 3:48:48 PM",
      "dateFinished": "May 11, 2016 3:48:52 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n\nimport matplotlib.pyplot as plt; plt.rcdefaults()\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport StringIO\n\ndef show(p):\n    img \u003d StringIO.StringIO()\n    p.savefig(img, format\u003d\u0027svg\u0027)\n    img.seek(0)\n    print \"%html \u003cdiv style\u003d\u0027width:600px\u0027\u003e\" + img.buf + \"\u003c/div\u003e\"\n    \ndef plot_gallery(images, h, w, n_row\u003d2, n_col\u003d4):\n    plt.clf()\n    \"\"\"Helper function to plot a gallery of portraits\"\"\"\n    plt.figure(figsize\u003d(1.8*n_col, 2.5*n_row))\n    plt.subplots_adjust(bottom\u003d0, left\u003d0.01, right\u003d0.99, top\u003d0.90, hspace\u003d0.35)\n    for i in range(n_row * n_col):\n        plt.subplot(n_row, n_col, i + 1)\n        plt.imshow(images[:, i].reshape((h, w)), cmap\u003dplt.cm.gray)\n        plt.title(\"Eigenface %d\" % (i + 1), size\u003d12)\n        plt.xticks(())\n        plt.yticks(())\n        \ndef show(p):\n    img \u003d StringIO.StringIO()\n    p.savefig(img, format\u003d\u0027svg\u0027)\n    img.seek(0)\n    print \"%html \u003cdiv style\u003d\u0027width:600px\u0027\u003e\" + img.buf + \"\u003c/div\u003e\"",
      "dateUpdated": "May 11, 2016 4:56:21 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1462946730101_-749478938",
      "id": "20160511-060530_427552279",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "May 11, 2016 6:05:30 AM",
      "dateStarted": "May 11, 2016 4:56:21 PM",
      "dateFinished": "May 11, 2016 4:56:21 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark \n\nimport matplotlib.pyplot as plt; plt.rcdefaults()\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport StringIO\n\n# Get this variable from Zeppelin\u0027s ResourcePool in Python\nnameOrPrefix \u003d z.get(\"nameOrPrefix\")        \n\n#singular_values \u003d np.loadtxt(\"/tmp/%s/svd-s.csv\" % nameOrPrefix, delimiter\u003d\",\")\n\n#print(singular_values.shape)\n\n#plt.imshow(singular_values)\n\n#show(plt)",
      "dateUpdated": "May 11, 2016 4:58:42 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1462946753853_1617927017",
      "id": "20160511-060553_1502628140",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "May 11, 2016 6:05:53 AM",
      "dateStarted": "May 11, 2016 4:58:42 PM",
      "dateFinished": "May 11, 2016 4:58:42 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "dateUpdated": "May 11, 2016 2:48:58 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1462812250590_-1079524368",
      "id": "20160509-164410_1232441246",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT"
      },
      "dateCreated": "May 9, 2016 4:44:10 PM",
      "dateStarted": "May 11, 2016 3:48:52 PM",
      "dateFinished": "May 11, 2016 3:48:52 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Images/02: Eigenfaces (SVD)",
  "id": "2BM6NJCPX",
  "angularObjects": {
    "2BCMAZYZ5": [],
    "2BDF8WQWY": [],
    "2ARR8UZDJ": [],
    "2AS9P7JSA": [],
    "2AR33ZMZJ": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}