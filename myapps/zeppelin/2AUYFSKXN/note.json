{
  "paragraphs": [
    {
      "title": "Collaborative Filtering:  Matrix Factorization using Alternating Least Squares (ALS)",
      "text": "%md ![Alternating Least Squares - Matrix Factorization](https://s3.amazonaws.com/fluxcapacitor.com/img/collaborative-filtering-with-als-matrix-factorization.png)",
      "dateUpdated": "Mar 5, 2016 11:07:49 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "editorHide": true,
        "editorMode": "ace/mode/markdown",
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435978153894_1534941045",
      "id": "20150704-024913_884517592",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003e\u003cimg src\u003d\"https://s3.amazonaws.com/fluxcapacitor.com/img/collaborative-filtering-with-als-matrix-factorization.png\" alt\u003d\"Alternating Least Squares - Matrix Factorization\" /\u003e\u003c/p\u003e\n"
      },
      "dateCreated": "Jul 4, 2015 2:49:13 AM",
      "dateStarted": "Mar 5, 2016 11:07:49 PM",
      "dateFinished": "Mar 5, 2016 11:07:49 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Get Reference Data for Enrichment",
      "text": "val itemsDF \u003d sqlContext.read.format(\"json\")\n  .load(\"file:/root/pipeline/html/advancedspark.com/json/software.json\")\n\nz.show(itemsDF.select($\"id\" as \"itemId\", $\"title\", $\"img\", $\"tags\").limit(5))",
      "dateUpdated": "Mar 5, 2016 11:07:49 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 175.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456864386968_-1684206029",
      "id": "20160301-203306_1764877860",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "itemId\ttitle\timg\ttags\n1\tApache Cassandra\timg/software/cassandra.png\tWrappedArray(Database, NoSQL, Java, Eventually Consistent, Transactional)\n2\tTachyon\timg/software/tachyon.png\tWrappedArray(Distributed Cache, Object Store, S3, Swift, HDFS)\n3\tApache Ambari\timg/software/ambari.png\tWrappedArray(Cluster Provision, Hadoop, Cluster Monitoring, REST API, Metrics, Alerts)\n4\tDocker\timg/software/docker.png\tWrappedArray(Container, Linux, DevOps, Deployment)\n5\tMicrosft Azure\timg/software/azure.png\tWrappedArray(Cloud Provider, Microsoft)\n"
      },
      "dateCreated": "Mar 1, 2016 8:33:06 PM",
      "dateStarted": "Mar 5, 2016 11:07:49 PM",
      "dateFinished": "Mar 5, 2016 11:07:50 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Get Live Ratings from Cassandra",
      "text": "val cassandraConfig \u003d Map(\"keyspace\" -\u003e \"advancedspark\", \"table\" -\u003e \"item_ratings\")\n\nval itemRatingsDF \u003d sqlContext.read.format(\"org.apache.spark.sql.cassandra\").options(cassandraConfig)\n  .load().toDF(\"userId\", \"itemId\", \"rating\", \"timestamp\")",
      "dateUpdated": "Mar 5, 2016 11:07:49 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456864425764_-1117794352",
      "id": "20160301-203345_1180596367",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "cassandraConfig: scala.collection.immutable.Map[String,String] \u003d Map(keyspace -\u003e advancedspark, table -\u003e item_ratings)\nitemRatingsDF: org.apache.spark.sql.DataFrame \u003d [userId: int, itemId: int, rating: int, timestamp: bigint]\n"
      },
      "dateCreated": "Mar 1, 2016 8:33:45 PM",
      "dateStarted": "Mar 5, 2016 11:07:49 PM",
      "dateFinished": "Mar 5, 2016 11:07:50 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Train The ALS Model",
      "text": "import org.apache.spark.ml.recommendation.ALS\n\nval rank \u003d 10 // this is k\nval maxIterations \u003d 20\nval convergenceThreshold \u003d 0.01\n\nval als \u003d new ALS()\n  .setRank(rank)\n  .setRegParam(convergenceThreshold)\n  .setUserCol(\"userId\")\n  .setItemCol(\"itemId\")\n  .setRatingCol(\"rating\")\n\nval model \u003d als.fit(itemRatingsDF)",
      "dateUpdated": "Mar 5, 2016 11:07:49 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "editorHide": false,
        "editorMode": "ace/mode/scala",
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435978256373_-160526409",
      "id": "20150704-025056_169923529",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.apache.spark.ml.recommendation.ALS\nrank: Int \u003d 10\nmaxIterations: Int \u003d 20\nconvergenceThreshold: Double \u003d 0.01\nals: org.apache.spark.ml.recommendation.ALS \u003d als_5f8649106f86\nmodel: org.apache.spark.ml.recommendation.ALSModel \u003d als_5f8649106f86\n"
      },
      "dateCreated": "Jul 4, 2015 2:50:56 AM",
      "dateStarted": "Mar 5, 2016 11:07:50 PM",
      "dateFinished": "Mar 5, 2016 11:07:53 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Show User Factors Matrix",
      "text": "val userFactorsDF \u003d model.userFactors.sort($\"id\")\n\nz.show(userFactorsDF)",
      "dateUpdated": "Mar 5, 2016 11:07:49 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "id",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "features",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "id",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "features",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456873568687_1047705598",
      "id": "20160301-230608_2073461478",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "id\tfeatures\n26058\tWrappedArray(-0.061401837, -0.25806394, 0.19176695, 0.39655176, 0.026377007, 0.14880164, 0.23655874, 0.2394148, 0.54132265, -0.53907925)\n33366\tWrappedArray(-0.039138883, -0.017534984, 0.042565644, 0.15436144, 0.21192162, 0.59816664, -0.30811605, 0.13501449, 0.28285158, -0.5577711)\n"
      },
      "dateCreated": "Mar 1, 2016 11:06:08 PM",
      "dateStarted": "Mar 5, 2016 11:07:51 PM",
      "dateFinished": "Mar 5, 2016 11:07:53 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Show ItemFactors Matrix",
      "text": "val itemFactorsDF \u003d model.itemFactors.sort($\"id\")\n\nz.show(itemFactorsDF)",
      "dateUpdated": "Mar 5, 2016 11:07:49 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 314.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "id",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "features",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "id",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "features",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456865217092_774550692",
      "id": "20160301-204657_541485869",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "id\tfeatures\n1\tWrappedArray(-0.039870705, -0.008782871, 0.038439065, 0.15116747, 0.22793894, 0.64044875, -0.34223065, 0.13645197, 0.28429735, -0.5814316)\n2\tWrappedArray(-0.0616511, -0.26266557, 0.19447215, 0.40054145, 0.021765688, 0.13723375, 0.24861693, 0.24081218, 0.54502434, -0.53608876)\n3\tWrappedArray(-0.0616511, -0.26266557, 0.19447215, 0.40054145, 0.021765688, 0.13723375, 0.24861693, 0.24081218, 0.54502434, -0.53608876)\n7\tWrappedArray(-0.039870705, -0.008782871, 0.038439065, 0.15116747, 0.22793894, 0.64044875, -0.34223065, 0.13645197, 0.28429735, -0.5814316)\n8\tWrappedArray(-0.0616511, -0.26266557, 0.19447215, 0.40054145, 0.021765688, 0.13723375, 0.24861693, 0.24081218, 0.54502434, -0.53608876)\n14\tWrappedArray(-0.0640655, -0.16761748, 0.14498372, 0.34569225, 0.16246285, 0.503363, -0.07056796, 0.23763254, 0.5217871, -0.7105763)\n15\tWrappedArray(-0.0616511, -0.26266557, 0.19447215, 0.40054145, 0.021765688, 0.13723375, 0.24861693, 0.24081218, 0.54502434, -0.53608876)\n16\tWrappedArray(-0.0616511, -0.26266557, 0.19447215, 0.40054145, 0.021765688, 0.13723375, 0.24861693, 0.24081218, 0.54502434, -0.53608876)\n18\tWrappedArray(-0.039870705, -0.008782871, 0.038439065, 0.15116747, 0.22793894, 0.64044875, -0.34223065, 0.13645197, 0.28429735, -0.5814316)\n20\tWrappedArray(-0.0616511, -0.26266557, 0.19447215, 0.40054145, 0.021765688, 0.13723375, 0.24861693, 0.24081218, 0.54502434, -0.53608876)\n23\tWrappedArray(-0.0616511, -0.26266557, 0.19447215, 0.40054145, 0.021765688, 0.13723375, 0.24861693, 0.24081218, 0.54502434, -0.53608876)\n29\tWrappedArray(-0.0616511, -0.26266557, 0.19447215, 0.40054145, 0.021765688, 0.13723375, 0.24861693, 0.24081218, 0.54502434, -0.53608876)\n32\tWrappedArray(-0.0616511, -0.26266557, 0.19447215, 0.40054145, 0.021765688, 0.13723375, 0.24861693, 0.24081218, 0.54502434, -0.53608876)\n33\tWrappedArray(-0.0616511, -0.26266557, 0.19447215, 0.40054145, 0.021765688, 0.13723375, 0.24861693, 0.24081218, 0.54502434, -0.53608876)\n34\tWrappedArray(-0.0640655, -0.16761748, 0.14498372, 0.34569225, 0.16246285, 0.503363, -0.07056796, 0.23763254, 0.5217871, -0.7105763)\n35\tWrappedArray(-0.0616511, -0.26266557, 0.19447215, 0.40054145, 0.021765688, 0.13723375, 0.24861693, 0.24081218, 0.54502434, -0.53608876)\n38\tWrappedArray(-0.039870705, -0.008782871, 0.038439065, 0.15116747, 0.22793894, 0.64044875, -0.34223065, 0.13645197, 0.28429735, -0.5814316)\n39\tWrappedArray(-0.0616511, -0.26266557, 0.19447215, 0.40054145, 0.021765688, 0.13723375, 0.24861693, 0.24081218, 0.54502434, -0.53608876)\n41\tWrappedArray(-0.0616511, -0.26266557, 0.19447215, 0.40054145, 0.021765688, 0.13723375, 0.24861693, 0.24081218, 0.54502434, -0.53608876)\n44\tWrappedArray(-0.0616511, -0.26266557, 0.19447215, 0.40054145, 0.021765688, 0.13723375, 0.24861693, 0.24081218, 0.54502434, -0.53608876)\n45\tWrappedArray(-0.0616511, -0.26266557, 0.19447215, 0.40054145, 0.021765688, 0.13723375, 0.24861693, 0.24081218, 0.54502434, -0.53608876)\n46\tWrappedArray(-0.0616511, -0.26266557, 0.19447215, 0.40054145, 0.021765688, 0.13723375, 0.24861693, 0.24081218, 0.54502434, -0.53608876)\n50\tWrappedArray(-0.0616511, -0.26266557, 0.19447215, 0.40054145, 0.021765688, 0.13723375, 0.24861693, 0.24081218, 0.54502434, -0.53608876)\n51\tWrappedArray(-0.0616511, -0.26266557, 0.19447215, 0.40054145, 0.021765688, 0.13723375, 0.24861693, 0.24081218, 0.54502434, -0.53608876)\n52\tWrappedArray(-0.0616511, -0.26266557, 0.19447215, 0.40054145, 0.021765688, 0.13723375, 0.24861693, 0.24081218, 0.54502434, -0.53608876)\n53\tWrappedArray(-0.0616511, -0.26266557, 0.19447215, 0.40054145, 0.021765688, 0.13723375, 0.24861693, 0.24081218, 0.54502434, -0.53608876)\n56\tWrappedArray(-0.0616511, -0.26266557, 0.19447215, 0.40054145, 0.021765688, 0.13723375, 0.24861693, 0.24081218, 0.54502434, -0.53608876)\n57\tWrappedArray(-0.0616511, -0.26266557, 0.19447215, 0.40054145, 0.021765688, 0.13723375, 0.24861693, 0.24081218, 0.54502434, -0.53608876)\n59\tWrappedArray(-0.0616511, -0.26266557, 0.19447215, 0.40054145, 0.021765688, 0.13723375, 0.24861693, 0.24081218, 0.54502434, -0.53608876)\n61\tWrappedArray(-0.039870705, -0.008782871, 0.038439065, 0.15116747, 0.22793894, 0.64044875, -0.34223065, 0.13645197, 0.28429735, -0.5814316)\n62\tWrappedArray(-0.039870705, -0.008782871, 0.038439065, 0.15116747, 0.22793894, 0.64044875, -0.34223065, 0.13645197, 0.28429735, -0.5814316)\n63\tWrappedArray(-0.0640655, -0.16761748, 0.14498372, 0.34569225, 0.16246285, 0.503363, -0.07056796, 0.23763254, 0.5217871, -0.7105763)\n69\tWrappedArray(-0.0616511, -0.26266557, 0.19447215, 0.40054145, 0.021765688, 0.13723375, 0.24861693, 0.24081218, 0.54502434, -0.53608876)\n"
      },
      "dateCreated": "Mar 1, 2016 8:46:57 PM",
      "dateStarted": "Mar 5, 2016 11:07:53 PM",
      "dateFinished": "Mar 5, 2016 11:07:54 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Generate Personalized Recommendations For All Users",
      "text": "model.setPredictionCol(\"confidence\")\n\nval recommendationsDF \u003d model.transform(itemRatingsDF.select($\"userId\", $\"itemId\"))\n\nval enrichedRecommendationsDF \u003d \n   recommendationsDF.join(itemsDF, $\"itemId\" \u003d\u003d\u003d $\"id\")\n   .select($\"userId\", $\"itemId\", $\"title\", $\"description\", $\"tags\", $\"img\", $\"confidence\")\n   .sort($\"userId\", $\"itemId\", $\"confidence\" desc)\n   \nz.show(enrichedRecommendationsDF.select($\"userId\", $\"title\", $\"itemId\", $\"confidence\"))",
      "dateUpdated": "Mar 5, 2016 11:08:26 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 284.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "userId",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "title",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "userId",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "title": true,
        "tableHide": false,
        "editorHide": false,
        "editorMode": "ace/mode/scala",
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435978292871_1625908707",
      "id": "20150704-025132_1487939440",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "userId\ttitle\titemId\tconfidence\n26058\tTachyon\t2\t0.9891883\n26058\tApache Ambari\t3\t0.9891883\n26058\tApache Flume\t8\t0.9891883\n26058\tApache Hive\t14\t0.99697566\n26058\tHortonworks\t15\t0.9891883\n26058\tApache HUE\t16\t0.9891883\n26058\tApache Solr\t20\t0.9891883\n26058\tApache Drill\t23\t0.9891883\n26058\tStanford CoreNLP\t29\t0.9891883\n26058\tApache Sqoop\t32\t0.9891883\n26058\tApache Oozie\t33\t0.9891883\n26058\tApache Nifi\t34\t0.99697566\n26058\tNLTK\t35\t0.9891883\n26058\tTableau\t39\t0.9891883\n26058\tSQL\t41\t0.9891883\n26058\tPython\t44\t0.9891883\n26058\tPresto\t45\t0.9891883\n26058\tMapR\t46\t0.9891883\n26058\tGoogle Cloud Platform\t50\t0.9891883\n26058\tRedis\t51\t0.9891883\n26058\tJSON\t52\t0.9891883\n26058\tXML\t53\t0.9891883\n26058\tMicroStrategy\t56\t0.9891883\n26058\tKnime\t57\t0.9891883\n26058\tOracle\t59\t0.9891883\n26058\tSpark SQL\t63\t0.99697566\n26058\tSpark GraphX\t69\t0.9891883\n33366\tApache Cassandra\t1\t0.9866748\n33366\tApache Spark\t7\t0.98667485\n33366\tApache Hive\t14\t0.998258\n33366\tApache Kafka\t18\t0.9866748\n33366\tApache Nifi\t34\t0.998258\n33366\tApache Zeppelin\t38\t0.98667485\n33366\tSpark ML/MLlib\t61\t0.9866748\n33366\tSpark Streaming\t62\t0.9866748\n33366\tSpark SQL\t63\t0.998258\n"
      },
      "dateCreated": "Jul 4, 2015 2:51:32 AM",
      "dateStarted": "Mar 5, 2016 11:07:54 PM",
      "dateFinished": "Mar 5, 2016 11:07:56 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "userFactor Vector dot product ItemFactor vector ",
      "text": "import org.jblas.DoubleMatrix\n\n// Item 7\nval anItemFeatureArray \u003d model.itemFactors.select($\"id\".as(\"itemId\"), $\"features\".as(\"itemFeatures\"))\n  .where($\"itemId\" \u003d\u003d\u003d 7).flatMap(row \u003d\u003e row.getSeq[Float](1)).map(_.toDouble).collect()\n\n// User 33366\nval aUserFeatureArray \u003d model.userFactors.select($\"id\".as(\"userId\"), $\"features\".as(\"userFeatures\"))\n  .where($\"userId\" \u003d\u003d\u003d 33366).flatMap(row \u003d\u003e row.getSeq[Float](1)).map(_.toDouble).collect()\n\n// Create JBlas DoubleMatrix\nval aUserFeatureVector \u003d new DoubleMatrix(aUserFeatureArray)\nval anItemFeatureVector \u003d new DoubleMatrix(anItemFeatureArray)\n\n// Take dot product of the User x Item vectors\n// This should equal the confidence value in the offline-generated matrix\nval confidence \u003d aUserFeatureVector.dot(anItemFeatureVector)\n",
      "dateUpdated": "Mar 5, 2016 11:10:29 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456954812726_1681075178",
      "id": "20160302-214012_540640872",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.jblas.DoubleMatrix\nanItemFeatureArray: Array[Double] \u003d Array(-0.03987070545554161, -0.008782871067523956, 0.0384390652179718, 0.15116746723651886, 0.2279389351606369, 0.6404487490653992, -0.3422306478023529, 0.13645197451114655, 0.2842973470687866, -0.5814316272735596)\naUserFeatureArray: Array[Double] \u003d Array(-0.03913888335227966, -0.017534984275698662, 0.04256564378738403, 0.15436144173145294, 0.21192161738872528, 0.5981666445732117, -0.30811604857444763, 0.13501448929309845, 0.28285157680511475, -0.5577710866928101)\naUserFeatureVector: org.jblas.DoubleMatrix \u003d [-0.039139; -0.017535; 0.042566; 0.154361; 0.211922; 0.598167; -0.308116; 0.135014; 0.282852; -0.557771]\nanItemFeatureVector: org.jblas.DoubleMatrix \u003d [-0.039871; -0.008783; 0.038439; 0.151167; 0.227939; 0.640449; -0.342231; 0.136452; 0.284297; -0.581432]\nconfidence: Double \u003d 0.9866748332292894\n"
      },
      "dateCreated": "Mar 2, 2016 9:40:12 PM",
      "dateStarted": "Mar 5, 2016 11:10:29 PM",
      "dateFinished": "Mar 5, 2016 11:10:30 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Write to ElasticSearch",
      "text": "//import org.elasticsearch.spark.sql._ \n//import org.apache.spark.sql.SaveMode\n\n//val esConfig \u003d Map(\"pushdown\" -\u003e \"true\", \"es.nodes\" -\u003e \"127.0.0.1\", \"es.port\" -\u003e \"9200\")\n//enrichedRecommendationsDF.write.format(\"org.elasticsearch.spark.sql\").mode(SaveMode.Overwrite).options(esConfig)\n//  .save(\"advancedspark/personalized-als\")",
      "dateUpdated": "Mar 7, 2016 3:55:35 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorHide": true,
        "editorMode": "ace/mode/scala",
        "enabled": true,
        "tableHide": true,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1438113388648_-491234562",
      "id": "20150728-195628_1365871289",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "Jul 28, 2015 7:56:28 PM",
      "dateStarted": "Mar 5, 2016 11:07:57 PM",
      "dateFinished": "Mar 5, 2016 11:07:58 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "dateUpdated": "Mar 5, 2016 11:07:49 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1451070498135_426640744",
      "id": "20151225-190818_1269982895",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT"
      },
      "dateCreated": "Dec 25, 2015 7:08:18 PM",
      "dateStarted": "Mar 5, 2016 11:07:58 PM",
      "dateFinished": "Mar 5, 2016 11:07:58 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Live Recs/03:  Generate User-to-Item Collaborative Filter Recs (ALS)",
  "id": "2AUYFSKXN",
  "angularObjects": {
    "2ARR8UZDJ": [],
    "2AS9P7JSA": [],
    "2AR33ZMZJ": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}