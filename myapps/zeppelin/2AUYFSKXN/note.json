{
  "paragraphs": [
    {
      "title": "Collaborative Filtering:  Matrix Factorization using Alternating Least Squares (ALS)",
      "text": "%md ![Alternating Least Squares - Matrix Factorization](https://s3.amazonaws.com/fluxcapacitor.com/img/collaborative-filtering-with-als-matrix-factorization.png)",
      "dateUpdated": "Mar 5, 2016 11:07:49 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "editorHide": true,
        "editorMode": "ace/mode/markdown",
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435978153894_1534941045",
      "id": "20150704-024913_884517592",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003e\u003cimg src\u003d\"https://s3.amazonaws.com/fluxcapacitor.com/img/collaborative-filtering-with-als-matrix-factorization.png\" alt\u003d\"Alternating Least Squares - Matrix Factorization\" /\u003e\u003c/p\u003e\n"
      },
      "dateCreated": "Jul 4, 2015 2:49:13 AM",
      "dateStarted": "Mar 5, 2016 11:07:49 PM",
      "dateFinished": "Mar 5, 2016 11:07:49 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Get Reference Data for Enrichment",
      "text": "val itemsDF \u003d sqlContext.read.format(\"json\")\n  .load(\"file:/root/pipeline/html/advancedspark.com/json/software.json\")\n\nz.show(itemsDF.select($\"id\" as \"itemId\", $\"title\", $\"img\", $\"tags\").limit(5))",
      "dateUpdated": "Mar 9, 2016 3:20:26 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 175.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456864386968_-1684206029",
      "id": "20160301-203306_1764877860",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "itemId\ttitle\timg\ttags\n1\tApache Cassandra\timg/software/cassandra.png\tWrappedArray(Database, NoSQL, Java, Eventually Consistent, Transactional)\n2\tTachyon\timg/software/tachyon.png\tWrappedArray(Distributed Cache, Object Store, S3, Swift, HDFS)\n3\tApache Ambari\timg/software/ambari.png\tWrappedArray(Cluster Provision, Hadoop, Cluster Monitoring, REST API, Metrics, Alerts)\n4\tDocker\timg/software/docker.png\tWrappedArray(Container, Linux, DevOps, Deployment)\n5\tMicrosft Azure\timg/software/azure.png\tWrappedArray(Cloud Provider, Microsoft)\n"
      },
      "dateCreated": "Mar 1, 2016 8:33:06 PM",
      "dateStarted": "Mar 9, 2016 3:20:26 PM",
      "dateFinished": "Mar 9, 2016 3:20:26 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Get Live Ratings from Cassandra",
      "text": "val cassandraConfig \u003d Map(\"keyspace\" -\u003e \"advancedspark\", \"table\" -\u003e \"item_ratings\")\n\nval itemRatingsDF \u003d sqlContext.read.format(\"org.apache.spark.sql.cassandra\").options(cassandraConfig)\n  .load().toDF(\"userId\", \"itemId\", \"rating\", \"timestamp\")",
      "dateUpdated": "Mar 9, 2016 3:20:48 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456864425764_-1117794352",
      "id": "20160301-203345_1180596367",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "cassandraConfig: scala.collection.immutable.Map[String,String] \u003d Map(keyspace -\u003e advancedspark, table -\u003e item_ratings)\nitemRatingsDF: org.apache.spark.sql.DataFrame \u003d [userId: int, itemId: int, rating: int, timestamp: bigint]\n"
      },
      "dateCreated": "Mar 1, 2016 8:33:45 PM",
      "dateStarted": "Mar 9, 2016 3:20:48 PM",
      "dateFinished": "Mar 9, 2016 3:20:48 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Train The ALS Model",
      "text": "import org.apache.spark.ml.recommendation.ALS\n\nval rank \u003d 10 // this is k\nval maxIterations \u003d 20\nval convergenceThreshold \u003d 0.01\n\nval als \u003d new ALS()\n  .setRank(rank)\n  .setRegParam(convergenceThreshold)\n  .setUserCol(\"userId\")\n  .setItemCol(\"itemId\")\n  .setRatingCol(\"rating\")\n\nval model \u003d als.fit(itemRatingsDF)",
      "dateUpdated": "Mar 9, 2016 3:20:52 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "editorHide": false,
        "editorMode": "ace/mode/scala",
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435978256373_-160526409",
      "id": "20150704-025056_169923529",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.apache.spark.ml.recommendation.ALS\nrank: Int \u003d 10\nmaxIterations: Int \u003d 20\nconvergenceThreshold: Double \u003d 0.01\nals: org.apache.spark.ml.recommendation.ALS \u003d als_798dc935aa00\nmodel: org.apache.spark.ml.recommendation.ALSModel \u003d als_798dc935aa00\n"
      },
      "dateCreated": "Jul 4, 2015 2:50:56 AM",
      "dateStarted": "Mar 9, 2016 3:20:52 PM",
      "dateFinished": "Mar 9, 2016 3:20:55 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Show User Factors Matrix",
      "text": "val userFactorsDF \u003d model.userFactors.sort($\"id\")\n\nz.show(userFactorsDF)",
      "dateUpdated": "Mar 9, 2016 3:21:31 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "id",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "features",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "id",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "features",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456873568687_1047705598",
      "id": "20160301-230608_2073461478",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "id\tfeatures\n20014\tWrappedArray(-0.006050425, 0.083594054, 0.029330302, 0.2736857, 0.30299652, 0.17080921, -0.20938966, 0.13025881, 0.17869186, -0.66491944)\n26058\tWrappedArray(-0.05598122, -0.23062763, 0.1994008, 0.41916022, 0.068916194, 0.07241409, 0.22938105, 0.21852234, 0.50298953, -0.5857711)\n33366\tWrappedArray(-0.027526386, -0.040067382, 0.100885905, 0.24175277, 0.2466436, 0.3479195, -0.2225632, 0.071351364, 0.24721289, -0.6664172)\n61533\tWrappedArray(-1.8191905E-4, 0.034950145, 0.12398971, 0.34652975, 0.33709782, -0.08652099, -0.1212792, 0.01545113, 0.11927485, -0.7616635)\n84653\tWrappedArray(0.19392605, -0.49801332, -0.15463345, -0.10761962, -0.5461286, -0.06419637, -0.10755314, -0.4092953, 0.05905608, -0.24951638)\n"
      },
      "dateCreated": "Mar 1, 2016 11:06:08 PM",
      "dateStarted": "Mar 9, 2016 3:21:31 PM",
      "dateFinished": "Mar 9, 2016 3:21:31 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Show ItemFactors Matrix",
      "text": "val itemFactorsDF \u003d model.itemFactors.sort($\"id\")\n\nz.show(itemFactorsDF)",
      "dateUpdated": "Mar 9, 2016 3:21:36 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 314.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "id",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "features",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "id",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "features",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456865217092_774550692",
      "id": "20160301-204657_541485869",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "id\tfeatures\n1\tWrappedArray(-0.03485119, -0.036845766, 0.11367203, 0.265754, 0.30229086, 0.46764094, -0.3028338, 0.080268614, 0.28389528, -0.7848878)\n2\tWrappedArray(-0.05721035, -0.23784582, 0.20219165, 0.42345744, 0.06199093, 0.06971448, 0.2422319, 0.22391003, 0.51300144, -0.5822865)\n3\tWrappedArray(-0.05721035, -0.23784582, 0.20219165, 0.42345744, 0.06199093, 0.06971448, 0.2422319, 0.22391003, 0.51300144, -0.5822865)\n4\tWrappedArray(8.676767E-4, 0.060162865, 0.1385857, 0.38971668, 0.3986069, -0.12420716, -0.14313553, 0.010924537, 0.10948317, -0.8574177)\n7\tWrappedArray(-0.008130442, 0.112332046, 0.039413482, 0.36777344, 0.40716076, 0.22953005, -0.2813737, 0.17503923, 0.24012262, -0.89350563)\n8\tWrappedArray(-0.05721035, -0.23784582, 0.20219165, 0.42345744, 0.06199093, 0.06971448, 0.2422319, 0.22391003, 0.51300144, -0.5822865)\n10\tWrappedArray(8.676767E-4, 0.060162865, 0.1385857, 0.38971668, 0.3986069, -0.12420716, -0.14313553, 0.010924537, 0.10948317, -0.8574177)\n11\tWrappedArray(8.676767E-4, 0.060162865, 0.1385857, 0.38971668, 0.3986069, -0.12420716, -0.14313553, 0.010924537, 0.10948317, -0.8574177)\n14\tWrappedArray(-0.05184677, -0.14075397, 0.17666061, 0.38915274, 0.2392976, 0.35750318, -0.09226304, 0.16406077, 0.4450993, -0.82548195)\n15\tWrappedArray(-0.05721035, -0.23784582, 0.20219165, 0.42345744, 0.06199093, 0.06971448, 0.2422319, 0.22391003, 0.51300144, -0.5822865)\n16\tWrappedArray(-0.05721035, -0.23784582, 0.20219165, 0.42345744, 0.06199093, 0.06971448, 0.2422319, 0.22391003, 0.51300144, -0.5822865)\n18\tWrappedArray(-0.021100428, 0.0065587563, 0.1377254, 0.35400835, 0.38090423, 0.2282843, -0.2567637, 0.054894697, 0.22867097, -0.90249455)\n20\tWrappedArray(-0.05721035, -0.23784582, 0.20219165, 0.42345744, 0.06199093, 0.06971448, 0.2422319, 0.22391003, 0.51300144, -0.5822865)\n23\tWrappedArray(-0.05721035, -0.23784582, 0.20219165, 0.42345744, 0.06199093, 0.06971448, 0.2422319, 0.22391003, 0.51300144, -0.5822865)\n27\tWrappedArray(0.21967769, -0.56334245, -0.17957142, -0.1343466, -0.63060427, -0.077769734, -0.11338074, -0.46402994, 0.059619445, -0.25049263)\n29\tWrappedArray(-0.05721035, -0.23784582, 0.20219165, 0.42345744, 0.06199093, 0.06971448, 0.2422319, 0.22391003, 0.51300144, -0.5822865)\n32\tWrappedArray(-0.05721035, -0.23784582, 0.20219165, 0.42345744, 0.06199093, 0.06971448, 0.2422319, 0.22391003, 0.51300144, -0.5822865)\n33\tWrappedArray(-0.05721035, -0.23784582, 0.20219165, 0.42345744, 0.06199093, 0.06971448, 0.2422319, 0.22391003, 0.51300144, -0.5822865)\n34\tWrappedArray(-0.05184677, -0.14075397, 0.17666061, 0.38915274, 0.2392976, 0.35750318, -0.09226304, 0.16406077, 0.4450993, -0.82548195)\n35\tWrappedArray(-0.05721035, -0.23784582, 0.20219165, 0.42345744, 0.06199093, 0.06971448, 0.2422319, 0.22391003, 0.51300144, -0.5822865)\n38\tWrappedArray(-0.03485119, -0.036845766, 0.11367203, 0.265754, 0.30229086, 0.46764094, -0.3028338, 0.080268614, 0.28389528, -0.7848878)\n39\tWrappedArray(-0.05721035, -0.23784582, 0.20219165, 0.42345744, 0.06199093, 0.06971448, 0.2422319, 0.22391003, 0.51300144, -0.5822865)\n41\tWrappedArray(-0.05721035, -0.23784582, 0.20219165, 0.42345744, 0.06199093, 0.06971448, 0.2422319, 0.22391003, 0.51300144, -0.5822865)\n42\tWrappedArray(8.676767E-4, 0.060162865, 0.1385857, 0.38971668, 0.3986069, -0.12420716, -0.14313553, 0.010924537, 0.10948317, -0.8574177)\n44\tWrappedArray(-0.05721035, -0.23784582, 0.20219165, 0.42345744, 0.06199093, 0.06971448, 0.2422319, 0.22391003, 0.51300144, -0.5822865)\n45\tWrappedArray(-0.05721035, -0.23784582, 0.20219165, 0.42345744, 0.06199093, 0.06971448, 0.2422319, 0.22391003, 0.51300144, -0.5822865)\n46\tWrappedArray(-0.05721035, -0.23784582, 0.20219165, 0.42345744, 0.06199093, 0.06971448, 0.2422319, 0.22391003, 0.51300144, -0.5822865)\n50\tWrappedArray(-0.05721035, -0.23784582, 0.20219165, 0.42345744, 0.06199093, 0.06971448, 0.2422319, 0.22391003, 0.51300144, -0.5822865)\n51\tWrappedArray(-0.05721035, -0.23784582, 0.20219165, 0.42345744, 0.06199093, 0.06971448, 0.2422319, 0.22391003, 0.51300144, -0.5822865)\n52\tWrappedArray(-0.05721035, -0.23784582, 0.20219165, 0.42345744, 0.06199093, 0.06971448, 0.2422319, 0.22391003, 0.51300144, -0.5822865)\n53\tWrappedArray(-0.05721035, -0.23784582, 0.20219165, 0.42345744, 0.06199093, 0.06971448, 0.2422319, 0.22391003, 0.51300144, -0.5822865)\n56\tWrappedArray(-0.05721035, -0.23784582, 0.20219165, 0.42345744, 0.06199093, 0.06971448, 0.2422319, 0.22391003, 0.51300144, -0.5822865)\n57\tWrappedArray(-0.05721035, -0.23784582, 0.20219165, 0.42345744, 0.06199093, 0.06971448, 0.2422319, 0.22391003, 0.51300144, -0.5822865)\n59\tWrappedArray(-0.05721035, -0.23784582, 0.20219165, 0.42345744, 0.06199093, 0.06971448, 0.2422319, 0.22391003, 0.51300144, -0.5822865)\n61\tWrappedArray(-0.03485119, -0.036845766, 0.11367203, 0.265754, 0.30229086, 0.46764094, -0.3028338, 0.080268614, 0.28389528, -0.7848878)\n62\tWrappedArray(0.21824892, -0.5847708, -0.04070531, 0.25535783, -0.25272086, 0.080589436, -0.3769845, -0.44900778, 0.2868117, -1.2543044)\n63\tWrappedArray(-0.038582347, -0.08905169, 0.18192996, 0.4293544, 0.30881163, 0.2055506, -0.10002211, 0.12938827, 0.37382966, -0.9034492)\n69\tWrappedArray(-0.029601902, -0.085889295, 0.197735, 0.47951236, 0.29472187, -0.044882003, 0.033659533, 0.12526971, 0.34252274, -0.87072563)\n"
      },
      "dateCreated": "Mar 1, 2016 8:46:57 PM",
      "dateStarted": "Mar 9, 2016 3:21:36 PM",
      "dateFinished": "Mar 9, 2016 3:21:36 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Generate Personalized Recommendations For All Users",
      "text": "model.setPredictionCol(\"confidence\")\n\nval recommendationsDF \u003d model.transform(itemRatingsDF.select($\"userId\", $\"itemId\"))\n\nval enrichedRecommendationsDF \u003d \n   recommendationsDF.join(itemsDF, $\"itemId\" \u003d\u003d\u003d $\"id\")\n   .select($\"userId\", $\"itemId\", $\"title\", $\"description\", $\"tags\", $\"img\", $\"confidence\")\n   .sort($\"userId\", $\"itemId\", $\"confidence\" desc)\n   \nz.show(enrichedRecommendationsDF.select($\"userId\", $\"title\", $\"itemId\", $\"confidence\"))",
      "dateUpdated": "Mar 9, 2016 3:21:42 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 284.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "userId",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "title",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "userId",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "title": true,
        "tableHide": false,
        "editorHide": false,
        "editorMode": "ace/mode/scala",
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435978292871_1625908707",
      "id": "20150704-025132_1487939440",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "userId\ttitle\titemId\tconfidence\n20014\tApache Spark\t7\t0.9925583\n26058\tTachyon\t2\t0.9888044\n26058\tApache Ambari\t3\t0.9888044\n26058\tApache Flume\t8\t0.9888044\n26058\tApache Hive\t14\t0.99819887\n26058\tHortonworks\t15\t0.9888044\n26058\tApache HUE\t16\t0.9888044\n26058\tApache Solr\t20\t0.9888044\n26058\tApache Drill\t23\t0.9888044\n26058\tStanford CoreNLP\t29\t0.9888044\n26058\tApache Sqoop\t32\t0.9888044\n26058\tApache Oozie\t33\t0.9888044\n26058\tApache Nifi\t34\t0.99819887\n26058\tNLTK\t35\t0.9888044\n26058\tTableau\t39\t0.9888044\n26058\tSQL\t41\t0.9888044\n26058\tPython\t44\t0.9888044\n26058\tPresto\t45\t0.9888044\n26058\tMapR\t46\t0.9888044\n26058\tGoogle Cloud Platform\t50\t0.9888044\n26058\tRedis\t51\t0.9888044\n26058\tJSON\t52\t0.9888044\n26058\tXML\t53\t0.9888044\n26058\tMicroStrategy\t56\t0.9888044\n26058\tKnime\t57\t0.9888044\n26058\tOracle\t59\t0.9888044\n26058\tSpark SQL\t63\t0.9976877\n26058\tSpark GraphX\t69\t0.99637395\n33366\tApache Cassandra\t1\t0.981782\n33366\tApache Spark\t7\t0.9988127\n33366\tApache Hive\t14\t0.9947616\n33366\tApache Kafka\t18\t0.99219847\n33366\tApache Nifi\t34\t0.9947616\n33366\tApache Zeppelin\t38\t0.98178196\n33366\tSpark ML/MLlib\t61\t0.98178196\n33366\tSpark Streaming\t62\t0.9994152\n33366\tSpark SQL\t63\t1.0004462\n61533\tDocker\t4\t0.9831008\n61533\tApache Spark\t7\t0.9996732\n61533\tApache HDFS\t10\t0.98310065\n61533\tApache YARN\t11\t0.9831008\n61533\tApache Kafka\t18\t0.9952948\n61533\tScala\t42\t0.9831008\n61533\tSpark Streaming\t62\t0.9991502\n61533\tSpark SQL\t63\t1.001394\n61533\tSpark GraphX\t69\t0.9928269\n84653\tApache Pig\t27\t0.9829055\n84653\tSpark Streaming\t62\t0.9994353\n"
      },
      "dateCreated": "Jul 4, 2015 2:51:32 AM",
      "dateStarted": "Mar 9, 2016 3:21:42 PM",
      "dateFinished": "Mar 9, 2016 3:21:44 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "userFactor Vector dot product ItemFactor vector ",
      "text": "import org.jblas.DoubleMatrix\n\n// Item 7\nval anItemFeatureArray \u003d model.itemFactors.select($\"id\".as(\"itemId\"), $\"features\".as(\"itemFeatures\"))\n  .where($\"itemId\" \u003d\u003d\u003d 7).flatMap(row \u003d\u003e row.getSeq[Float](1)).map(_.toDouble).collect()\n\n// User 33366\nval aUserFeatureArray \u003d model.userFactors.select($\"id\".as(\"userId\"), $\"features\".as(\"userFeatures\"))\n  .where($\"userId\" \u003d\u003d\u003d 33366).flatMap(row \u003d\u003e row.getSeq[Float](1)).map(_.toDouble).collect()\n\n// Create JBlas DoubleMatrix\nval aUserFeatureVector \u003d new DoubleMatrix(aUserFeatureArray)\nval anItemFeatureVector \u003d new DoubleMatrix(anItemFeatureArray)\n\n// Take dot product of the User x Item vectors\n// This should equal the confidence value in the offline-generated matrix\nval confidence \u003d aUserFeatureVector.dot(anItemFeatureVector)\n",
      "dateUpdated": "Mar 9, 2016 3:21:53 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456954812726_1681075178",
      "id": "20160302-214012_540640872",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.jblas.DoubleMatrix\nanItemFeatureArray: Array[Double] \u003d Array(-0.008130442351102829, 0.1123320460319519, 0.03941348195075989, 0.3677734434604645, 0.40716075897216797, 0.22953005135059357, -0.2813737094402313, 0.17503923177719116, 0.24012261629104614, -0.8935056328773499)\naUserFeatureArray: Array[Double] \u003d Array(-0.027526386082172394, -0.04006738215684891, 0.10088590532541275, 0.2417527735233307, 0.24664360284805298, 0.3479194939136505, -0.22256320714950562, 0.07135136425495148, 0.24721288681030273, -0.6664171814918518)\naUserFeatureVector: org.jblas.DoubleMatrix \u003d [-0.027526; -0.040067; 0.100886; 0.241753; 0.246644; 0.347919; -0.222563; 0.071351; 0.247213; -0.666417]\nanItemFeatureVector: org.jblas.DoubleMatrix \u003d [-0.008130; 0.112332; 0.039413; 0.367773; 0.407161; 0.229530; -0.281374; 0.175039; 0.240123; -0.893506]\nconfidence: Double \u003d 0.9988126751438718\n"
      },
      "dateCreated": "Mar 2, 2016 9:40:12 PM",
      "dateStarted": "Mar 9, 2016 3:21:53 PM",
      "dateFinished": "Mar 9, 2016 3:21:54 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Write to ElasticSearch",
      "text": "//import org.elasticsearch.spark.sql._ \n//import org.apache.spark.sql.SaveMode\n\n//val esConfig \u003d Map(\"pushdown\" -\u003e \"true\", \"es.nodes\" -\u003e \"127.0.0.1\", \"es.port\" -\u003e \"9200\")\n//enrichedRecommendationsDF.write.format(\"org.elasticsearch.spark.sql\").mode(SaveMode.Overwrite).options(esConfig)\n//  .save(\"advancedspark/personalized-als\")",
      "dateUpdated": "Mar 7, 2016 3:55:35 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorHide": true,
        "editorMode": "ace/mode/scala",
        "enabled": true,
        "tableHide": true,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1438113388648_-491234562",
      "id": "20150728-195628_1365871289",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "Jul 28, 2015 7:56:28 PM",
      "dateStarted": "Mar 5, 2016 11:07:57 PM",
      "dateFinished": "Mar 5, 2016 11:07:58 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "dateUpdated": "Mar 5, 2016 11:07:49 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1451070498135_426640744",
      "id": "20151225-190818_1269982895",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT"
      },
      "dateCreated": "Dec 25, 2015 7:08:18 PM",
      "dateStarted": "Mar 5, 2016 11:07:58 PM",
      "dateFinished": "Mar 5, 2016 11:07:58 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Live Recs/03:  Generate User-to-Item Collaborative Filter Recs (ALS)",
  "id": "2AUYFSKXN",
  "angularObjects": {
    "2ARR8UZDJ": [],
    "2AS9P7JSA": [],
    "2AR33ZMZJ": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}