{
  "paragraphs": [
    {
      "title": "Collaborative Filtering:  Matrix Factorization using Alternating Least Squares (ALS)",
      "text": "%md ![Alternating Least Squares - Matrix Factorization](http://advancedspark.com/img/collaborative-filtering-with-als-matrix-factorization.png)",
      "dateUpdated": "May 1, 2016 4:42:04 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "editorHide": true,
        "editorMode": "ace/mode/markdown",
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435978153894_1534941045",
      "id": "20150704-024913_884517592",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003e\u003cimg src\u003d\"http://advancedspark.com/img/collaborative-filtering-with-als-matrix-factorization.png\" alt\u003d\"Alternating Least Squares - Matrix Factorization\" /\u003e\u003c/p\u003e\n"
      },
      "dateCreated": "Jul 4, 2015 2:49:13 AM",
      "dateStarted": "May 1, 2016 4:42:06 AM",
      "dateFinished": "May 1, 2016 4:42:06 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Get Reference Data for Enrichment",
      "text": "val itemsDF \u003d sqlContext.read.format(\"json\")\n  .load(\"file:/root/pipeline/myapps/html/advancedspark.com/json/software.json\")\n  .withColumnRenamed(\"id\", \"itemId\")\n  .as(\"items\")\n\nz.show(itemsDF.select($\"itemId\", $\"title\", $\"img\", $\"tags\"))",
      "dateUpdated": "May 1, 2016 4:42:06 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 175.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "itemId",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "title",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "itemId",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "title",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456864386968_-1684206029",
      "id": "20160301-203306_1764877860",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "itemId\ttitle\timg\ttags\n1\tApache Cassandra\timg/software/cassandra.png\tWrappedArray(Database, NoSQL, Java, Eventually Consistent, Transactional)\n2\tTachyon\timg/software/tachyon.png\tWrappedArray(Distributed Cache, Object Store, S3, Swift, HDFS)\n3\tApache Ambari\timg/software/ambari.png\tWrappedArray(Cluster Provision, Hadoop, Cluster Monitoring, REST API, Metrics, Alerts)\n4\tDocker\timg/software/docker.png\tWrappedArray(Container, Linux, DevOps, Deployment)\n5\tMicrosft Azure\timg/software/azure.png\tWrappedArray(Cloud Provider, Microsoft)\n6\tApache Flink\timg/software/flink.png\tWrappedArray(Data Processing, Java, Scala, SQL, DataFrame, Table, Streaming Analytics, Batch Analytics, Machine Learning, Graph Analytics, Approximations, Sampling)\n7\tApache Spark\timg/software/spark.png\tWrappedArray(Data Processing, Java, Scala, SQL, R, Python, DataFrame, Table, DataStream, Streaming Analytics, Batch Analytics, Machine Learning, Graph Analytics, Approximations, Sampling, Lazy)\n8\tApache Flume\timg/software/flume.png\tWrappedArray(Library, Java, Log Collection)\n9\tApache Giraph\timg/software/giraph.png\tWrappedArray(Library, Java, Graph Analytics, Batch)\n10\tApache HDFS\timg/software/hdfs.png\tWrappedArray(File System, Hadoop, Java)\n11\tApache YARN\timg/software/yarn.png\tWrappedArray(Cluster Resource Manager, Hadoop, Java)\n12\tApache HBase\timg/software/hbase.png\tWrappedArray(Database, Hadoop, NoSQL, Java, Eventually Consistent)\n13\tApache MapReduce\timg/software/mapreduce.png\tWrappedArray(Data Processing, Hadoop, Java, Python)\n14\tApache Hive\timg/software/hive.png\tWrappedArray(Data Processing, Hadoop, HiveQL, SQL, Query Processing, Java, MapReduce)\n15\tHortonworks\timg/software/hortonworks.png\tWrappedArray(Distribution, Hadoop, Spark, Kafka)\n16\tApache HUE\timg/software/hue.png\tWrappedArray(UI, Hadoop, Cloudera, Ad Hoc, HiveQL, SQL, Data Import, Java)\n17\tApache Impala\timg/software/impala.png\tWrappedArray(Data Processing, Query Processing, SQL, C++, Batch Analytics)\n18\tApache Kafka\timg/software/kafka.png\tWrappedArray(Message Broker, Java, C++, REST API, Messaging, Publish Subscribe, Producer Consumer)\n19\tApache Lucene\timg/software/lucene.png\tWrappedArray(Library, Search, Java, Python)\n20\tApache Solr\timg/software/solr.png\tWrappedArray(Search Engine, Java, REST API, UI, Python, Ruby, XML, JSON)\n21\tElasticSearch\timg/software/elasticsearch.png\tWrappedArray(Search Engine, Java, Python, REST API, Lucene, XML, JSON, Aggregations)\n22\tApache Mahout\timg/software/mahout.png\tWrappedArray(Library, Machine Learning, Java)\n23\tApache Drill\timg/software/drill.png\tWrappedArray(Data Processing, Query Processing, SQL, Aggregations, Joins, Batch Analytics)\n24\tApache Mesos\timg/software/mesos.png\tWrappedArray(Cluster Resource Manager, Docker, Container)\n25\tApache Parquet\timg/software/parquet.png\tWrappedArray(File Format, Columnar, Compression, Evolving Schema, Nested Schema, Java, C++, Python)\n26\tApache ORC\timg/software/orc.png\tWrappedArray(File Format, Columnar, Compression, Evolving Schema, Nested Schema)\n27\tApache Pig\timg/software/pig.png\tWrappedArray(Data Processing, Hadoop, HiveQL, SQL, Query Processing, Java, Lazy)\n28\tApache ZooKeeper\timg/software/zookeeper.png\tWrappedArray(Distribured Coordinator, Paxos, RAFT, Hadoop, HiveQL, SQL, Query Processing, Java, Lazy)\n29\tStanford CoreNLP\timg/software/corenlp.png\tWrappedArray(Library, NLP, Java, Text Analytics)\n30\tApache Tez\timg/software/tez.png\tWrappedArray(Data Processing, Hadoop, YARN, Query Processing, Java, Lazy, HiveQL, Pig, SQL)\n31\tApache Storm\timg/software/storm.png\tWrappedArray(Streaming, Java)\n32\tApache Sqoop\timg/software/sqoop.png\tWrappedArray(Data Import, Hadoop, Java)\n33\tApache Oozie\timg/software/oozie.png\tWrappedArray(Workflow, Hadoop, Java, UI)\n34\tApache Nifi\timg/software/nifi.png\tWrappedArray(Workflow, Streaming, Message Broker, Java, UI)\n35\tNLTK\timg/software/nltk.png\tWrappedArray(Library, NLP, Python, Text Analytics)\n36\tSci-Kit Learn\timg/software/scikit-learn.png\tWrappedArray(Library, Python, Machine Learning)\n37\tiPython/Jupyter\timg/software/ipython.png\tWrappedArray(Notebook, Python, Java, Scala, R, Visualization, SQL)\n38\tApache Zeppelin\timg/software/zeppelin.png\tWrappedArray(Notebook, Python, Java, Scala, R, HiveQL, Cassandra, Visualization, SQL)\n39\tTableau\timg/software/tableau.png\tWrappedArray(BI, UI, Visualization, SQL)\n40\tR\timg/software/r.png\tWrappedArray(Programming Language, Dynamic Typing, Interpreted)\n41\tSQL\timg/software/sql.png\tWrappedArray(Programming Language, SQL, RDBMS, Interpreted)\n42\tScala\timg/software/scala.png\tWrappedArray(Programming Language, Functional, Java, Static Typing, Compiled)\n43\tJava\timg/software/java.png\tWrappedArray(Programming Language, Object Oriented, Java, Static Typing, Compiled)\n44\tPython\timg/software/python.png\tWrappedArray(Programming Language, Dynamic Typing, Interpreted)\n45\tPresto\timg/software/presto.png\tWrappedArray(Data Processing, Query Processing, Java, SQL, Machine Learning)\n46\tMapR\timg/software/mapr.png\tWrappedArray(Distribution, Hadoop, Spark, Kafka)\n47\tCloudera\timg/software/cloudera.png\tWrappedArray(Distribution, Hadoop, Spark, Kafka)\n48\tIBM BigInsights\timg/software/biginsights.png\tWrappedArray(Distribution, Hadoop, Spark, Kafka)\n49\tAmazon Web Services\timg/software/aws.png\tWrappedArray(Cloud Provider, AWS)\n50\tGoogle Cloud Platform\timg/software/googlecloud.png\tWrappedArray(Cloud Provider, Google)\n51\tRedis\timg/software/redis.png\tWrappedArray(Distributed Cache, Key Value Store, HyperLogLog, Approximations, Probabilistic Data Structures, UDAF)\n52\tJSON\timg/software/json.png\tWrappedArray(File Format, Key Value Store)\n53\tXML\timg/software/xml.png\tWrappedArray(File Format, Key Value Store)\n54\tMongoDB\timg/software/mongodb.png\tWrappedArray(Database, Document Store, Key Value Store, NoSQL, JSON, Eventually Consistent)\n55\tOn-Premise\timg/software/onpremise.png\tWrappedArray(Cloud Provider, Data Center)\n56\tMicroStrategy\timg/software/microstrategy.png\tWrappedArray(BI, UI, Visualization, SQL)\n57\tKnime\timg/software/knime.png\tWrappedArray(Workflow, UI, Machine Learning, Graph Processing, Visualization)\n59\tOracle\timg/software/oracle.png\tWrappedArray(Database, SQL, RDBMS, Transactional)\n60\tMySQL\timg/software/mysql.png\tWrappedArray(Database, SQL, RDBMS, Transactional)\n61\tSpark ML/MLlib\timg/software/spark-ml.png\tWrappedArray(Library, Spark, Machine Learning)\n62\tSpark Streaming\timg/software/spark-streaming.png\tWrappedArray(Library, Spark, Streaming)\n63\tSpark SQL\timg/software/spark-sql.png\tWrappedArray(Library, Spark, HiveQL, SQL)\n64\tCSV\timg/software/csv.png\tWrappedArray(File Format)\n65\tDeep Learning 4J\timg/software/deeplearning4j.png\tWrappedArray(Library, Deep Learning, Neural Networks)\n66\tRedshift\timg/software/redshift.png\tWrappedArray(Database, Columnar, Data Warehouse, AWS, SQL)\n67\tKinesis\timg/software/kinesis.png\tWrappedArray(Library, Streaming, AWS)\n68\tDynamoDB\timg/software/dynamodb.png\tWrappedArray(Database, NoSQL, AWS, SQL, Approximations, Eventually Consistent)\n69\tSpark GraphX\timg/software/spark-graphx.png\tWrappedArray(Library, Graph Analytics, Spark)\n70\tSQL Server\timg/software/sqlserver.png\tWrappedArray(Database, SQL, Microsoft, RDBMS, Transactional)\n71\tElastic MapReduce\timg/software/emr.png\tWrappedArray(Data Processing, MapReduce, Spark, HiveQL, Pig, AWS, Presto)\n72\tDato GraphLab Create\timg/software/graphlab.png\tWrappedArray(Library, UI, Graph Analytics, Machine Learning, Query Processing, Visualization)\n73\tMemcached\timg/software/memcached.png\tWrappedArray(Distributed Cache, Key Value Store, Java, Python, C++)\n74\tNeo4j\timg/software/neo4j.png\tWrappedArray(Library, Graph Analytics, Java)\n75\tPostgres\timg/software/postgres.png\tWrappedArray(Database, SQL, RDBMS, Transactional)\n76\tProtobuffers\timg/software/protobuffers.png\tWrappedArray(File Format, Evolving Schema, Nested Schema)\n77\tS3\timg/software/s3.png\tWrappedArray(File System, Object Store, AWS, Eventually Consistent)\n78\tTensor Flow\timg/software/tensorflow.png\tWrappedArray(Data Processing, Deep Learning, Neural Networks)\n79\tTitan GraphDB\timg/software/titandb.png\tWrappedArray(Database, Graph, Graph Analytics, Java, Transactional)\n80\tTeradata\timg/software/teradata.png\tWrappedArray(Database, Data Warehouse, SQL)\n81\tVertica\timg/software/vertica.png\tWrappedArray(Database, Data Warehouse, SQL)\n"
      },
      "dateCreated": "Mar 1, 2016 8:33:06 PM",
      "dateStarted": "May 1, 2016 4:42:08 AM",
      "dateFinished": "May 1, 2016 4:42:09 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Get Live Ratings from Cassandra",
      "text": "val cassandraConfig \u003d Map(\"keyspace\" -\u003e \"advancedspark\", \"table\" -\u003e \"item_ratings\")\n\nval itemRatingsDF \u003d sqlContext.read.format(\"org.apache.spark.sql.cassandra\")\n  .options(cassandraConfig)\n  .load()\n  .select($\"userid\", $\"itemid\", $\"rating\", $\"timestamp\")\n  .withColumnRenamed(\"userid\", \"userId\")\n  .withColumnRenamed(\"itemid\", \"itemId\")\n  .as(\"itemRatings\")",
      "dateUpdated": "May 1, 2016 4:42:13 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456864425764_-1117794352",
      "id": "20160301-203345_1180596367",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "cassandraConfig: scala.collection.immutable.Map[String,String] \u003d Map(keyspace -\u003e advancedspark, table -\u003e item_ratings)\nitemRatingsDF: org.apache.spark.sql.DataFrame \u003d [userId: int, itemId: int, rating: int, timestamp: bigint]\n"
      },
      "dateCreated": "Mar 1, 2016 8:33:45 PM",
      "dateStarted": "May 1, 2016 4:42:19 AM",
      "dateFinished": "May 1, 2016 4:42:20 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Train The ALS Model",
      "text": "import org.apache.spark.ml.recommendation.ALS\n\nval rank \u003d 10 // this is k, number of latent factors we think exist\nval maxIterations \u003d 20\nval convergenceThreshold \u003d 0.01\n\nval als \u003d new ALS()\n  .setRank(rank)\n  .setRegParam(convergenceThreshold)\n  .setUserCol(\"userId\")\n  .setItemCol(\"itemId\")\n  .setRatingCol(\"rating\")\n\nval model \u003d als.fit(itemRatingsDF)",
      "dateUpdated": "May 1, 2016 4:42:19 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "editorHide": false,
        "editorMode": "ace/mode/scala",
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435978256373_-160526409",
      "id": "20150704-025056_169923529",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.apache.spark.ml.recommendation.ALS\nrank: Int \u003d 10\nmaxIterations: Int \u003d 20\nconvergenceThreshold: Double \u003d 0.01\nals: org.apache.spark.ml.recommendation.ALS \u003d als_d24ab8526283\nmodel: org.apache.spark.ml.recommendation.ALSModel \u003d als_d24ab8526283\n"
      },
      "dateCreated": "Jul 4, 2015 2:50:56 AM",
      "dateStarted": "May 1, 2016 4:42:21 AM",
      "dateFinished": "May 1, 2016 4:42:28 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Generate Recommendations for all Users",
      "text": "model.setPredictionCol(\"confidence\")\n\nval recommendationsDF \u003d model.transform(itemRatingsDF.select($\"userId\", $\"itemId\"))\n\nval enrichedRecommendationsDF \u003d \n   recommendationsDF.join(itemsDF, $\"items.itemId\" \u003d\u003d\u003d $\"itemRatings.itemId\")\n   .select($\"userId\", $\"items.itemId\", $\"title\", $\"description\", $\"tags\", $\"img\", $\"confidence\")\n   .sort($\"userId\", $\"confidence\" desc, $\"items.itemId\")\n   \nz.show(enrichedRecommendationsDF.select($\"userId\", $\"itemId\", $\"title\", $\"confidence\"))",
      "dateUpdated": "May 1, 2016 4:42:24 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461100304691_419185220",
      "id": "20160419-211144_1773438539",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "userId\titemId\ttitle\tconfidence\n3969\t62\tSpark Streaming\t1.0171309\n3969\t51\tRedis\t1.0126728\n3969\t28\tApache ZooKeeper\t1.0092077\n3969\t63\tSpark SQL\t1.0070763\n3969\t18\tApache Kafka\t1.004454\n3969\t52\tJSON\t1.0032365\n3969\t42\tScala\t1.0021375\n3969\t12\tApache HBase\t0.9978051\n3969\t7\tApache Spark\t0.9962057\n3969\t11\tApache YARN\t0.993606\n3969\t8\tApache Flume\t0.99065626\n3969\t61\tSpark ML/MLlib\t0.98950994\n3969\t10\tApache HDFS\t0.9880995\n3969\t54\tMongoDB\t0.98786235\n3969\t15\tHortonworks\t0.9854957\n3969\t14\tApache Hive\t0.982859\n3969\t34\tApache Nifi\t0.9820546\n3969\t25\tApache Parquet\t0.9812664\n3969\t3\tApache Ambari\t0.9771075\n3969\t38\tApache Zeppelin\t0.9745069\n3969\t29\tStanford CoreNLP\t0.9735912\n3969\t41\tSQL\t0.9735912\n5342\t50\tGoogle Cloud Platform\t1.0071062\n5342\t40\tR\t1.0035934\n5342\t25\tApache Parquet\t0.9963905\n5342\t33\tApache Oozie\t0.9961009\n5342\t63\tSpark SQL\t0.99551666\n5342\t67\tKinesis\t0.9950647\n5342\t62\tSpark Streaming\t0.9948747\n5342\t34\tApache Nifi\t0.9924702\n5342\t66\tRedshift\t0.9732105\n5342\t72\tDato GraphLab Create\t0.9732105\n6437\t42\tScala\t1.0048404\n6437\t33\tApache Oozie\t1.001353\n6437\t27\tApache Pig\t0.99890125\n6437\t69\tSpark GraphX\t0.9930551\n6437\t61\tSpark ML/MLlib\t0.9900848\n6437\t65\tDeep Learning 4J\t0.96769136\n8910\t15\tHortonworks\t1.0052013\n8910\t10\tApache HDFS\t1.0018203\n8910\t16\tApache HUE\t0.99559444\n8910\t14\tApache Hive\t0.99555814\n8910\t1\tApache Cassandra\t0.9921324\n8910\t7\tApache Spark\t0.9897071\n8910\t9\tApache Giraph\t0.97795147\n12663\t33\tApache Oozie\t1.0172958\n12663\t44\tPython\t1.0166017\n12663\t1\tApache Cassandra\t1.0110943\n12663\t7\tApache Spark\t1.0045391\n12663\t60\tMySQL\t1.0034184\n12663\t51\tRedis\t1.0029014\n12663\t42\tScala\t1.0019019\n12663\t18\tApache Kafka\t1.001431\n12663\t49\tAmazon Web Services\t1.0005561\n12663\t28\tApache ZooKeeper\t1.000307\n12663\t14\tApache Hive\t1.0000576\n12663\t15\tHortonworks\t0.9985037\n12663\t10\tApache HDFS\t0.9984718\n12663\t39\tTableau\t0.9977289\n12663\t11\tApache YARN\t0.9969727\n12663\t17\tApache Impala\t0.9957373\n12663\t79\tTitan GraphDB\t0.99528706\n12663\t24\tApache Mesos\t0.9950998\n12663\t61\tSpark ML/MLlib\t0.9931939\n12663\t12\tApache HBase\t0.9895601\n12663\t13\tApache MapReduce\t0.9870236\n12663\t16\tApache HUE\t0.98574805\n12663\t62\tSpark Streaming\t0.98305905\n12663\t63\tSpark SQL\t0.98066473\n12663\t32\tApache Sqoop\t0.97871965\n12663\t54\tMongoDB\t0.97771657\n12663\t74\tNeo4j\t0.9700168\n12663\t26\tApache ORC\t0.96638715\n12663\t30\tApache Tez\t0.96638715\n12663\t38\tApache Zeppelin\t0.96587694\n13077\t2\tTachyon\t1.0063384\n13077\t13\tApache MapReduce\t0.9948697\n13077\t12\tApache HBase\t0.9902481\n13077\t3\tApache Ambari\t0.9815591\n13338\t56\tMicroStrategy\t0.98993206\n17841\t11\tApache YARN\t1.0096167\n17841\t14\tApache Hive\t1.0061029\n17841\t44\tPython\t1.0020137\n17841\t42\tScala\t1.000114\n17841\t63\tSpark SQL\t0.99951863\n17841\t39\tTableau\t0.99350345\n17841\t40\tR\t0.98670757\n17841\t12\tApache HBase\t0.97826207\n17841\t9\tApache Giraph\t0.9622743\n18102\t8\tApache Flume\t1.0058508\n18102\t16\tApache HUE\t1.0036973\n18102\t21\tElasticSearch\t1.0035429\n18102\t15\tHortonworks\t1.0030265\n18102\t17\tApache Impala\t1.002415\n18102\t20\tApache Solr\t1.0004973\n18102\t10\tApache HDFS\t0.9950355\n18102\t9\tApache Giraph\t0.9929384\n18102\t14\tApache Hive\t0.98801506\n18102\t11\tApache YARN\t0.9833854\n18102\t22\tApache Mahout\t0.97575617\n18102\t23\tApache Drill\t0.9699416\n20229\t28\tApache ZooKeeper\t1.0159159\n20229\t24\tApache Mesos\t1.004441\n20229\t7\tApache Spark\t0.9980065\n20229\t18\tApache Kafka\t0.9960773\n20229\t40\tR\t0.9947492\n20229\t42\tScala\t0.99154365\n20229\t51\tRedis\t0.9885086\n20229\t20\tApache Solr\t0.9861978\n20229\t62\tSpark Streaming\t0.9834486\n20229\t49\tAmazon Web Services\t0.98062366\n23426\t42\tScala\t1.0107269\n23426\t18\tApache Kafka\t0.99528617\n23426\t70\tSQL Server\t0.9933858\n23426\t11\tApache YARN\t0.9910306\n23426\t63\tSpark SQL\t0.98702264\n23426\t69\tSpark GraphX\t0.9854217\n25639\t33\tApache Oozie\t1.0084534\n25639\t15\tHortonworks\t1.003556\n25639\t17\tApache Impala\t1.0002537\n25639\t18\tApache Kafka\t0.99975777\n25639\t14\tApache Hive\t0.99951017\n25639\t2\tTachyon\t0.996529\n25639\t60\tMySQL\t0.9902454\n25639\t9\tApache Giraph\t0.98810184\n25639\t7\tApache Spark\t0.9870279\n25639\t61\tSpark ML/MLlib\t0.98467225\n25639\t45\tPresto\t0.9518976\n27045\t7\tApache Spark\t1.0098135\n27045\t1\tApache Cassandra\t1.0028682\n27045\t20\tApache Solr\t1.0014689\n27045\t62\tSpark Streaming\t0.99767125\n27045\t42\tScala\t0.9954614\n27045\t18\tApache Kafka\t0.9924899\n27045\t63\tSpark SQL\t0.99175304\n27045\t70\tSQL Server\t0.9899661\n27045\t79\tTitan GraphDB\t0.9805317\n27045\t60\tMySQL\t0.97560036\n27569\t40\tR\t1.0084786\n27569\t44\tPython\t1.0011158\n27569\t28\tApache ZooKeeper\t0.99833554\n27569\t1\tApache Cassandra\t0.99414223\n27569\t21\tElasticSearch\t0.9930676\n27569\t62\tSpark Streaming\t0.986588\n27569\t2\tTachyon\t0.9850076\n27569\t37\tiPython/Jupyter\t0.98462003\n28567\t7\tApache Spark\t1.0058341\n28567\t74\tNeo4j\t0.9983847\n28567\t35\tNLTK\t0.99144375\n28567\t11\tApache YARN\t0.99024105\n28567\t61\tSpark ML/MLlib\t0.98699605\n28567\t78\tTensor Flow\t0.9835032\n29427\t18\tApache Kafka\t1.0040414\n29427\t21\tElasticSearch\t0.9996147\n29427\t51\tRedis\t0.99558187\n29427\t1\tApache Cassandra\t0.9944632\n29427\t42\tScala\t0.99078786\n29427\t52\tJSON\t0.97946733\n34063\t37\tiPython/Jupyter\t1.0246812\n34063\t77\tS3\t1.0122654\n34063\t50\tGoogle Cloud Platform\t1.0088729\n34063\t49\tAmazon Web Services\t1.0028577\n34063\t24\tApache Mesos\t1.0019437\n34063\t35\tNLTK\t0.99625206\n34063\t44\tPython\t0.99534416\n34063\t52\tJSON\t0.9881637\n34063\t29\tStanford CoreNLP\t0.9846793\n34063\t41\tSQL\t0.9846792\n34063\t74\tNeo4j\t0.98110956\n34063\t54\tMongoDB\t0.97621506\n34063\t36\tSci-Kit Learn\t0.97520447\n34063\t21\tElasticSearch\t0.9697722\n37022\t7\tApache Spark\t1.0069591\n37022\t20\tApache Solr\t1.0045345\n37022\t24\tApache Mesos\t1.003927\n37022\t69\tSpark GraphX\t1.0013568\n37022\t33\tApache Oozie\t0.9988823\n37022\t28\tApache ZooKeeper\t0.9944513\n37022\t42\tScala\t0.9829848\n37022\t43\tJava\t0.97024673\n37022\t76\tProtobuffers\t0.97024673\n37477\t38\tApache Zeppelin\t0.99447113\n37902\t7\tApache Spark\t1.0024111\n37902\t42\tScala\t1.0011544\n37902\t10\tApache HDFS\t0.9976719\n37902\t11\tApache YARN\t0.99415314\n37902\t39\tTableau\t0.9922817\n37902\t47\tCloudera\t0.9846305\n37902\t12\tApache HBase\t0.9819081\n45777\t50\tGoogle Cloud Platform\t1.0009257\n45777\t38\tApache Zeppelin\t0.99964404\n45777\t51\tRedis\t0.9992027\n45777\t45\tPresto\t0.97159755\n49360\t70\tSQL Server\t1.0014352\n49360\t7\tApache Spark\t0.9994815\n49360\t47\tCloudera\t0.9986592\n49360\t42\tScala\t0.995796\n49360\t54\tMongoDB\t0.99234235\n49360\t5\tMicrosft Azure\t0.97148037\n53734\t63\tSpark SQL\t0.9979211\n53734\t79\tTitan GraphDB\t0.9956516\n53734\t12\tApache HBase\t0.9871707\n54801\t37\tiPython/Jupyter\t1.0087388\n54801\t64\tCSV\t1.0024657\n54801\t35\tNLTK\t1.000247\n54801\t29\tStanford CoreNLP\t0.9982089\n54801\t41\tSQL\t0.9982089\n54801\t36\tSci-Kit Learn\t0.99549943\n54801\t40\tR\t0.9897743\n54801\t19\tApache Lucene\t0.97565717\n54801\t75\tPostgres\t0.97565717\n54801\t73\tMemcached\t0.9756571\n56348\t77\tS3\t1.0023108\n56348\t44\tPython\t1.0012392\n56348\t40\tR\t1.0011556\n56348\t49\tAmazon Web Services\t0.9964001\n56348\t64\tCSV\t0.9943688\n56348\t52\tJSON\t0.9847841\n56348\t39\tTableau\t0.9769417\n60978\t62\tSpark Streaming\t1.0100594\n60978\t44\tPython\t1.0081408\n60978\t36\tSci-Kit Learn\t0.9903999\n60978\t7\tApache Spark\t0.9857311\n60978\t67\tKinesis\t0.98174334\n60978\t78\tTensor Flow\t0.97932756\n73744\t28\tApache ZooKeeper\t1.0040376\n73744\t18\tApache Kafka\t0.9972067\n73744\t7\tApache Spark\t0.9965679\n73744\t34\tApache Nifi\t0.9959682\n73744\t68\tDynamoDB\t0.96704376\n74393\t21\tElasticSearch\t1.0068996\n74393\t16\tApache HUE\t1.0066966\n74393\t15\tHortonworks\t1.0007606\n74393\t28\tApache ZooKeeper\t0.9910494\n74393\t27\tApache Pig\t0.98154175\n74393\t22\tApache Mahout\t0.9742363\n74715\t52\tJSON\t1.0004281\n74715\t18\tApache Kafka\t0.99755156\n74715\t81\tVertica\t0.9772543\n80675\t7\tApache Spark\t0.9968571\n80675\t6\tApache Flink\t0.9873344\n82510\t7\tApache Spark\t1.015522\n82510\t21\tElasticSearch\t1.0137877\n82510\t52\tJSON\t0.9974848\n82510\t62\tSpark Streaming\t0.9960445\n82510\t63\tSpark SQL\t0.9913174\n82510\t54\tMongoDB\t0.9888491\n82510\t53\tXML\t0.9790492\n82510\t74\tNeo4j\t0.97884566\n82510\t69\tSpark GraphX\t0.97622013\n86868\t70\tSQL Server\t1.001766\n86868\t20\tApache Solr\t1.001032\n86868\t62\tSpark Streaming\t1.000162\n86868\t7\tApache Spark\t0.9950707\n86868\t63\tSpark SQL\t0.99385405\n86868\t59\tOracle\t0.96691006\n88005\t6\tApache Flink\t0.9922639\n96340\t33\tApache Oozie\t1.020832\n96340\t18\tApache Kafka\t1.0146413\n96340\t49\tAmazon Web Services\t1.008974\n96340\t11\tApache YARN\t1.0061221\n96340\t42\tScala\t1.004473\n96340\t10\tApache HDFS\t1.0034819\n96340\t7\tApache Spark\t1.0017786\n96340\t8\tApache Flume\t0.999552\n96340\t62\tSpark Streaming\t0.9964006\n96340\t63\tSpark SQL\t0.9952478\n96340\t60\tMySQL\t0.9944989\n96340\t14\tApache Hive\t0.9930544\n96340\t17\tApache Impala\t0.9924158\n96340\t16\tApache HUE\t0.99185604\n96340\t52\tJSON\t0.9910427\n96340\t12\tApache HBase\t0.98923945\n96340\t20\tApache Solr\t0.9875137\n96340\t47\tCloudera\t0.9867871\n96340\t13\tApache MapReduce\t0.9817588\n96340\t53\tXML\t0.97741026\n96340\t64\tCSV\t0.9747751\n96340\t32\tApache Sqoop\t0.9742083\n96340\t61\tSpark ML/MLlib\t0.9740828\n96340\t27\tApache Pig\t0.97112405\n96971\t20\tApache Solr\t0.9973092\n96971\t1\tApache Cassandra\t0.997252\n96971\t18\tApache Kafka\t0.9956459\n96971\t7\tApache Spark\t0.9951445\n96971\t44\tPython\t0.98575556\n99839\t7\tApache Spark\t1.001281\n99839\t10\tApache HDFS\t1.0008496\n99839\t77\tS3\t0.99952585\n99839\t69\tSpark GraphX\t0.99713075\n99839\t11\tApache YARN\t0.99649715\n99839\t18\tApache Kafka\t0.99304235\n99839\t31\tApache Storm\t0.9656631\n"
      },
      "dateCreated": "Apr 19, 2016 9:11:44 PM",
      "dateStarted": "May 1, 2016 4:42:29 AM",
      "dateFinished": "May 1, 2016 4:42:38 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Store full recommendations in elasticSearch",
      "text": "import org.elasticsearch.spark.sql._\nimport org.apache.spark.sql.SaveMode\n\nval esConfig \u003d Map(\"pushdown\" -\u003e \"true\", \"es.nodes\" -\u003e \"127.0.0.1\", \"es.port\" -\u003e \"9200\")\n\nenrichedRecommendationsDF.write.format(\"org.elasticsearch.spark.sql\")\n  .mode(SaveMode.Overwrite)\n  .options(esConfig)\n  .save(\"advancedspark/personalized-als\")\n\nz.show(enrichedRecommendationsDF)",
      "dateUpdated": "May 1, 2016 4:42:34 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461100478491_-968756780",
      "id": "20160419-211438_174483447",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "userId\titemId\ttitle\tdescription\ttags\timg\tconfidence\n3969\t62\tSpark Streaming\tSpark Streaming is an extension of the core Spark API that enables scalable, high-throughput, fault-tolerant stream processing of live data streams. Data can be ingested from many sources like Kafka, Flume, Twitter, ZeroMQ, Kinesis, or TCP sockets, and can be processed using complex algorithms expressed with high-level functions like map, reduce, join and window. Finally, processed data can be pushed out to filesystems, databases, and live dashboards.\tWrappedArray(Library, Spark, Streaming)\timg/software/spark-streaming.png\t1.017131\n3969\t51\tRedis\tRedis is an open source, in-memory Data Structure Store, used as a database, a caching layer for a message broker.\tWrappedArray(Distributed Cache, Key Value Store, HyperLogLog, Approximations, Probabilistic Data Structures, UDAF)\timg/software/redis.png\t1.0126728\n3969\t28\tApache ZooKeeper\tApache ZooKeeper server which enables highly reliable distributed coordination.\tWrappedArray(Distribured Coordinator, Paxos, RAFT, Hadoop, HiveQL, SQL, Query Processing, Java, Lazy)\timg/software/zookeeper.png\t1.0092077\n3969\t63\tSpark SQL\tSpark SQL is a Spark module for structured data processing. It provides a programming abstraction called DataFrames and can also act as distributed SQL query engine. Spark SQL can also be used to read data from an existing Hive installation.\tWrappedArray(Library, Spark, HiveQL, SQL)\timg/software/spark-sql.png\t1.0070763\n3969\t18\tApache Kafka\tApache Kafka is publish-subscribe messaging system implementaed as a distributed commit log with a cluster centric design with string durability and fault tolerance guarantees.\tWrappedArray(Message Broker, Java, C++, REST API, Messaging, Publish Subscribe, Producer Consumer)\timg/software/kafka.png\t1.004454\n3969\t52\tJSON\tJSON is an open standard format that uses human-readable text to transmit data objects consisting of key value pairs.\tWrappedArray(File Format, Key Value Store)\timg/software/json.png\t1.0032365\n3969\t42\tScala\tScala began life in 2003, created by Martin Odersky and his research group at EPFL, next to Lake Geneva and the Alps, in Lausanne, Switzerland. Scala has since grown into a mature open source programming language, used by hundreds of thousands of developers, and is developed and maintained by scores of people all over the world. Have the best of both worlds. Construct elegant class hierarchies for maximum code reuse and extensibility, implement their behavior using higher-order functions. Or anything in-between.\tWrappedArray(Programming Language, Functional, Java, Static Typing, Compiled)\timg/software/scala.png\t1.0021375\n3969\t12\tApache HBase\tUse Apache HBase software when you need random, realtime read/write access to your Big Data. This project\u0027s goal is the hosting of very large tables -- billions of rows X millions of columns -- atop clusters of commodity hardware. HBase is an open-source, distributed, versioned, column-oriented store modeled after Google\u0027s Bigtable: A Distributed Storage System for Structured Data by Chang et al. Just as Bigtable leverages the distributed data storage provided by the Google File System, HBase provides Bigtable-like capabilities on top of Hadoop and HDFS.\tWrappedArray(Database, Hadoop, NoSQL, Java, Eventually Consistent)\timg/software/hbase.png\t0.9978051\n3969\t7\tApache Spark\tApache Spark is fast and general compute engine for Hadoop data.  Spark provides a simple and expressive programming model that supports a wide range of applications, including ETL, machine learning, stream processing, and graph computation.\tWrappedArray(Data Processing, Java, Scala, SQL, R, Python, DataFrame, Table, DataStream, Streaming Analytics, Batch Analytics, Machine Learning, Graph Analytics, Approximations, Sampling, Lazy)\timg/software/spark.png\t0.9962057\n3969\t11\tApache YARN\tA framework for job scheduling and cluster resource management.\tWrappedArray(Cluster Resource Manager, Hadoop, Java)\timg/software/yarn.png\t0.993606\n3969\t8\tApache Flume\tFlume is a distributed, reliable, and available service for efficiently collecting, aggregating, and moving large amounts of log data. It has a simple and flexible architecture based on streaming data flows. It is robust and fault tolerant with tunable reliability mechanisms and many failover and recovery mechanisms. It uses a simple extensible data model that allows for online analytic application.\tWrappedArray(Library, Java, Log Collection)\timg/software/flume.png\t0.9906562\n3969\t61\tSpark ML/MLlib\tMLlib is Spark’s machine learning (ML) library. Its goal is to make practical machine learning scalable and easy. It consists of common learning algorithms and utilities, including classification, regression, clustering, collaborative filtering, dimensionality reduction, as well as lower-level optimization primitives and higher-level pipeline APIs.\tWrappedArray(Library, Spark, Machine Learning)\timg/software/spark-ml.png\t0.98950994\n3969\t10\tApache HDFS\t A distributed file system that provides high-throughput access to application data.\tWrappedArray(File System, Hadoop, Java)\timg/software/hdfs.png\t0.9880995\n3969\t54\tMongoDB\tMongoDB is an open-source database developed by MongoDB, Inc. MongoDB stores data in JSON-like documents that can vary in structure. Related information is stored together for fast query access through the MongoDB query language. MongoDB uses dynamic schemas, meaning that you can create records without first defining the structure, such as the fields or the types of their values.\tWrappedArray(Database, Document Store, Key Value Store, NoSQL, JSON, Eventually Consistent)\timg/software/mongodb.png\t0.9878623\n3969\t15\tHortonworks\tHortonworks develops, distributes and supports HDP - the completely open-source Apache Hadoop data platform, architected for the enterprise.\tWrappedArray(Distribution, Hadoop, Spark, Kafka)\timg/software/hortonworks.png\t0.9854957\n3969\t14\tApache Hive\tA data warehouse infrastructure that provides data summarization and ad hoc querying\tWrappedArray(Data Processing, Hadoop, HiveQL, SQL, Query Processing, Java, MapReduce)\timg/software/hive.png\t0.982859\n3969\t34\tApache Nifi\tApache nifi supports powerful and scalable directed graphs of data routing, transformation, and system mediation logic.\tWrappedArray(Workflow, Streaming, Message Broker, Java, UI)\timg/software/nifi.png\t0.9820546\n3969\t25\tApache Parquet\tApache Parquet is a columnar storage format available to any project in the Hadoop ecosystem, regardless of the choice of data processing framework, data model or programming language.\tWrappedArray(File Format, Columnar, Compression, Evolving Schema, Nested Schema, Java, C++, Python)\timg/software/parquet.png\t0.9812663\n3969\t3\tApache Ambari\tThe Apache Ambari project is aimed at making Hadoop management simpler by developing software for provisioning, managing, and monitoring Apache Hadoop clusters. Ambari provides an intuitive, easy-to-use Hadoop management web UI backed by its RESTful APIs.\tWrappedArray(Cluster Provision, Hadoop, Cluster Monitoring, REST API, Metrics, Alerts)\timg/software/ambari.png\t0.9771075\n3969\t38\tApache Zeppelin\tA web-based notebook that enables interactive data analytics.  You can make beautiful data-driven, interactive and collaborative documents with SQL, Scala and more.\tWrappedArray(Notebook, Python, Java, Scala, R, HiveQL, Cassandra, Visualization, SQL)\timg/software/zeppelin.png\t0.9745069\n3969\t29\tStanford CoreNLP\tStanford CoreNLP provides a set of natural language analysis tools. It can give the base forms of words, their parts of speech, whether they are names of companies, people, etc., normalize dates, times, and numeric quantities, and mark up the structure of sentences in terms of phrases and word dependencies, indicate which noun phrases refer to the same entities, indicate sentiment, and extract open-class relations between mentions.\tWrappedArray(Library, NLP, Java, Text Analytics)\timg/software/corenlp.png\t0.9735912\n3969\t41\tSQL\tis a special-purpose programming language designed for managing data held in a relational database management system (RDBMS), or for stream processing in a relational data stream management system (RDSMS)\tWrappedArray(Programming Language, SQL, RDBMS, Interpreted)\timg/software/sql.png\t0.9735912\n5342\t50\tGoogle Cloud Platform\tGoogle Cloud Platform enables developers to build, test and deploy applications on Google’s highly-scalable and reliable infrastructure. Choose from computing, storage and application services for your web, mobile and backend solutions.\tWrappedArray(Cloud Provider, Google)\timg/software/googlecloud.png\t1.0071063\n5342\t40\tR\tR is a language and environment for statistical computing and graphics. It is a GNU project which is similar to the S language and environment which was developed at Bell Laboratories (formerly AT\u0026T, now Lucent Technologies) by John Chambers and colleagues.  R provides a wide variety of statistical (linear and nonlinear modelling, classical statistical tests, time-series analysis, classification, and clustering) and graphical techniques, and is highly extensible.\tWrappedArray(Programming Language, Dynamic Typing, Interpreted)\timg/software/r.png\t1.0035934\n5342\t25\tApache Parquet\tApache Parquet is a columnar storage format available to any project in the Hadoop ecosystem, regardless of the choice of data processing framework, data model or programming language.\tWrappedArray(File Format, Columnar, Compression, Evolving Schema, Nested Schema, Java, C++, Python)\timg/software/parquet.png\t0.9963905\n5342\t33\tApache Oozie\tOozie is a workflow scheduler system integrated with the rest of the Hadoop stack supporting several types of Hadoop jobs out of the box (such as Java map-reduce, Streaming map-reduce, Pig, Hive, Sqoop and Distcp) as well as system specific jobs (such as Java programs and shell script.\tWrappedArray(Workflow, Hadoop, Java, UI)\timg/software/oozie.png\t0.9961009\n5342\t63\tSpark SQL\tSpark SQL is a Spark module for structured data processing. It provides a programming abstraction called DataFrames and can also act as distributed SQL query engine. Spark SQL can also be used to read data from an existing Hive installation.\tWrappedArray(Library, Spark, HiveQL, SQL)\timg/software/spark-sql.png\t0.99551666\n5342\t67\tKinesis\tAmazon Kinesis is a platform for streaming data on AWS, offering powerful services to make it easy to load and analyze streaming data, and also providing the ability for you to build custom streaming data applications for specialized needs.\tWrappedArray(Library, Streaming, AWS)\timg/software/kinesis.png\t0.9950647\n5342\t62\tSpark Streaming\tSpark Streaming is an extension of the core Spark API that enables scalable, high-throughput, fault-tolerant stream processing of live data streams. Data can be ingested from many sources like Kafka, Flume, Twitter, ZeroMQ, Kinesis, or TCP sockets, and can be processed using complex algorithms expressed with high-level functions like map, reduce, join and window. Finally, processed data can be pushed out to filesystems, databases, and live dashboards.\tWrappedArray(Library, Spark, Streaming)\timg/software/spark-streaming.png\t0.9948747\n5342\t34\tApache Nifi\tApache nifi supports powerful and scalable directed graphs of data routing, transformation, and system mediation logic.\tWrappedArray(Workflow, Streaming, Message Broker, Java, UI)\timg/software/nifi.png\t0.9924702\n5342\t72\tDato GraphLab Create\tDato GraphLab Create is an extensible machine learning framework that enables developers and data scientists to easily build and deploy intelligent applications and services at scale. It includes distributed data structures and rich libraries for data transformation and manipulation, scalable task-oriented machine learning toolkits for creating, evaluating, and improving machine learning models, data and model visualization for all aspects of development.\tWrappedArray(Library, UI, Graph Analytics, Machine Learning, Query Processing, Visualization)\timg/software/graphlab.png\t0.9732105\n5342\t66\tRedshift\tAmazon Redshift is a fast, fully managed, petabyte-scale data warehouse that makes it simple and cost-effective to analyze all your data using your existing business intelligence tools.\tWrappedArray(Database, Columnar, Data Warehouse, AWS, SQL)\timg/software/redshift.png\t0.97321045\n6437\t42\tScala\tScala began life in 2003, created by Martin Odersky and his research group at EPFL, next to Lake Geneva and the Alps, in Lausanne, Switzerland. Scala has since grown into a mature open source programming language, used by hundreds of thousands of developers, and is developed and maintained by scores of people all over the world. Have the best of both worlds. Construct elegant class hierarchies for maximum code reuse and extensibility, implement their behavior using higher-order functions. Or anything in-between.\tWrappedArray(Programming Language, Functional, Java, Static Typing, Compiled)\timg/software/scala.png\t1.0048404\n6437\t33\tApache Oozie\tOozie is a workflow scheduler system integrated with the rest of the Hadoop stack supporting several types of Hadoop jobs out of the box (such as Java map-reduce, Streaming map-reduce, Pig, Hive, Sqoop and Distcp) as well as system specific jobs (such as Java programs and shell script.\tWrappedArray(Workflow, Hadoop, Java, UI)\timg/software/oozie.png\t1.001353\n6437\t27\tApache Pig\tApache Pig is a platform for analyzing large data sets that consists of a high-level language for expressing data analysis programs, coupled with infrastructure for evaluating these programs. The salient property of Pig programs is that their structure is amenable to substantial parallelization, which in turns enables them to handle very large data sets.\tWrappedArray(Data Processing, Hadoop, HiveQL, SQL, Query Processing, Java, Lazy)\timg/software/pig.png\t0.99890125\n6437\t69\tSpark GraphX\tGraphX, Spark\u0027s API for graph and graph-parallel computation, unifies ETL, exploratory analysis, and iterative graph computation within a single system.\tWrappedArray(Library, Graph Analytics, Spark)\timg/software/spark-graphx.png\t0.9930551\n6437\t61\tSpark ML/MLlib\tMLlib is Spark’s machine learning (ML) library. Its goal is to make practical machine learning scalable and easy. It consists of common learning algorithms and utilities, including classification, regression, clustering, collaborative filtering, dimensionality reduction, as well as lower-level optimization primitives and higher-level pipeline APIs.\tWrappedArray(Library, Spark, Machine Learning)\timg/software/spark-ml.png\t0.9900849\n6437\t65\tDeep Learning 4J\tDeeplearning4j is the first commercial-grade, open-source, distributed deep-learning library written for Java and Scala. Integrated with Hadoop and Spark, DL4J is designed to be used in business environments, rather than as a research tool.\tWrappedArray(Library, Deep Learning, Neural Networks)\timg/software/deeplearning4j.png\t0.96769136\n8910\t15\tHortonworks\tHortonworks develops, distributes and supports HDP - the completely open-source Apache Hadoop data platform, architected for the enterprise.\tWrappedArray(Distribution, Hadoop, Spark, Kafka)\timg/software/hortonworks.png\t1.0052013\n8910\t10\tApache HDFS\t A distributed file system that provides high-throughput access to application data.\tWrappedArray(File System, Hadoop, Java)\timg/software/hdfs.png\t1.0018203\n8910\t16\tApache HUE\tHUE is the Hadoop User Experience and is a Web interface for to load and analytze data with Apache Hadoop.,\tWrappedArray(UI, Hadoop, Cloudera, Ad Hoc, HiveQL, SQL, Data Import, Java)\timg/software/hue.png\t0.9955944\n8910\t14\tApache Hive\tA data warehouse infrastructure that provides data summarization and ad hoc querying\tWrappedArray(Data Processing, Hadoop, HiveQL, SQL, Query Processing, Java, MapReduce)\timg/software/hive.png\t0.99555814\n8910\t1\tApache Cassandra\tThe Apache Cassandra database is the right choice when you need scalability and high availability without compromising performance. Linear scalability and proven fault-tolerance on commodity hardware or cloud infrastructure make it the perfect platform for mission-critical data. Cassandra\u0027s support for replicating across multiple datacenters is best-in-class, providing lower latency for your users and the peace of mind of knowing that you can survive regional outages.  Cassandra\u0027s data model offers the convenience of column indexes with the performance of log-structured updates, strong support for denormalization and materialized views, and powerful built-in caching.\tWrappedArray(Database, NoSQL, Java, Eventually Consistent, Transactional)\timg/software/cassandra.png\t0.9921324\n8910\t7\tApache Spark\tApache Spark is fast and general compute engine for Hadoop data.  Spark provides a simple and expressive programming model that supports a wide range of applications, including ETL, machine learning, stream processing, and graph computation.\tWrappedArray(Data Processing, Java, Scala, SQL, R, Python, DataFrame, Table, DataStream, Streaming Analytics, Batch Analytics, Machine Learning, Graph Analytics, Approximations, Sampling, Lazy)\timg/software/spark.png\t0.9897071\n8910\t9\tApache Giraph\tApache Giraph is an iterative graph processing system built for high scalability.\tWrappedArray(Library, Java, Graph Analytics, Batch)\timg/software/giraph.png\t0.97795147\n12663\t33\tApache Oozie\tOozie is a workflow scheduler system integrated with the rest of the Hadoop stack supporting several types of Hadoop jobs out of the box (such as Java map-reduce, Streaming map-reduce, Pig, Hive, Sqoop and Distcp) as well as system specific jobs (such as Java programs and shell script.\tWrappedArray(Workflow, Hadoop, Java, UI)\timg/software/oozie.png\t1.0172958\n12663\t44\tPython\tPython is a widely used general-purpose, high-level programming language. Its design philosophy emphasizes code readability, and its syntax allows programmers to express concepts in fewer lines of code than would be possible in languages such as C++ or Java.\tWrappedArray(Programming Language, Dynamic Typing, Interpreted)\timg/software/python.png\t1.0166017\n12663\t1\tApache Cassandra\tThe Apache Cassandra database is the right choice when you need scalability and high availability without compromising performance. Linear scalability and proven fault-tolerance on commodity hardware or cloud infrastructure make it the perfect platform for mission-critical data. Cassandra\u0027s support for replicating across multiple datacenters is best-in-class, providing lower latency for your users and the peace of mind of knowing that you can survive regional outages.  Cassandra\u0027s data model offers the convenience of column indexes with the performance of log-structured updates, strong support for denormalization and materialized views, and powerful built-in caching.\tWrappedArray(Database, NoSQL, Java, Eventually Consistent, Transactional)\timg/software/cassandra.png\t1.0110943\n12663\t7\tApache Spark\tApache Spark is fast and general compute engine for Hadoop data.  Spark provides a simple and expressive programming model that supports a wide range of applications, including ETL, machine learning, stream processing, and graph computation.\tWrappedArray(Data Processing, Java, Scala, SQL, R, Python, DataFrame, Table, DataStream, Streaming Analytics, Batch Analytics, Machine Learning, Graph Analytics, Approximations, Sampling, Lazy)\timg/software/spark.png\t1.0045391\n12663\t60\tMySQL\tMySQL is an open-source, relational database management system (RDBMS) developed, distributed and supported by Oracle Corporation. MySQL stores data in tables and uses structured query language (SQL) for database access. In MySQL, you pre-define your database schema based on your requirements and set up rules to govern the relationships between fields in your tables. In MySQL, related information may be stored in separate tables, but associated through the use of joins.\tWrappedArray(Database, SQL, RDBMS, Transactional)\timg/software/mysql.png\t1.0034186\n12663\t51\tRedis\tRedis is an open source, in-memory Data Structure Store, used as a database, a caching layer for a message broker.\tWrappedArray(Distributed Cache, Key Value Store, HyperLogLog, Approximations, Probabilistic Data Structures, UDAF)\timg/software/redis.png\t1.0029014\n12663\t42\tScala\tScala began life in 2003, created by Martin Odersky and his research group at EPFL, next to Lake Geneva and the Alps, in Lausanne, Switzerland. Scala has since grown into a mature open source programming language, used by hundreds of thousands of developers, and is developed and maintained by scores of people all over the world. Have the best of both worlds. Construct elegant class hierarchies for maximum code reuse and extensibility, implement their behavior using higher-order functions. Or anything in-between.\tWrappedArray(Programming Language, Functional, Java, Static Typing, Compiled)\timg/software/scala.png\t1.0019019\n12663\t18\tApache Kafka\tApache Kafka is publish-subscribe messaging system implementaed as a distributed commit log with a cluster centric design with string durability and fault tolerance guarantees.\tWrappedArray(Message Broker, Java, C++, REST API, Messaging, Publish Subscribe, Producer Consumer)\timg/software/kafka.png\t1.0014309\n12663\t49\tAmazon Web Services\tAmazon Web Services offers reliable, scalable, and inexpensive cloud computing services. Free to join, pay only for what you use.\tWrappedArray(Cloud Provider, AWS)\timg/software/aws.png\t1.0005561\n12663\t28\tApache ZooKeeper\tApache ZooKeeper server which enables highly reliable distributed coordination.\tWrappedArray(Distribured Coordinator, Paxos, RAFT, Hadoop, HiveQL, SQL, Query Processing, Java, Lazy)\timg/software/zookeeper.png\t1.000307\n12663\t14\tApache Hive\tA data warehouse infrastructure that provides data summarization and ad hoc querying\tWrappedArray(Data Processing, Hadoop, HiveQL, SQL, Query Processing, Java, MapReduce)\timg/software/hive.png\t1.0000576\n12663\t15\tHortonworks\tHortonworks develops, distributes and supports HDP - the completely open-source Apache Hadoop data platform, architected for the enterprise.\tWrappedArray(Distribution, Hadoop, Spark, Kafka)\timg/software/hortonworks.png\t0.9985036\n12663\t10\tApache HDFS\t A distributed file system that provides high-throughput access to application data.\tWrappedArray(File System, Hadoop, Java)\timg/software/hdfs.png\t0.9984718\n12663\t39\tTableau\tTableau can help anyone see and understand their data. Connect to almost any database, drag and drop to create visualizations, and share with a click.\tWrappedArray(BI, UI, Visualization, SQL)\timg/software/tableau.png\t0.9977288\n12663\t11\tApache YARN\tA framework for job scheduling and cluster resource management.\tWrappedArray(Cluster Resource Manager, Hadoop, Java)\timg/software/yarn.png\t0.9969727\n12663\t17\tApache Impala\tAchieve order-of-magnitude performance increase compared to alternatives for the only true interactive analytic solution native to Hadoop.\tWrappedArray(Data Processing, Query Processing, SQL, C++, Batch Analytics)\timg/software/impala.png\t0.9957372\n12663\t79\tTitan GraphDB\tTitan is a scalable graph database optimized for storing and querying graphs containing hundreds of billions of vertices and edges distributed across a multi-machine cluster.\tWrappedArray(Database, Graph, Graph Analytics, Java, Transactional)\timg/software/titandb.png\t0.99528706\n12663\t24\tApache Mesos\tApache Mesos is a cluster manager that provides efficient resource isolation and sharing across distributed applications, or frameworks. It can run Hadoop, MPI, Hypertable, Spark, and other frameworks on a dynamically shared pool of nodes.\tWrappedArray(Cluster Resource Manager, Docker, Container)\timg/software/mesos.png\t0.9950998\n12663\t61\tSpark ML/MLlib\tMLlib is Spark’s machine learning (ML) library. Its goal is to make practical machine learning scalable and easy. It consists of common learning algorithms and utilities, including classification, regression, clustering, collaborative filtering, dimensionality reduction, as well as lower-level optimization primitives and higher-level pipeline APIs.\tWrappedArray(Library, Spark, Machine Learning)\timg/software/spark-ml.png\t0.9931939\n12663\t12\tApache HBase\tUse Apache HBase software when you need random, realtime read/write access to your Big Data. This project\u0027s goal is the hosting of very large tables -- billions of rows X millions of columns -- atop clusters of commodity hardware. HBase is an open-source, distributed, versioned, column-oriented store modeled after Google\u0027s Bigtable: A Distributed Storage System for Structured Data by Chang et al. Just as Bigtable leverages the distributed data storage provided by the Google File System, HBase provides Bigtable-like capabilities on top of Hadoop and HDFS.\tWrappedArray(Database, Hadoop, NoSQL, Java, Eventually Consistent)\timg/software/hbase.png\t0.9895601\n12663\t13\tApache MapReduce\tA YARN-based system for parallel processing of large data sets.\tWrappedArray(Data Processing, Hadoop, Java, Python)\timg/software/mapreduce.png\t0.9870236\n12663\t16\tApache HUE\tHUE is the Hadoop User Experience and is a Web interface for to load and analytze data with Apache Hadoop.,\tWrappedArray(UI, Hadoop, Cloudera, Ad Hoc, HiveQL, SQL, Data Import, Java)\timg/software/hue.png\t0.98574805\n12663\t62\tSpark Streaming\tSpark Streaming is an extension of the core Spark API that enables scalable, high-throughput, fault-tolerant stream processing of live data streams. Data can be ingested from many sources like Kafka, Flume, Twitter, ZeroMQ, Kinesis, or TCP sockets, and can be processed using complex algorithms expressed with high-level functions like map, reduce, join and window. Finally, processed data can be pushed out to filesystems, databases, and live dashboards.\tWrappedArray(Library, Spark, Streaming)\timg/software/spark-streaming.png\t0.98305905\n12663\t63\tSpark SQL\tSpark SQL is a Spark module for structured data processing. It provides a programming abstraction called DataFrames and can also act as distributed SQL query engine. Spark SQL can also be used to read data from an existing Hive installation.\tWrappedArray(Library, Spark, HiveQL, SQL)\timg/software/spark-sql.png\t0.98066473\n12663\t32\tApache Sqoop\tSqoop is designed for efficiently transferring bulk data between Apache Hadoop and structured datastores such as relational databases.\tWrappedArray(Data Import, Hadoop, Java)\timg/software/sqoop.png\t0.97871965\n12663\t54\tMongoDB\tMongoDB is an open-source database developed by MongoDB, Inc. MongoDB stores data in JSON-like documents that can vary in structure. Related information is stored together for fast query access through the MongoDB query language. MongoDB uses dynamic schemas, meaning that you can create records without first defining the structure, such as the fields or the types of their values.\tWrappedArray(Database, Document Store, Key Value Store, NoSQL, JSON, Eventually Consistent)\timg/software/mongodb.png\t0.97771657\n12663\t74\tNeo4j\tNeo4j is an open-source graph database implemented in Java and accessible from software written in other languages using the Cypher Query Language through a transactional HTTP endpoint.[1][2][3] The developers describe Neo4j as an ACID-compliant transactional database with native graph storage and processing.\tWrappedArray(Library, Graph Analytics, Java)\timg/software/neo4j.png\t0.97001684\n12663\t26\tApache ORC\tORC is a self-describing type-aware columnar file format designed for Hadoop workloads. It is optimized for large streaming reads, but with integrated support for finding required rows quickly. Storing data in a columnar format lets the reader read, decompress, and process only the values that are required for the current query.\tWrappedArray(File Format, Columnar, Compression, Evolving Schema, Nested Schema)\timg/software/orc.png\t0.96638715\n12663\t30\tApache Tez\tTez aims build an application framework which allows for a complex directed-acyclic-graph of tasks for processing data.\tWrappedArray(Data Processing, Hadoop, YARN, Query Processing, Java, Lazy, HiveQL, Pig, SQL)\timg/software/tez.png\t0.96638715\n12663\t38\tApache Zeppelin\tA web-based notebook that enables interactive data analytics.  You can make beautiful data-driven, interactive and collaborative documents with SQL, Scala and more.\tWrappedArray(Notebook, Python, Java, Scala, R, HiveQL, Cassandra, Visualization, SQL)\timg/software/zeppelin.png\t0.96587694\n13077\t2\tTachyon\tTachyon is a memory-centric distributed storage system enabling reliable data sharing at memory-speed across cluster frameworks.\tWrappedArray(Distributed Cache, Object Store, S3, Swift, HDFS)\timg/software/tachyon.png\t1.0063384\n13077\t13\tApache MapReduce\tA YARN-based system for parallel processing of large data sets.\tWrappedArray(Data Processing, Hadoop, Java, Python)\timg/software/mapreduce.png\t0.9948697\n13077\t12\tApache HBase\tUse Apache HBase software when you need random, realtime read/write access to your Big Data. This project\u0027s goal is the hosting of very large tables -- billions of rows X millions of columns -- atop clusters of commodity hardware. HBase is an open-source, distributed, versioned, column-oriented store modeled after Google\u0027s Bigtable: A Distributed Storage System for Structured Data by Chang et al. Just as Bigtable leverages the distributed data storage provided by the Google File System, HBase provides Bigtable-like capabilities on top of Hadoop and HDFS.\tWrappedArray(Database, Hadoop, NoSQL, Java, Eventually Consistent)\timg/software/hbase.png\t0.9902481\n13077\t3\tApache Ambari\tThe Apache Ambari project is aimed at making Hadoop management simpler by developing software for provisioning, managing, and monitoring Apache Hadoop clusters. Ambari provides an intuitive, easy-to-use Hadoop management web UI backed by its RESTful APIs.\tWrappedArray(Cluster Provision, Hadoop, Cluster Monitoring, REST API, Metrics, Alerts)\timg/software/ambari.png\t0.98155916\n13338\t56\tMicroStrategy\tMicroStrategy is the only analytics platform that meets the needs of business and IT. It empowers organizations to make sense of large data volumes, get answers to their toughest business questions, build beautiful data visualizations, and ensure a single version of the truth–at any scale, on any device.\tWrappedArray(BI, UI, Visualization, SQL)\timg/software/microstrategy.png\t0.98993206\n17841\t11\tApache YARN\tA framework for job scheduling and cluster resource management.\tWrappedArray(Cluster Resource Manager, Hadoop, Java)\timg/software/yarn.png\t1.0096167\n17841\t14\tApache Hive\tA data warehouse infrastructure that provides data summarization and ad hoc querying\tWrappedArray(Data Processing, Hadoop, HiveQL, SQL, Query Processing, Java, MapReduce)\timg/software/hive.png\t1.0061029\n17841\t44\tPython\tPython is a widely used general-purpose, high-level programming language. Its design philosophy emphasizes code readability, and its syntax allows programmers to express concepts in fewer lines of code than would be possible in languages such as C++ or Java.\tWrappedArray(Programming Language, Dynamic Typing, Interpreted)\timg/software/python.png\t1.0020137\n17841\t42\tScala\tScala began life in 2003, created by Martin Odersky and his research group at EPFL, next to Lake Geneva and the Alps, in Lausanne, Switzerland. Scala has since grown into a mature open source programming language, used by hundreds of thousands of developers, and is developed and maintained by scores of people all over the world. Have the best of both worlds. Construct elegant class hierarchies for maximum code reuse and extensibility, implement their behavior using higher-order functions. Or anything in-between.\tWrappedArray(Programming Language, Functional, Java, Static Typing, Compiled)\timg/software/scala.png\t1.000114\n17841\t63\tSpark SQL\tSpark SQL is a Spark module for structured data processing. It provides a programming abstraction called DataFrames and can also act as distributed SQL query engine. Spark SQL can also be used to read data from an existing Hive installation.\tWrappedArray(Library, Spark, HiveQL, SQL)\timg/software/spark-sql.png\t0.99951863\n17841\t39\tTableau\tTableau can help anyone see and understand their data. Connect to almost any database, drag and drop to create visualizations, and share with a click.\tWrappedArray(BI, UI, Visualization, SQL)\timg/software/tableau.png\t0.99350345\n17841\t40\tR\tR is a language and environment for statistical computing and graphics. It is a GNU project which is similar to the S language and environment which was developed at Bell Laboratories (formerly AT\u0026T, now Lucent Technologies) by John Chambers and colleagues.  R provides a wide variety of statistical (linear and nonlinear modelling, classical statistical tests, time-series analysis, classification, and clustering) and graphical techniques, and is highly extensible.\tWrappedArray(Programming Language, Dynamic Typing, Interpreted)\timg/software/r.png\t0.98670757\n17841\t12\tApache HBase\tUse Apache HBase software when you need random, realtime read/write access to your Big Data. This project\u0027s goal is the hosting of very large tables -- billions of rows X millions of columns -- atop clusters of commodity hardware. HBase is an open-source, distributed, versioned, column-oriented store modeled after Google\u0027s Bigtable: A Distributed Storage System for Structured Data by Chang et al. Just as Bigtable leverages the distributed data storage provided by the Google File System, HBase provides Bigtable-like capabilities on top of Hadoop and HDFS.\tWrappedArray(Database, Hadoop, NoSQL, Java, Eventually Consistent)\timg/software/hbase.png\t0.97826207\n17841\t9\tApache Giraph\tApache Giraph is an iterative graph processing system built for high scalability.\tWrappedArray(Library, Java, Graph Analytics, Batch)\timg/software/giraph.png\t0.9622743\n18102\t8\tApache Flume\tFlume is a distributed, reliable, and available service for efficiently collecting, aggregating, and moving large amounts of log data. It has a simple and flexible architecture based on streaming data flows. It is robust and fault tolerant with tunable reliability mechanisms and many failover and recovery mechanisms. It uses a simple extensible data model that allows for online analytic application.\tWrappedArray(Library, Java, Log Collection)\timg/software/flume.png\t1.0058508\n18102\t16\tApache HUE\tHUE is the Hadoop User Experience and is a Web interface for to load and analytze data with Apache Hadoop.,\tWrappedArray(UI, Hadoop, Cloudera, Ad Hoc, HiveQL, SQL, Data Import, Java)\timg/software/hue.png\t1.0036973\n18102\t21\tElasticSearch\tElasticsearch is a distributed, open source search and analytics engine, designed for horizontal scalability, reliability, and easy management. It combines the speed of search with the power of analytics via a sophisticated, developer-friendly query language covering structured, unstructured, and time-series data.\tWrappedArray(Search Engine, Java, Python, REST API, Lucene, XML, JSON, Aggregations)\timg/software/elasticsearch.png\t1.0035429\n18102\t15\tHortonworks\tHortonworks develops, distributes and supports HDP - the completely open-source Apache Hadoop data platform, architected for the enterprise.\tWrappedArray(Distribution, Hadoop, Spark, Kafka)\timg/software/hortonworks.png\t1.0030265\n18102\t17\tApache Impala\tAchieve order-of-magnitude performance increase compared to alternatives for the only true interactive analytic solution native to Hadoop.\tWrappedArray(Data Processing, Query Processing, SQL, C++, Batch Analytics)\timg/software/impala.png\t1.002415\n18102\t20\tApache Solr\tHigh performance search engine built using Lucene Core, with XML/HTTP and JSON/Python/Ruby APIs, hit highlighting, faceted search, caching, replication, and a web admin interface.\tWrappedArray(Search Engine, Java, REST API, UI, Python, Ruby, XML, JSON)\timg/software/solr.png\t1.0004973\n18102\t10\tApache HDFS\t A distributed file system that provides high-throughput access to application data.\tWrappedArray(File System, Hadoop, Java)\timg/software/hdfs.png\t0.9950355\n18102\t9\tApache Giraph\tApache Giraph is an iterative graph processing system built for high scalability.\tWrappedArray(Library, Java, Graph Analytics, Batch)\timg/software/giraph.png\t0.9929384\n18102\t14\tApache Hive\tA data warehouse infrastructure that provides data summarization and ad hoc querying\tWrappedArray(Data Processing, Hadoop, HiveQL, SQL, Query Processing, Java, MapReduce)\timg/software/hive.png\t0.98801506\n18102\t11\tApache YARN\tA framework for job scheduling and cluster resource management.\tWrappedArray(Cluster Resource Manager, Hadoop, Java)\timg/software/yarn.png\t0.9833854\n18102\t22\tApache Mahout\tApache Mahout is a project of the Apache Software Foundation to produce free implementations of distributed or otherwise scalable machine learning algorithms focused primarily in the areas of collaborative filtering, clustering and classification.\tWrappedArray(Library, Machine Learning, Java)\timg/software/mahout.png\t0.97575617\n18102\t23\tApache Drill\tApache Drill is a distributed MPP query layer that supports SQL and alternative query languages against NoSQL and Hadoop data storage systems. It was inspired in part by Google\u0027s Dremel.\tWrappedArray(Data Processing, Query Processing, SQL, Aggregations, Joins, Batch Analytics)\timg/software/drill.png\t0.9699416\n20229\t28\tApache ZooKeeper\tApache ZooKeeper server which enables highly reliable distributed coordination.\tWrappedArray(Distribured Coordinator, Paxos, RAFT, Hadoop, HiveQL, SQL, Query Processing, Java, Lazy)\timg/software/zookeeper.png\t1.0159159\n20229\t24\tApache Mesos\tApache Mesos is a cluster manager that provides efficient resource isolation and sharing across distributed applications, or frameworks. It can run Hadoop, MPI, Hypertable, Spark, and other frameworks on a dynamically shared pool of nodes.\tWrappedArray(Cluster Resource Manager, Docker, Container)\timg/software/mesos.png\t1.004441\n20229\t7\tApache Spark\tApache Spark is fast and general compute engine for Hadoop data.  Spark provides a simple and expressive programming model that supports a wide range of applications, including ETL, machine learning, stream processing, and graph computation.\tWrappedArray(Data Processing, Java, Scala, SQL, R, Python, DataFrame, Table, DataStream, Streaming Analytics, Batch Analytics, Machine Learning, Graph Analytics, Approximations, Sampling, Lazy)\timg/software/spark.png\t0.9980066\n20229\t18\tApache Kafka\tApache Kafka is publish-subscribe messaging system implementaed as a distributed commit log with a cluster centric design with string durability and fault tolerance guarantees.\tWrappedArray(Message Broker, Java, C++, REST API, Messaging, Publish Subscribe, Producer Consumer)\timg/software/kafka.png\t0.9960773\n20229\t40\tR\tR is a language and environment for statistical computing and graphics. It is a GNU project which is similar to the S language and environment which was developed at Bell Laboratories (formerly AT\u0026T, now Lucent Technologies) by John Chambers and colleagues.  R provides a wide variety of statistical (linear and nonlinear modelling, classical statistical tests, time-series analysis, classification, and clustering) and graphical techniques, and is highly extensible.\tWrappedArray(Programming Language, Dynamic Typing, Interpreted)\timg/software/r.png\t0.9947492\n20229\t42\tScala\tScala began life in 2003, created by Martin Odersky and his research group at EPFL, next to Lake Geneva and the Alps, in Lausanne, Switzerland. Scala has since grown into a mature open source programming language, used by hundreds of thousands of developers, and is developed and maintained by scores of people all over the world. Have the best of both worlds. Construct elegant class hierarchies for maximum code reuse and extensibility, implement their behavior using higher-order functions. Or anything in-between.\tWrappedArray(Programming Language, Functional, Java, Static Typing, Compiled)\timg/software/scala.png\t0.99154365\n20229\t51\tRedis\tRedis is an open source, in-memory Data Structure Store, used as a database, a caching layer for a message broker.\tWrappedArray(Distributed Cache, Key Value Store, HyperLogLog, Approximations, Probabilistic Data Structures, UDAF)\timg/software/redis.png\t0.9885086\n20229\t20\tApache Solr\tHigh performance search engine built using Lucene Core, with XML/HTTP and JSON/Python/Ruby APIs, hit highlighting, faceted search, caching, replication, and a web admin interface.\tWrappedArray(Search Engine, Java, REST API, UI, Python, Ruby, XML, JSON)\timg/software/solr.png\t0.9861978\n20229\t62\tSpark Streaming\tSpark Streaming is an extension of the core Spark API that enables scalable, high-throughput, fault-tolerant stream processing of live data streams. Data can be ingested from many sources like Kafka, Flume, Twitter, ZeroMQ, Kinesis, or TCP sockets, and can be processed using complex algorithms expressed with high-level functions like map, reduce, join and window. Finally, processed data can be pushed out to filesystems, databases, and live dashboards.\tWrappedArray(Library, Spark, Streaming)\timg/software/spark-streaming.png\t0.9834486\n20229\t49\tAmazon Web Services\tAmazon Web Services offers reliable, scalable, and inexpensive cloud computing services. Free to join, pay only for what you use.\tWrappedArray(Cloud Provider, AWS)\timg/software/aws.png\t0.98062366\n23426\t42\tScala\tScala began life in 2003, created by Martin Odersky and his research group at EPFL, next to Lake Geneva and the Alps, in Lausanne, Switzerland. Scala has since grown into a mature open source programming language, used by hundreds of thousands of developers, and is developed and maintained by scores of people all over the world. Have the best of both worlds. Construct elegant class hierarchies for maximum code reuse and extensibility, implement their behavior using higher-order functions. Or anything in-between.\tWrappedArray(Programming Language, Functional, Java, Static Typing, Compiled)\timg/software/scala.png\t1.0107269\n23426\t18\tApache Kafka\tApache Kafka is publish-subscribe messaging system implementaed as a distributed commit log with a cluster centric design with string durability and fault tolerance guarantees.\tWrappedArray(Message Broker, Java, C++, REST API, Messaging, Publish Subscribe, Producer Consumer)\timg/software/kafka.png\t0.99528617\n23426\t70\tSQL Server\tSQL Server is a relational database management system developed by Microsoft. As a database server, it is a software product with the primary function of storing and retrieving data as requested by other software applications which may run either on the same computer or on another computer across a network (including the Internet).\tWrappedArray(Database, SQL, Microsoft, RDBMS, Transactional)\timg/software/sqlserver.png\t0.9933858\n23426\t11\tApache YARN\tA framework for job scheduling and cluster resource management.\tWrappedArray(Cluster Resource Manager, Hadoop, Java)\timg/software/yarn.png\t0.9910306\n23426\t63\tSpark SQL\tSpark SQL is a Spark module for structured data processing. It provides a programming abstraction called DataFrames and can also act as distributed SQL query engine. Spark SQL can also be used to read data from an existing Hive installation.\tWrappedArray(Library, Spark, HiveQL, SQL)\timg/software/spark-sql.png\t0.98702264\n23426\t69\tSpark GraphX\tGraphX, Spark\u0027s API for graph and graph-parallel computation, unifies ETL, exploratory analysis, and iterative graph computation within a single system.\tWrappedArray(Library, Graph Analytics, Spark)\timg/software/spark-graphx.png\t0.9854217\n25639\t33\tApache Oozie\tOozie is a workflow scheduler system integrated with the rest of the Hadoop stack supporting several types of Hadoop jobs out of the box (such as Java map-reduce, Streaming map-reduce, Pig, Hive, Sqoop and Distcp) as well as system specific jobs (such as Java programs and shell script.\tWrappedArray(Workflow, Hadoop, Java, UI)\timg/software/oozie.png\t1.0084534\n25639\t15\tHortonworks\tHortonworks develops, distributes and supports HDP - the completely open-source Apache Hadoop data platform, architected for the enterprise.\tWrappedArray(Distribution, Hadoop, Spark, Kafka)\timg/software/hortonworks.png\t1.003556\n25639\t17\tApache Impala\tAchieve order-of-magnitude performance increase compared to alternatives for the only true interactive analytic solution native to Hadoop.\tWrappedArray(Data Processing, Query Processing, SQL, C++, Batch Analytics)\timg/software/impala.png\t1.0002537\n25639\t18\tApache Kafka\tApache Kafka is publish-subscribe messaging system implementaed as a distributed commit log with a cluster centric design with string durability and fault tolerance guarantees.\tWrappedArray(Message Broker, Java, C++, REST API, Messaging, Publish Subscribe, Producer Consumer)\timg/software/kafka.png\t0.99975777\n25639\t14\tApache Hive\tA data warehouse infrastructure that provides data summarization and ad hoc querying\tWrappedArray(Data Processing, Hadoop, HiveQL, SQL, Query Processing, Java, MapReduce)\timg/software/hive.png\t0.9995102\n25639\t2\tTachyon\tTachyon is a memory-centric distributed storage system enabling reliable data sharing at memory-speed across cluster frameworks.\tWrappedArray(Distributed Cache, Object Store, S3, Swift, HDFS)\timg/software/tachyon.png\t0.996529\n25639\t60\tMySQL\tMySQL is an open-source, relational database management system (RDBMS) developed, distributed and supported by Oracle Corporation. MySQL stores data in tables and uses structured query language (SQL) for database access. In MySQL, you pre-define your database schema based on your requirements and set up rules to govern the relationships between fields in your tables. In MySQL, related information may be stored in separate tables, but associated through the use of joins.\tWrappedArray(Database, SQL, RDBMS, Transactional)\timg/software/mysql.png\t0.9902454\n25639\t9\tApache Giraph\tApache Giraph is an iterative graph processing system built for high scalability.\tWrappedArray(Library, Java, Graph Analytics, Batch)\timg/software/giraph.png\t0.98810184\n25639\t7\tApache Spark\tApache Spark is fast and general compute engine for Hadoop data.  Spark provides a simple and expressive programming model that supports a wide range of applications, including ETL, machine learning, stream processing, and graph computation.\tWrappedArray(Data Processing, Java, Scala, SQL, R, Python, DataFrame, Table, DataStream, Streaming Analytics, Batch Analytics, Machine Learning, Graph Analytics, Approximations, Sampling, Lazy)\timg/software/spark.png\t0.9870279\n25639\t61\tSpark ML/MLlib\tMLlib is Spark’s machine learning (ML) library. Its goal is to make practical machine learning scalable and easy. It consists of common learning algorithms and utilities, including classification, regression, clustering, collaborative filtering, dimensionality reduction, as well as lower-level optimization primitives and higher-level pipeline APIs.\tWrappedArray(Library, Spark, Machine Learning)\timg/software/spark-ml.png\t0.98467225\n25639\t45\tPresto\tPresto, designed and written from the ground up for interactive analytics at scale, is an open source distributed SQL query engine for running interactive analytic queries against data sources of all sizes ranging from gigabytes to petabytes.\tWrappedArray(Data Processing, Query Processing, Java, SQL, Machine Learning)\timg/software/presto.png\t0.95189756\n27045\t7\tApache Spark\tApache Spark is fast and general compute engine for Hadoop data.  Spark provides a simple and expressive programming model that supports a wide range of applications, including ETL, machine learning, stream processing, and graph computation.\tWrappedArray(Data Processing, Java, Scala, SQL, R, Python, DataFrame, Table, DataStream, Streaming Analytics, Batch Analytics, Machine Learning, Graph Analytics, Approximations, Sampling, Lazy)\timg/software/spark.png\t1.0098135\n27045\t1\tApache Cassandra\tThe Apache Cassandra database is the right choice when you need scalability and high availability without compromising performance. Linear scalability and proven fault-tolerance on commodity hardware or cloud infrastructure make it the perfect platform for mission-critical data. Cassandra\u0027s support for replicating across multiple datacenters is best-in-class, providing lower latency for your users and the peace of mind of knowing that you can survive regional outages.  Cassandra\u0027s data model offers the convenience of column indexes with the performance of log-structured updates, strong support for denormalization and materialized views, and powerful built-in caching.\tWrappedArray(Database, NoSQL, Java, Eventually Consistent, Transactional)\timg/software/cassandra.png\t1.0028682\n27045\t20\tApache Solr\tHigh performance search engine built using Lucene Core, with XML/HTTP and JSON/Python/Ruby APIs, hit highlighting, faceted search, caching, replication, and a web admin interface.\tWrappedArray(Search Engine, Java, REST API, UI, Python, Ruby, XML, JSON)\timg/software/solr.png\t1.0014689\n27045\t62\tSpark Streaming\tSpark Streaming is an extension of the core Spark API that enables scalable, high-throughput, fault-tolerant stream processing of live data streams. Data can be ingested from many sources like Kafka, Flume, Twitter, ZeroMQ, Kinesis, or TCP sockets, and can be processed using complex algorithms expressed with high-level functions like map, reduce, join and window. Finally, processed data can be pushed out to filesystems, databases, and live dashboards.\tWrappedArray(Library, Spark, Streaming)\timg/software/spark-streaming.png\t0.99767125\n27045\t42\tScala\tScala began life in 2003, created by Martin Odersky and his research group at EPFL, next to Lake Geneva and the Alps, in Lausanne, Switzerland. Scala has since grown into a mature open source programming language, used by hundreds of thousands of developers, and is developed and maintained by scores of people all over the world. Have the best of both worlds. Construct elegant class hierarchies for maximum code reuse and extensibility, implement their behavior using higher-order functions. Or anything in-between.\tWrappedArray(Programming Language, Functional, Java, Static Typing, Compiled)\timg/software/scala.png\t0.9954614\n27045\t18\tApache Kafka\tApache Kafka is publish-subscribe messaging system implementaed as a distributed commit log with a cluster centric design with string durability and fault tolerance guarantees.\tWrappedArray(Message Broker, Java, C++, REST API, Messaging, Publish Subscribe, Producer Consumer)\timg/software/kafka.png\t0.9924899\n27045\t63\tSpark SQL\tSpark SQL is a Spark module for structured data processing. It provides a programming abstraction called DataFrames and can also act as distributed SQL query engine. Spark SQL can also be used to read data from an existing Hive installation.\tWrappedArray(Library, Spark, HiveQL, SQL)\timg/software/spark-sql.png\t0.99175304\n27045\t70\tSQL Server\tSQL Server is a relational database management system developed by Microsoft. As a database server, it is a software product with the primary function of storing and retrieving data as requested by other software applications which may run either on the same computer or on another computer across a network (including the Internet).\tWrappedArray(Database, SQL, Microsoft, RDBMS, Transactional)\timg/software/sqlserver.png\t0.9899661\n27045\t79\tTitan GraphDB\tTitan is a scalable graph database optimized for storing and querying graphs containing hundreds of billions of vertices and edges distributed across a multi-machine cluster.\tWrappedArray(Database, Graph, Graph Analytics, Java, Transactional)\timg/software/titandb.png\t0.9805317\n27045\t60\tMySQL\tMySQL is an open-source, relational database management system (RDBMS) developed, distributed and supported by Oracle Corporation. MySQL stores data in tables and uses structured query language (SQL) for database access. In MySQL, you pre-define your database schema based on your requirements and set up rules to govern the relationships between fields in your tables. In MySQL, related information may be stored in separate tables, but associated through the use of joins.\tWrappedArray(Database, SQL, RDBMS, Transactional)\timg/software/mysql.png\t0.9756003\n27569\t40\tR\tR is a language and environment for statistical computing and graphics. It is a GNU project which is similar to the S language and environment which was developed at Bell Laboratories (formerly AT\u0026T, now Lucent Technologies) by John Chambers and colleagues.  R provides a wide variety of statistical (linear and nonlinear modelling, classical statistical tests, time-series analysis, classification, and clustering) and graphical techniques, and is highly extensible.\tWrappedArray(Programming Language, Dynamic Typing, Interpreted)\timg/software/r.png\t1.0084786\n27569\t44\tPython\tPython is a widely used general-purpose, high-level programming language. Its design philosophy emphasizes code readability, and its syntax allows programmers to express concepts in fewer lines of code than would be possible in languages such as C++ or Java.\tWrappedArray(Programming Language, Dynamic Typing, Interpreted)\timg/software/python.png\t1.0011158\n27569\t28\tApache ZooKeeper\tApache ZooKeeper server which enables highly reliable distributed coordination.\tWrappedArray(Distribured Coordinator, Paxos, RAFT, Hadoop, HiveQL, SQL, Query Processing, Java, Lazy)\timg/software/zookeeper.png\t0.99833554\n27569\t1\tApache Cassandra\tThe Apache Cassandra database is the right choice when you need scalability and high availability without compromising performance. Linear scalability and proven fault-tolerance on commodity hardware or cloud infrastructure make it the perfect platform for mission-critical data. Cassandra\u0027s support for replicating across multiple datacenters is best-in-class, providing lower latency for your users and the peace of mind of knowing that you can survive regional outages.  Cassandra\u0027s data model offers the convenience of column indexes with the performance of log-structured updates, strong support for denormalization and materialized views, and powerful built-in caching.\tWrappedArray(Database, NoSQL, Java, Eventually Consistent, Transactional)\timg/software/cassandra.png\t0.9941422\n27569\t21\tElasticSearch\tElasticsearch is a distributed, open source search and analytics engine, designed for horizontal scalability, reliability, and easy management. It combines the speed of search with the power of analytics via a sophisticated, developer-friendly query language covering structured, unstructured, and time-series data.\tWrappedArray(Search Engine, Java, Python, REST API, Lucene, XML, JSON, Aggregations)\timg/software/elasticsearch.png\t0.9930676\n27569\t62\tSpark Streaming\tSpark Streaming is an extension of the core Spark API that enables scalable, high-throughput, fault-tolerant stream processing of live data streams. Data can be ingested from many sources like Kafka, Flume, Twitter, ZeroMQ, Kinesis, or TCP sockets, and can be processed using complex algorithms expressed with high-level functions like map, reduce, join and window. Finally, processed data can be pushed out to filesystems, databases, and live dashboards.\tWrappedArray(Library, Spark, Streaming)\timg/software/spark-streaming.png\t0.986588\n27569\t2\tTachyon\tTachyon is a memory-centric distributed storage system enabling reliable data sharing at memory-speed across cluster frameworks.\tWrappedArray(Distributed Cache, Object Store, S3, Swift, HDFS)\timg/software/tachyon.png\t0.9850076\n27569\t37\tiPython/Jupyter\tThe Jupyter Notebook is a web application that allows you to create and share documents that contain live code, equations, visualizations and explanatory text. Uses include: data cleaning and transformation, numerical simulation, statistical modeling, machine learning and much more.\tWrappedArray(Notebook, Python, Java, Scala, R, Visualization, SQL)\timg/software/ipython.png\t0.98462003\n28567\t7\tApache Spark\tApache Spark is fast and general compute engine for Hadoop data.  Spark provides a simple and expressive programming model that supports a wide range of applications, including ETL, machine learning, stream processing, and graph computation.\tWrappedArray(Data Processing, Java, Scala, SQL, R, Python, DataFrame, Table, DataStream, Streaming Analytics, Batch Analytics, Machine Learning, Graph Analytics, Approximations, Sampling, Lazy)\timg/software/spark.png\t1.0058341\n28567\t74\tNeo4j\tNeo4j is an open-source graph database implemented in Java and accessible from software written in other languages using the Cypher Query Language through a transactional HTTP endpoint.[1][2][3] The developers describe Neo4j as an ACID-compliant transactional database with native graph storage and processing.\tWrappedArray(Library, Graph Analytics, Java)\timg/software/neo4j.png\t0.9983847\n28567\t35\tNLTK\tNLTK is a leading platform for building Python programs to work with human language data. It provides easy-to-use interfaces to over 50 corpora and lexical resources such as WordNet, along with a suite of text processing libraries for classification, tokenization, stemming, tagging, parsing, and semantic reasoning, wrappers for industrial-strength NLP libraries, and an active discussion forum.\tWrappedArray(Library, NLP, Python, Text Analytics)\timg/software/nltk.png\t0.99144375\n28567\t11\tApache YARN\tA framework for job scheduling and cluster resource management.\tWrappedArray(Cluster Resource Manager, Hadoop, Java)\timg/software/yarn.png\t0.99024105\n28567\t61\tSpark ML/MLlib\tMLlib is Spark’s machine learning (ML) library. Its goal is to make practical machine learning scalable and easy. It consists of common learning algorithms and utilities, including classification, regression, clustering, collaborative filtering, dimensionality reduction, as well as lower-level optimization primitives and higher-level pipeline APIs.\tWrappedArray(Library, Spark, Machine Learning)\timg/software/spark-ml.png\t0.98699605\n28567\t78\tTensor Flow\tTensorFlow is an open source software library for numerical computation using data flow graphs. Nodes in the graph represent mathematical operations, while the graph edges represent the multidimensional data arrays (tensors) communicated between them.\tWrappedArray(Data Processing, Deep Learning, Neural Networks)\timg/software/tensorflow.png\t0.9835032\n29427\t18\tApache Kafka\tApache Kafka is publish-subscribe messaging system implementaed as a distributed commit log with a cluster centric design with string durability and fault tolerance guarantees.\tWrappedArray(Message Broker, Java, C++, REST API, Messaging, Publish Subscribe, Producer Consumer)\timg/software/kafka.png\t1.0040414\n29427\t21\tElasticSearch\tElasticsearch is a distributed, open source search and analytics engine, designed for horizontal scalability, reliability, and easy management. It combines the speed of search with the power of analytics via a sophisticated, developer-friendly query language covering structured, unstructured, and time-series data.\tWrappedArray(Search Engine, Java, Python, REST API, Lucene, XML, JSON, Aggregations)\timg/software/elasticsearch.png\t0.9996147\n29427\t51\tRedis\tRedis is an open source, in-memory Data Structure Store, used as a database, a caching layer for a message broker.\tWrappedArray(Distributed Cache, Key Value Store, HyperLogLog, Approximations, Probabilistic Data Structures, UDAF)\timg/software/redis.png\t0.99558187\n29427\t1\tApache Cassandra\tThe Apache Cassandra database is the right choice when you need scalability and high availability without compromising performance. Linear scalability and proven fault-tolerance on commodity hardware or cloud infrastructure make it the perfect platform for mission-critical data. Cassandra\u0027s support for replicating across multiple datacenters is best-in-class, providing lower latency for your users and the peace of mind of knowing that you can survive regional outages.  Cassandra\u0027s data model offers the convenience of column indexes with the performance of log-structured updates, strong support for denormalization and materialized views, and powerful built-in caching.\tWrappedArray(Database, NoSQL, Java, Eventually Consistent, Transactional)\timg/software/cassandra.png\t0.9944632\n29427\t42\tScala\tScala began life in 2003, created by Martin Odersky and his research group at EPFL, next to Lake Geneva and the Alps, in Lausanne, Switzerland. Scala has since grown into a mature open source programming language, used by hundreds of thousands of developers, and is developed and maintained by scores of people all over the world. Have the best of both worlds. Construct elegant class hierarchies for maximum code reuse and extensibility, implement their behavior using higher-order functions. Or anything in-between.\tWrappedArray(Programming Language, Functional, Java, Static Typing, Compiled)\timg/software/scala.png\t0.99078786\n29427\t52\tJSON\tJSON is an open standard format that uses human-readable text to transmit data objects consisting of key value pairs.\tWrappedArray(File Format, Key Value Store)\timg/software/json.png\t0.97946733\n34063\t37\tiPython/Jupyter\tThe Jupyter Notebook is a web application that allows you to create and share documents that contain live code, equations, visualizations and explanatory text. Uses include: data cleaning and transformation, numerical simulation, statistical modeling, machine learning and much more.\tWrappedArray(Notebook, Python, Java, Scala, R, Visualization, SQL)\timg/software/ipython.png\t1.0246811\n34063\t77\tS3\tSimple Storage Service (S3) provides developers and IT teams with secure, durable, highly-scalable object storage.\tWrappedArray(File System, Object Store, AWS, Eventually Consistent)\timg/software/s3.png\t1.0122654\n34063\t50\tGoogle Cloud Platform\tGoogle Cloud Platform enables developers to build, test and deploy applications on Google’s highly-scalable and reliable infrastructure. Choose from computing, storage and application services for your web, mobile and backend solutions.\tWrappedArray(Cloud Provider, Google)\timg/software/googlecloud.png\t1.0088729\n34063\t49\tAmazon Web Services\tAmazon Web Services offers reliable, scalable, and inexpensive cloud computing services. Free to join, pay only for what you use.\tWrappedArray(Cloud Provider, AWS)\timg/software/aws.png\t1.0028577\n34063\t24\tApache Mesos\tApache Mesos is a cluster manager that provides efficient resource isolation and sharing across distributed applications, or frameworks. It can run Hadoop, MPI, Hypertable, Spark, and other frameworks on a dynamically shared pool of nodes.\tWrappedArray(Cluster Resource Manager, Docker, Container)\timg/software/mesos.png\t1.0019437\n34063\t35\tNLTK\tNLTK is a leading platform for building Python programs to work with human language data. It provides easy-to-use interfaces to over 50 corpora and lexical resources such as WordNet, along with a suite of text processing libraries for classification, tokenization, stemming, tagging, parsing, and semantic reasoning, wrappers for industrial-strength NLP libraries, and an active discussion forum.\tWrappedArray(Library, NLP, Python, Text Analytics)\timg/software/nltk.png\t0.99625206\n34063\t44\tPython\tPython is a widely used general-purpose, high-level programming language. Its design philosophy emphasizes code readability, and its syntax allows programmers to express concepts in fewer lines of code than would be possible in languages such as C++ or Java.\tWrappedArray(Programming Language, Dynamic Typing, Interpreted)\timg/software/python.png\t0.9953442\n34063\t52\tJSON\tJSON is an open standard format that uses human-readable text to transmit data objects consisting of key value pairs.\tWrappedArray(File Format, Key Value Store)\timg/software/json.png\t0.9881637\n34063\t41\tSQL\tis a special-purpose programming language designed for managing data held in a relational database management system (RDBMS), or for stream processing in a relational data stream management system (RDSMS)\tWrappedArray(Programming Language, SQL, RDBMS, Interpreted)\timg/software/sql.png\t0.9846793\n34063\t29\tStanford CoreNLP\tStanford CoreNLP provides a set of natural language analysis tools. It can give the base forms of words, their parts of speech, whether they are names of companies, people, etc., normalize dates, times, and numeric quantities, and mark up the structure of sentences in terms of phrases and word dependencies, indicate which noun phrases refer to the same entities, indicate sentiment, and extract open-class relations between mentions.\tWrappedArray(Library, NLP, Java, Text Analytics)\timg/software/corenlp.png\t0.9846792\n34063\t74\tNeo4j\tNeo4j is an open-source graph database implemented in Java and accessible from software written in other languages using the Cypher Query Language through a transactional HTTP endpoint.[1][2][3] The developers describe Neo4j as an ACID-compliant transactional database with native graph storage and processing.\tWrappedArray(Library, Graph Analytics, Java)\timg/software/neo4j.png\t0.98110956\n34063\t54\tMongoDB\tMongoDB is an open-source database developed by MongoDB, Inc. MongoDB stores data in JSON-like documents that can vary in structure. Related information is stored together for fast query access through the MongoDB query language. MongoDB uses dynamic schemas, meaning that you can create records without first defining the structure, such as the fields or the types of their values.\tWrappedArray(Database, Document Store, Key Value Store, NoSQL, JSON, Eventually Consistent)\timg/software/mongodb.png\t0.97621506\n34063\t36\tSci-Kit Learn\tSimple and efficient tools for data mining and data analysis, accessible to everybody, reusable in various contexts, built on NumPy, SciPy, and matplotlib\tWrappedArray(Library, Python, Machine Learning)\timg/software/scikit-learn.png\t0.97520435\n34063\t21\tElasticSearch\tElasticsearch is a distributed, open source search and analytics engine, designed for horizontal scalability, reliability, and easy management. It combines the speed of search with the power of analytics via a sophisticated, developer-friendly query language covering structured, unstructured, and time-series data.\tWrappedArray(Search Engine, Java, Python, REST API, Lucene, XML, JSON, Aggregations)\timg/software/elasticsearch.png\t0.9697722\n37022\t7\tApache Spark\tApache Spark is fast and general compute engine for Hadoop data.  Spark provides a simple and expressive programming model that supports a wide range of applications, including ETL, machine learning, stream processing, and graph computation.\tWrappedArray(Data Processing, Java, Scala, SQL, R, Python, DataFrame, Table, DataStream, Streaming Analytics, Batch Analytics, Machine Learning, Graph Analytics, Approximations, Sampling, Lazy)\timg/software/spark.png\t1.0069591\n37022\t20\tApache Solr\tHigh performance search engine built using Lucene Core, with XML/HTTP and JSON/Python/Ruby APIs, hit highlighting, faceted search, caching, replication, and a web admin interface.\tWrappedArray(Search Engine, Java, REST API, UI, Python, Ruby, XML, JSON)\timg/software/solr.png\t1.0045345\n37022\t24\tApache Mesos\tApache Mesos is a cluster manager that provides efficient resource isolation and sharing across distributed applications, or frameworks. It can run Hadoop, MPI, Hypertable, Spark, and other frameworks on a dynamically shared pool of nodes.\tWrappedArray(Cluster Resource Manager, Docker, Container)\timg/software/mesos.png\t1.003927\n37022\t69\tSpark GraphX\tGraphX, Spark\u0027s API for graph and graph-parallel computation, unifies ETL, exploratory analysis, and iterative graph computation within a single system.\tWrappedArray(Library, Graph Analytics, Spark)\timg/software/spark-graphx.png\t1.0013568\n37022\t33\tApache Oozie\tOozie is a workflow scheduler system integrated with the rest of the Hadoop stack supporting several types of Hadoop jobs out of the box (such as Java map-reduce, Streaming map-reduce, Pig, Hive, Sqoop and Distcp) as well as system specific jobs (such as Java programs and shell script.\tWrappedArray(Workflow, Hadoop, Java, UI)\timg/software/oozie.png\t0.99888235\n37022\t28\tApache ZooKeeper\tApache ZooKeeper server which enables highly reliable distributed coordination.\tWrappedArray(Distribured Coordinator, Paxos, RAFT, Hadoop, HiveQL, SQL, Query Processing, Java, Lazy)\timg/software/zookeeper.png\t0.9944513\n37022\t42\tScala\tScala began life in 2003, created by Martin Odersky and his research group at EPFL, next to Lake Geneva and the Alps, in Lausanne, Switzerland. Scala has since grown into a mature open source programming language, used by hundreds of thousands of developers, and is developed and maintained by scores of people all over the world. Have the best of both worlds. Construct elegant class hierarchies for maximum code reuse and extensibility, implement their behavior using higher-order functions. Or anything in-between.\tWrappedArray(Programming Language, Functional, Java, Static Typing, Compiled)\timg/software/scala.png\t0.9829848\n37022\t76\tProtobuffers\tProtocol buffers are language-neutral, platform-neutral, extensible mechanism for serializing structured data - think XML, but smaller, faster, and simpler.\tWrappedArray(File Format, Evolving Schema, Nested Schema)\timg/software/protobuffers.png\t0.9702468\n37022\t43\tJava\tJava is a general-purpose computer programming language that is concurrent, class-based, object-oriented, and specifically designed to have as few implementation dependencies as possible.\tWrappedArray(Programming Language, Object Oriented, Java, Static Typing, Compiled)\timg/software/java.png\t0.97024673\n37477\t38\tApache Zeppelin\tA web-based notebook that enables interactive data analytics.  You can make beautiful data-driven, interactive and collaborative documents with SQL, Scala and more.\tWrappedArray(Notebook, Python, Java, Scala, R, HiveQL, Cassandra, Visualization, SQL)\timg/software/zeppelin.png\t0.99447113\n37902\t7\tApache Spark\tApache Spark is fast and general compute engine for Hadoop data.  Spark provides a simple and expressive programming model that supports a wide range of applications, including ETL, machine learning, stream processing, and graph computation.\tWrappedArray(Data Processing, Java, Scala, SQL, R, Python, DataFrame, Table, DataStream, Streaming Analytics, Batch Analytics, Machine Learning, Graph Analytics, Approximations, Sampling, Lazy)\timg/software/spark.png\t1.0024111\n37902\t42\tScala\tScala began life in 2003, created by Martin Odersky and his research group at EPFL, next to Lake Geneva and the Alps, in Lausanne, Switzerland. Scala has since grown into a mature open source programming language, used by hundreds of thousands of developers, and is developed and maintained by scores of people all over the world. Have the best of both worlds. Construct elegant class hierarchies for maximum code reuse and extensibility, implement their behavior using higher-order functions. Or anything in-between.\tWrappedArray(Programming Language, Functional, Java, Static Typing, Compiled)\timg/software/scala.png\t1.0011544\n37902\t10\tApache HDFS\t A distributed file system that provides high-throughput access to application data.\tWrappedArray(File System, Hadoop, Java)\timg/software/hdfs.png\t0.9976719\n37902\t11\tApache YARN\tA framework for job scheduling and cluster resource management.\tWrappedArray(Cluster Resource Manager, Hadoop, Java)\timg/software/yarn.png\t0.99415314\n37902\t39\tTableau\tTableau can help anyone see and understand their data. Connect to almost any database, drag and drop to create visualizations, and share with a click.\tWrappedArray(BI, UI, Visualization, SQL)\timg/software/tableau.png\t0.9922817\n37902\t47\tCloudera\tWe provide the world’s fastest, easiest, and most secure data platform built on Hadoop. We help solve your most demanding business challenges with data.\tWrappedArray(Distribution, Hadoop, Spark, Kafka)\timg/software/cloudera.png\t0.9846305\n37902\t12\tApache HBase\tUse Apache HBase software when you need random, realtime read/write access to your Big Data. This project\u0027s goal is the hosting of very large tables -- billions of rows X millions of columns -- atop clusters of commodity hardware. HBase is an open-source, distributed, versioned, column-oriented store modeled after Google\u0027s Bigtable: A Distributed Storage System for Structured Data by Chang et al. Just as Bigtable leverages the distributed data storage provided by the Google File System, HBase provides Bigtable-like capabilities on top of Hadoop and HDFS.\tWrappedArray(Database, Hadoop, NoSQL, Java, Eventually Consistent)\timg/software/hbase.png\t0.9819081\n45777\t50\tGoogle Cloud Platform\tGoogle Cloud Platform enables developers to build, test and deploy applications on Google’s highly-scalable and reliable infrastructure. Choose from computing, storage and application services for your web, mobile and backend solutions.\tWrappedArray(Cloud Provider, Google)\timg/software/googlecloud.png\t1.0009257\n45777\t38\tApache Zeppelin\tA web-based notebook that enables interactive data analytics.  You can make beautiful data-driven, interactive and collaborative documents with SQL, Scala and more.\tWrappedArray(Notebook, Python, Java, Scala, R, HiveQL, Cassandra, Visualization, SQL)\timg/software/zeppelin.png\t0.99964404\n45777\t51\tRedis\tRedis is an open source, in-memory Data Structure Store, used as a database, a caching layer for a message broker.\tWrappedArray(Distributed Cache, Key Value Store, HyperLogLog, Approximations, Probabilistic Data Structures, UDAF)\timg/software/redis.png\t0.9992028\n45777\t45\tPresto\tPresto, designed and written from the ground up for interactive analytics at scale, is an open source distributed SQL query engine for running interactive analytic queries against data sources of all sizes ranging from gigabytes to petabytes.\tWrappedArray(Data Processing, Query Processing, Java, SQL, Machine Learning)\timg/software/presto.png\t0.97159755\n49360\t70\tSQL Server\tSQL Server is a relational database management system developed by Microsoft. As a database server, it is a software product with the primary function of storing and retrieving data as requested by other software applications which may run either on the same computer or on another computer across a network (including the Internet).\tWrappedArray(Database, SQL, Microsoft, RDBMS, Transactional)\timg/software/sqlserver.png\t1.0014352\n49360\t7\tApache Spark\tApache Spark is fast and general compute engine for Hadoop data.  Spark provides a simple and expressive programming model that supports a wide range of applications, including ETL, machine learning, stream processing, and graph computation.\tWrappedArray(Data Processing, Java, Scala, SQL, R, Python, DataFrame, Table, DataStream, Streaming Analytics, Batch Analytics, Machine Learning, Graph Analytics, Approximations, Sampling, Lazy)\timg/software/spark.png\t0.99948144\n49360\t47\tCloudera\tWe provide the world’s fastest, easiest, and most secure data platform built on Hadoop. We help solve your most demanding business challenges with data.\tWrappedArray(Distribution, Hadoop, Spark, Kafka)\timg/software/cloudera.png\t0.9986592\n49360\t42\tScala\tScala began life in 2003, created by Martin Odersky and his research group at EPFL, next to Lake Geneva and the Alps, in Lausanne, Switzerland. Scala has since grown into a mature open source programming language, used by hundreds of thousands of developers, and is developed and maintained by scores of people all over the world. Have the best of both worlds. Construct elegant class hierarchies for maximum code reuse and extensibility, implement their behavior using higher-order functions. Or anything in-between.\tWrappedArray(Programming Language, Functional, Java, Static Typing, Compiled)\timg/software/scala.png\t0.995796\n49360\t54\tMongoDB\tMongoDB is an open-source database developed by MongoDB, Inc. MongoDB stores data in JSON-like documents that can vary in structure. Related information is stored together for fast query access through the MongoDB query language. MongoDB uses dynamic schemas, meaning that you can create records without first defining the structure, such as the fields or the types of their values.\tWrappedArray(Database, Document Store, Key Value Store, NoSQL, JSON, Eventually Consistent)\timg/software/mongodb.png\t0.9923424\n49360\t5\tMicrosft Azure\tMicrosoft Azure is a growing collection of integrated cloud services and analytics, computing, database, mobile, networking, storage, and web for moving faster, achieving more, and saving money.\tWrappedArray(Cloud Provider, Microsoft)\timg/software/azure.png\t0.97148037\n53734\t63\tSpark SQL\tSpark SQL is a Spark module for structured data processing. It provides a programming abstraction called DataFrames and can also act as distributed SQL query engine. Spark SQL can also be used to read data from an existing Hive installation.\tWrappedArray(Library, Spark, HiveQL, SQL)\timg/software/spark-sql.png\t0.9979211\n53734\t79\tTitan GraphDB\tTitan is a scalable graph database optimized for storing and querying graphs containing hundreds of billions of vertices and edges distributed across a multi-machine cluster.\tWrappedArray(Database, Graph, Graph Analytics, Java, Transactional)\timg/software/titandb.png\t0.9956516\n53734\t12\tApache HBase\tUse Apache HBase software when you need random, realtime read/write access to your Big Data. This project\u0027s goal is the hosting of very large tables -- billions of rows X millions of columns -- atop clusters of commodity hardware. HBase is an open-source, distributed, versioned, column-oriented store modeled after Google\u0027s Bigtable: A Distributed Storage System for Structured Data by Chang et al. Just as Bigtable leverages the distributed data storage provided by the Google File System, HBase provides Bigtable-like capabilities on top of Hadoop and HDFS.\tWrappedArray(Database, Hadoop, NoSQL, Java, Eventually Consistent)\timg/software/hbase.png\t0.9871707\n54801\t37\tiPython/Jupyter\tThe Jupyter Notebook is a web application that allows you to create and share documents that contain live code, equations, visualizations and explanatory text. Uses include: data cleaning and transformation, numerical simulation, statistical modeling, machine learning and much more.\tWrappedArray(Notebook, Python, Java, Scala, R, Visualization, SQL)\timg/software/ipython.png\t1.0087388\n54801\t64\tCSV\tA comma-separated values (CSV) file stores tabular data (numbers and text) in plain text. Each line of the file is a data record. Each record consists of one or more fields, separated by commas. The use of the comma as a field separator is the source of the name for this file format.\tWrappedArray(File Format)\timg/software/csv.png\t1.0024657\n54801\t35\tNLTK\tNLTK is a leading platform for building Python programs to work with human language data. It provides easy-to-use interfaces to over 50 corpora and lexical resources such as WordNet, along with a suite of text processing libraries for classification, tokenization, stemming, tagging, parsing, and semantic reasoning, wrappers for industrial-strength NLP libraries, and an active discussion forum.\tWrappedArray(Library, NLP, Python, Text Analytics)\timg/software/nltk.png\t1.0002471\n54801\t29\tStanford CoreNLP\tStanford CoreNLP provides a set of natural language analysis tools. It can give the base forms of words, their parts of speech, whether they are names of companies, people, etc., normalize dates, times, and numeric quantities, and mark up the structure of sentences in terms of phrases and word dependencies, indicate which noun phrases refer to the same entities, indicate sentiment, and extract open-class relations between mentions.\tWrappedArray(Library, NLP, Java, Text Analytics)\timg/software/corenlp.png\t0.9982089\n54801\t41\tSQL\tis a special-purpose programming language designed for managing data held in a relational database management system (RDBMS), or for stream processing in a relational data stream management system (RDSMS)\tWrappedArray(Programming Language, SQL, RDBMS, Interpreted)\timg/software/sql.png\t0.9982089\n54801\t36\tSci-Kit Learn\tSimple and efficient tools for data mining and data analysis, accessible to everybody, reusable in various contexts, built on NumPy, SciPy, and matplotlib\tWrappedArray(Library, Python, Machine Learning)\timg/software/scikit-learn.png\t0.9954995\n54801\t40\tR\tR is a language and environment for statistical computing and graphics. It is a GNU project which is similar to the S language and environment which was developed at Bell Laboratories (formerly AT\u0026T, now Lucent Technologies) by John Chambers and colleagues.  R provides a wide variety of statistical (linear and nonlinear modelling, classical statistical tests, time-series analysis, classification, and clustering) and graphical techniques, and is highly extensible.\tWrappedArray(Programming Language, Dynamic Typing, Interpreted)\timg/software/r.png\t0.9897743\n54801\t73\tMemcached\tMemcached is an in-memory key-value store for small chunks of arbitrary data (strings, objects) from results of database calls, API calls, or page rendering.\tWrappedArray(Distributed Cache, Key Value Store, Java, Python, C++)\timg/software/memcached.png\t0.97565717\n54801\t19\tApache Lucene\tLucene provides Java-based indexing and search technology, as well as spellchecking, hit highlighting and advanced analysis/tokenization capabilities.\tWrappedArray(Library, Search, Java, Python)\timg/software/lucene.png\t0.9756571\n54801\t75\tPostgres\tPostgreSQL is a powerful, open source object-relational database system. It has more than 15 years of active development and a proven architecture that has earned it a strong reputation for reliability, data integrity, and correctness.\tWrappedArray(Database, SQL, RDBMS, Transactional)\timg/software/postgres.png\t0.9756571\n56348\t77\tS3\tSimple Storage Service (S3) provides developers and IT teams with secure, durable, highly-scalable object storage.\tWrappedArray(File System, Object Store, AWS, Eventually Consistent)\timg/software/s3.png\t1.0023108\n56348\t44\tPython\tPython is a widely used general-purpose, high-level programming language. Its design philosophy emphasizes code readability, and its syntax allows programmers to express concepts in fewer lines of code than would be possible in languages such as C++ or Java.\tWrappedArray(Programming Language, Dynamic Typing, Interpreted)\timg/software/python.png\t1.0012392\n56348\t40\tR\tR is a language and environment for statistical computing and graphics. It is a GNU project which is similar to the S language and environment which was developed at Bell Laboratories (formerly AT\u0026T, now Lucent Technologies) by John Chambers and colleagues.  R provides a wide variety of statistical (linear and nonlinear modelling, classical statistical tests, time-series analysis, classification, and clustering) and graphical techniques, and is highly extensible.\tWrappedArray(Programming Language, Dynamic Typing, Interpreted)\timg/software/r.png\t1.0011556\n56348\t49\tAmazon Web Services\tAmazon Web Services offers reliable, scalable, and inexpensive cloud computing services. Free to join, pay only for what you use.\tWrappedArray(Cloud Provider, AWS)\timg/software/aws.png\t0.9964001\n56348\t64\tCSV\tA comma-separated values (CSV) file stores tabular data (numbers and text) in plain text. Each line of the file is a data record. Each record consists of one or more fields, separated by commas. The use of the comma as a field separator is the source of the name for this file format.\tWrappedArray(File Format)\timg/software/csv.png\t0.9943688\n56348\t52\tJSON\tJSON is an open standard format that uses human-readable text to transmit data objects consisting of key value pairs.\tWrappedArray(File Format, Key Value Store)\timg/software/json.png\t0.9847841\n56348\t39\tTableau\tTableau can help anyone see and understand their data. Connect to almost any database, drag and drop to create visualizations, and share with a click.\tWrappedArray(BI, UI, Visualization, SQL)\timg/software/tableau.png\t0.97694165\n60978\t62\tSpark Streaming\tSpark Streaming is an extension of the core Spark API that enables scalable, high-throughput, fault-tolerant stream processing of live data streams. Data can be ingested from many sources like Kafka, Flume, Twitter, ZeroMQ, Kinesis, or TCP sockets, and can be processed using complex algorithms expressed with high-level functions like map, reduce, join and window. Finally, processed data can be pushed out to filesystems, databases, and live dashboards.\tWrappedArray(Library, Spark, Streaming)\timg/software/spark-streaming.png\t1.0100592\n60978\t44\tPython\tPython is a widely used general-purpose, high-level programming language. Its design philosophy emphasizes code readability, and its syntax allows programmers to express concepts in fewer lines of code than would be possible in languages such as C++ or Java.\tWrappedArray(Programming Language, Dynamic Typing, Interpreted)\timg/software/python.png\t1.0081409\n60978\t36\tSci-Kit Learn\tSimple and efficient tools for data mining and data analysis, accessible to everybody, reusable in various contexts, built on NumPy, SciPy, and matplotlib\tWrappedArray(Library, Python, Machine Learning)\timg/software/scikit-learn.png\t0.9903999\n60978\t7\tApache Spark\tApache Spark is fast and general compute engine for Hadoop data.  Spark provides a simple and expressive programming model that supports a wide range of applications, including ETL, machine learning, stream processing, and graph computation.\tWrappedArray(Data Processing, Java, Scala, SQL, R, Python, DataFrame, Table, DataStream, Streaming Analytics, Batch Analytics, Machine Learning, Graph Analytics, Approximations, Sampling, Lazy)\timg/software/spark.png\t0.9857312\n60978\t67\tKinesis\tAmazon Kinesis is a platform for streaming data on AWS, offering powerful services to make it easy to load and analyze streaming data, and also providing the ability for you to build custom streaming data applications for specialized needs.\tWrappedArray(Library, Streaming, AWS)\timg/software/kinesis.png\t0.98174334\n60978\t78\tTensor Flow\tTensorFlow is an open source software library for numerical computation using data flow graphs. Nodes in the graph represent mathematical operations, while the graph edges represent the multidimensional data arrays (tensors) communicated between them.\tWrappedArray(Data Processing, Deep Learning, Neural Networks)\timg/software/tensorflow.png\t0.97932756\n73744\t28\tApache ZooKeeper\tApache ZooKeeper server which enables highly reliable distributed coordination.\tWrappedArray(Distribured Coordinator, Paxos, RAFT, Hadoop, HiveQL, SQL, Query Processing, Java, Lazy)\timg/software/zookeeper.png\t1.0040376\n73744\t18\tApache Kafka\tApache Kafka is publish-subscribe messaging system implementaed as a distributed commit log with a cluster centric design with string durability and fault tolerance guarantees.\tWrappedArray(Message Broker, Java, C++, REST API, Messaging, Publish Subscribe, Producer Consumer)\timg/software/kafka.png\t0.9972066\n73744\t7\tApache Spark\tApache Spark is fast and general compute engine for Hadoop data.  Spark provides a simple and expressive programming model that supports a wide range of applications, including ETL, machine learning, stream processing, and graph computation.\tWrappedArray(Data Processing, Java, Scala, SQL, R, Python, DataFrame, Table, DataStream, Streaming Analytics, Batch Analytics, Machine Learning, Graph Analytics, Approximations, Sampling, Lazy)\timg/software/spark.png\t0.9965679\n73744\t34\tApache Nifi\tApache nifi supports powerful and scalable directed graphs of data routing, transformation, and system mediation logic.\tWrappedArray(Workflow, Streaming, Message Broker, Java, UI)\timg/software/nifi.png\t0.9959682\n73744\t68\tDynamoDB\tAmazon DynamoDB is a fast and flexible NoSQL database service for all applications that need consistent, single-digit millisecond latency at any scale. It is a fully managed cloud database and supports both document and key-value store models.\tWrappedArray(Database, NoSQL, AWS, SQL, Approximations, Eventually Consistent)\timg/software/dynamodb.png\t0.96704376\n74393\t21\tElasticSearch\tElasticsearch is a distributed, open source search and analytics engine, designed for horizontal scalability, reliability, and easy management. It combines the speed of search with the power of analytics via a sophisticated, developer-friendly query language covering structured, unstructured, and time-series data.\tWrappedArray(Search Engine, Java, Python, REST API, Lucene, XML, JSON, Aggregations)\timg/software/elasticsearch.png\t1.0068996\n74393\t16\tApache HUE\tHUE is the Hadoop User Experience and is a Web interface for to load and analytze data with Apache Hadoop.,\tWrappedArray(UI, Hadoop, Cloudera, Ad Hoc, HiveQL, SQL, Data Import, Java)\timg/software/hue.png\t1.0066966\n74393\t15\tHortonworks\tHortonworks develops, distributes and supports HDP - the completely open-source Apache Hadoop data platform, architected for the enterprise.\tWrappedArray(Distribution, Hadoop, Spark, Kafka)\timg/software/hortonworks.png\t1.0007607\n74393\t28\tApache ZooKeeper\tApache ZooKeeper server which enables highly reliable distributed coordination.\tWrappedArray(Distribured Coordinator, Paxos, RAFT, Hadoop, HiveQL, SQL, Query Processing, Java, Lazy)\timg/software/zookeeper.png\t0.9910494\n74393\t27\tApache Pig\tApache Pig is a platform for analyzing large data sets that consists of a high-level language for expressing data analysis programs, coupled with infrastructure for evaluating these programs. The salient property of Pig programs is that their structure is amenable to substantial parallelization, which in turns enables them to handle very large data sets.\tWrappedArray(Data Processing, Hadoop, HiveQL, SQL, Query Processing, Java, Lazy)\timg/software/pig.png\t0.98154175\n74393\t22\tApache Mahout\tApache Mahout is a project of the Apache Software Foundation to produce free implementations of distributed or otherwise scalable machine learning algorithms focused primarily in the areas of collaborative filtering, clustering and classification.\tWrappedArray(Library, Machine Learning, Java)\timg/software/mahout.png\t0.9742363\n74715\t52\tJSON\tJSON is an open standard format that uses human-readable text to transmit data objects consisting of key value pairs.\tWrappedArray(File Format, Key Value Store)\timg/software/json.png\t1.0004281\n74715\t18\tApache Kafka\tApache Kafka is publish-subscribe messaging system implementaed as a distributed commit log with a cluster centric design with string durability and fault tolerance guarantees.\tWrappedArray(Message Broker, Java, C++, REST API, Messaging, Publish Subscribe, Producer Consumer)\timg/software/kafka.png\t0.9975516\n74715\t81\tVertica\tUsing a shared nothing architecture, Vertica is a cluster-based, column-oriented platform designed to manage large, fast-growing volumes of data and provide very fast query performance when used for data warehouses and other query-intensive applications.\tWrappedArray(Database, Data Warehouse, SQL)\timg/software/vertica.png\t0.9772543\n80675\t7\tApache Spark\tApache Spark is fast and general compute engine for Hadoop data.  Spark provides a simple and expressive programming model that supports a wide range of applications, including ETL, machine learning, stream processing, and graph computation.\tWrappedArray(Data Processing, Java, Scala, SQL, R, Python, DataFrame, Table, DataStream, Streaming Analytics, Batch Analytics, Machine Learning, Graph Analytics, Approximations, Sampling, Lazy)\timg/software/spark.png\t0.9968571\n80675\t6\tApache Flink\tFlink is a streaming dataflow engine that provides data distribution, communication, and fault tolerance for distributed computations over data streams.\tWrappedArray(Data Processing, Java, Scala, SQL, DataFrame, Table, Streaming Analytics, Batch Analytics, Machine Learning, Graph Analytics, Approximations, Sampling)\timg/software/flink.png\t0.9873344\n82510\t7\tApache Spark\tApache Spark is fast and general compute engine for Hadoop data.  Spark provides a simple and expressive programming model that supports a wide range of applications, including ETL, machine learning, stream processing, and graph computation.\tWrappedArray(Data Processing, Java, Scala, SQL, R, Python, DataFrame, Table, DataStream, Streaming Analytics, Batch Analytics, Machine Learning, Graph Analytics, Approximations, Sampling, Lazy)\timg/software/spark.png\t1.015522\n82510\t21\tElasticSearch\tElasticsearch is a distributed, open source search and analytics engine, designed for horizontal scalability, reliability, and easy management. It combines the speed of search with the power of analytics via a sophisticated, developer-friendly query language covering structured, unstructured, and time-series data.\tWrappedArray(Search Engine, Java, Python, REST API, Lucene, XML, JSON, Aggregations)\timg/software/elasticsearch.png\t1.0137877\n82510\t52\tJSON\tJSON is an open standard format that uses human-readable text to transmit data objects consisting of key value pairs.\tWrappedArray(File Format, Key Value Store)\timg/software/json.png\t0.9974849\n82510\t62\tSpark Streaming\tSpark Streaming is an extension of the core Spark API that enables scalable, high-throughput, fault-tolerant stream processing of live data streams. Data can be ingested from many sources like Kafka, Flume, Twitter, ZeroMQ, Kinesis, or TCP sockets, and can be processed using complex algorithms expressed with high-level functions like map, reduce, join and window. Finally, processed data can be pushed out to filesystems, databases, and live dashboards.\tWrappedArray(Library, Spark, Streaming)\timg/software/spark-streaming.png\t0.9960445\n82510\t63\tSpark SQL\tSpark SQL is a Spark module for structured data processing. It provides a programming abstraction called DataFrames and can also act as distributed SQL query engine. Spark SQL can also be used to read data from an existing Hive installation.\tWrappedArray(Library, Spark, HiveQL, SQL)\timg/software/spark-sql.png\t0.9913174\n82510\t54\tMongoDB\tMongoDB is an open-source database developed by MongoDB, Inc. MongoDB stores data in JSON-like documents that can vary in structure. Related information is stored together for fast query access through the MongoDB query language. MongoDB uses dynamic schemas, meaning that you can create records without first defining the structure, such as the fields or the types of their values.\tWrappedArray(Database, Document Store, Key Value Store, NoSQL, JSON, Eventually Consistent)\timg/software/mongodb.png\t0.9888491\n82510\t53\tXML\tXML, or Extensible Markup Language, is a markup language that defines a set of rules for encoding documents in a format which is both human-readable and machine-readable.\tWrappedArray(File Format, Key Value Store)\timg/software/xml.png\t0.9790492\n82510\t74\tNeo4j\tNeo4j is an open-source graph database implemented in Java and accessible from software written in other languages using the Cypher Query Language through a transactional HTTP endpoint.[1][2][3] The developers describe Neo4j as an ACID-compliant transactional database with native graph storage and processing.\tWrappedArray(Library, Graph Analytics, Java)\timg/software/neo4j.png\t0.97884566\n82510\t69\tSpark GraphX\tGraphX, Spark\u0027s API for graph and graph-parallel computation, unifies ETL, exploratory analysis, and iterative graph computation within a single system.\tWrappedArray(Library, Graph Analytics, Spark)\timg/software/spark-graphx.png\t0.9762202\n86868\t70\tSQL Server\tSQL Server is a relational database management system developed by Microsoft. As a database server, it is a software product with the primary function of storing and retrieving data as requested by other software applications which may run either on the same computer or on another computer across a network (including the Internet).\tWrappedArray(Database, SQL, Microsoft, RDBMS, Transactional)\timg/software/sqlserver.png\t1.001766\n86868\t20\tApache Solr\tHigh performance search engine built using Lucene Core, with XML/HTTP and JSON/Python/Ruby APIs, hit highlighting, faceted search, caching, replication, and a web admin interface.\tWrappedArray(Search Engine, Java, REST API, UI, Python, Ruby, XML, JSON)\timg/software/solr.png\t1.0010321\n86868\t62\tSpark Streaming\tSpark Streaming is an extension of the core Spark API that enables scalable, high-throughput, fault-tolerant stream processing of live data streams. Data can be ingested from many sources like Kafka, Flume, Twitter, ZeroMQ, Kinesis, or TCP sockets, and can be processed using complex algorithms expressed with high-level functions like map, reduce, join and window. Finally, processed data can be pushed out to filesystems, databases, and live dashboards.\tWrappedArray(Library, Spark, Streaming)\timg/software/spark-streaming.png\t1.000162\n86868\t7\tApache Spark\tApache Spark is fast and general compute engine for Hadoop data.  Spark provides a simple and expressive programming model that supports a wide range of applications, including ETL, machine learning, stream processing, and graph computation.\tWrappedArray(Data Processing, Java, Scala, SQL, R, Python, DataFrame, Table, DataStream, Streaming Analytics, Batch Analytics, Machine Learning, Graph Analytics, Approximations, Sampling, Lazy)\timg/software/spark.png\t0.9950707\n86868\t63\tSpark SQL\tSpark SQL is a Spark module for structured data processing. It provides a programming abstraction called DataFrames and can also act as distributed SQL query engine. Spark SQL can also be used to read data from an existing Hive installation.\tWrappedArray(Library, Spark, HiveQL, SQL)\timg/software/spark-sql.png\t0.9938541\n86868\t59\tOracle\tOracle helps you simplify your IT environment to save money, time, and resources and invest in innovation. Oracle provises a comprehensive and fully integrated stack of cloud applications, platform services, and engineered systems.\tWrappedArray(Database, SQL, RDBMS, Transactional)\timg/software/oracle.png\t0.96691006\n88005\t6\tApache Flink\tFlink is a streaming dataflow engine that provides data distribution, communication, and fault tolerance for distributed computations over data streams.\tWrappedArray(Data Processing, Java, Scala, SQL, DataFrame, Table, Streaming Analytics, Batch Analytics, Machine Learning, Graph Analytics, Approximations, Sampling)\timg/software/flink.png\t0.992264\n96340\t33\tApache Oozie\tOozie is a workflow scheduler system integrated with the rest of the Hadoop stack supporting several types of Hadoop jobs out of the box (such as Java map-reduce, Streaming map-reduce, Pig, Hive, Sqoop and Distcp) as well as system specific jobs (such as Java programs and shell script.\tWrappedArray(Workflow, Hadoop, Java, UI)\timg/software/oozie.png\t1.020832\n96340\t18\tApache Kafka\tApache Kafka is publish-subscribe messaging system implementaed as a distributed commit log with a cluster centric design with string durability and fault tolerance guarantees.\tWrappedArray(Message Broker, Java, C++, REST API, Messaging, Publish Subscribe, Producer Consumer)\timg/software/kafka.png\t1.0146413\n96340\t49\tAmazon Web Services\tAmazon Web Services offers reliable, scalable, and inexpensive cloud computing services. Free to join, pay only for what you use.\tWrappedArray(Cloud Provider, AWS)\timg/software/aws.png\t1.008974\n96340\t11\tApache YARN\tA framework for job scheduling and cluster resource management.\tWrappedArray(Cluster Resource Manager, Hadoop, Java)\timg/software/yarn.png\t1.0061221\n96340\t42\tScala\tScala began life in 2003, created by Martin Odersky and his research group at EPFL, next to Lake Geneva and the Alps, in Lausanne, Switzerland. Scala has since grown into a mature open source programming language, used by hundreds of thousands of developers, and is developed and maintained by scores of people all over the world. Have the best of both worlds. Construct elegant class hierarchies for maximum code reuse and extensibility, implement their behavior using higher-order functions. Or anything in-between.\tWrappedArray(Programming Language, Functional, Java, Static Typing, Compiled)\timg/software/scala.png\t1.004473\n96340\t10\tApache HDFS\t A distributed file system that provides high-throughput access to application data.\tWrappedArray(File System, Hadoop, Java)\timg/software/hdfs.png\t1.0034819\n96340\t7\tApache Spark\tApache Spark is fast and general compute engine for Hadoop data.  Spark provides a simple and expressive programming model that supports a wide range of applications, including ETL, machine learning, stream processing, and graph computation.\tWrappedArray(Data Processing, Java, Scala, SQL, R, Python, DataFrame, Table, DataStream, Streaming Analytics, Batch Analytics, Machine Learning, Graph Analytics, Approximations, Sampling, Lazy)\timg/software/spark.png\t1.0017786\n96340\t8\tApache Flume\tFlume is a distributed, reliable, and available service for efficiently collecting, aggregating, and moving large amounts of log data. It has a simple and flexible architecture based on streaming data flows. It is robust and fault tolerant with tunable reliability mechanisms and many failover and recovery mechanisms. It uses a simple extensible data model that allows for online analytic application.\tWrappedArray(Library, Java, Log Collection)\timg/software/flume.png\t0.999552\n96340\t62\tSpark Streaming\tSpark Streaming is an extension of the core Spark API that enables scalable, high-throughput, fault-tolerant stream processing of live data streams. Data can be ingested from many sources like Kafka, Flume, Twitter, ZeroMQ, Kinesis, or TCP sockets, and can be processed using complex algorithms expressed with high-level functions like map, reduce, join and window. Finally, processed data can be pushed out to filesystems, databases, and live dashboards.\tWrappedArray(Library, Spark, Streaming)\timg/software/spark-streaming.png\t0.9964006\n96340\t63\tSpark SQL\tSpark SQL is a Spark module for structured data processing. It provides a programming abstraction called DataFrames and can also act as distributed SQL query engine. Spark SQL can also be used to read data from an existing Hive installation.\tWrappedArray(Library, Spark, HiveQL, SQL)\timg/software/spark-sql.png\t0.9952478\n96340\t60\tMySQL\tMySQL is an open-source, relational database management system (RDBMS) developed, distributed and supported by Oracle Corporation. MySQL stores data in tables and uses structured query language (SQL) for database access. In MySQL, you pre-define your database schema based on your requirements and set up rules to govern the relationships between fields in your tables. In MySQL, related information may be stored in separate tables, but associated through the use of joins.\tWrappedArray(Database, SQL, RDBMS, Transactional)\timg/software/mysql.png\t0.99449885\n96340\t14\tApache Hive\tA data warehouse infrastructure that provides data summarization and ad hoc querying\tWrappedArray(Data Processing, Hadoop, HiveQL, SQL, Query Processing, Java, MapReduce)\timg/software/hive.png\t0.9930544\n96340\t17\tApache Impala\tAchieve order-of-magnitude performance increase compared to alternatives for the only true interactive analytic solution native to Hadoop.\tWrappedArray(Data Processing, Query Processing, SQL, C++, Batch Analytics)\timg/software/impala.png\t0.9924158\n96340\t16\tApache HUE\tHUE is the Hadoop User Experience and is a Web interface for to load and analytze data with Apache Hadoop.,\tWrappedArray(UI, Hadoop, Cloudera, Ad Hoc, HiveQL, SQL, Data Import, Java)\timg/software/hue.png\t0.99185604\n96340\t52\tJSON\tJSON is an open standard format that uses human-readable text to transmit data objects consisting of key value pairs.\tWrappedArray(File Format, Key Value Store)\timg/software/json.png\t0.9910426\n96340\t12\tApache HBase\tUse Apache HBase software when you need random, realtime read/write access to your Big Data. This project\u0027s goal is the hosting of very large tables -- billions of rows X millions of columns -- atop clusters of commodity hardware. HBase is an open-source, distributed, versioned, column-oriented store modeled after Google\u0027s Bigtable: A Distributed Storage System for Structured Data by Chang et al. Just as Bigtable leverages the distributed data storage provided by the Google File System, HBase provides Bigtable-like capabilities on top of Hadoop and HDFS.\tWrappedArray(Database, Hadoop, NoSQL, Java, Eventually Consistent)\timg/software/hbase.png\t0.98923945\n96340\t20\tApache Solr\tHigh performance search engine built using Lucene Core, with XML/HTTP and JSON/Python/Ruby APIs, hit highlighting, faceted search, caching, replication, and a web admin interface.\tWrappedArray(Search Engine, Java, REST API, UI, Python, Ruby, XML, JSON)\timg/software/solr.png\t0.9875138\n96340\t47\tCloudera\tWe provide the world’s fastest, easiest, and most secure data platform built on Hadoop. We help solve your most demanding business challenges with data.\tWrappedArray(Distribution, Hadoop, Spark, Kafka)\timg/software/cloudera.png\t0.98678714\n96340\t13\tApache MapReduce\tA YARN-based system for parallel processing of large data sets.\tWrappedArray(Data Processing, Hadoop, Java, Python)\timg/software/mapreduce.png\t0.9817588\n96340\t53\tXML\tXML, or Extensible Markup Language, is a markup language that defines a set of rules for encoding documents in a format which is both human-readable and machine-readable.\tWrappedArray(File Format, Key Value Store)\timg/software/xml.png\t0.97741026\n96340\t64\tCSV\tA comma-separated values (CSV) file stores tabular data (numbers and text) in plain text. Each line of the file is a data record. Each record consists of one or more fields, separated by commas. The use of the comma as a field separator is the source of the name for this file format.\tWrappedArray(File Format)\timg/software/csv.png\t0.9747751\n96340\t32\tApache Sqoop\tSqoop is designed for efficiently transferring bulk data between Apache Hadoop and structured datastores such as relational databases.\tWrappedArray(Data Import, Hadoop, Java)\timg/software/sqoop.png\t0.9742083\n96340\t61\tSpark ML/MLlib\tMLlib is Spark’s machine learning (ML) library. Its goal is to make practical machine learning scalable and easy. It consists of common learning algorithms and utilities, including classification, regression, clustering, collaborative filtering, dimensionality reduction, as well as lower-level optimization primitives and higher-level pipeline APIs.\tWrappedArray(Library, Spark, Machine Learning)\timg/software/spark-ml.png\t0.9740828\n96340\t27\tApache Pig\tApache Pig is a platform for analyzing large data sets that consists of a high-level language for expressing data analysis programs, coupled with infrastructure for evaluating these programs. The salient property of Pig programs is that their structure is amenable to substantial parallelization, which in turns enables them to handle very large data sets.\tWrappedArray(Data Processing, Hadoop, HiveQL, SQL, Query Processing, Java, Lazy)\timg/software/pig.png\t0.97112405\n96971\t20\tApache Solr\tHigh performance search engine built using Lucene Core, with XML/HTTP and JSON/Python/Ruby APIs, hit highlighting, faceted search, caching, replication, and a web admin interface.\tWrappedArray(Search Engine, Java, REST API, UI, Python, Ruby, XML, JSON)\timg/software/solr.png\t0.9973092\n96971\t1\tApache Cassandra\tThe Apache Cassandra database is the right choice when you need scalability and high availability without compromising performance. Linear scalability and proven fault-tolerance on commodity hardware or cloud infrastructure make it the perfect platform for mission-critical data. Cassandra\u0027s support for replicating across multiple datacenters is best-in-class, providing lower latency for your users and the peace of mind of knowing that you can survive regional outages.  Cassandra\u0027s data model offers the convenience of column indexes with the performance of log-structured updates, strong support for denormalization and materialized views, and powerful built-in caching.\tWrappedArray(Database, NoSQL, Java, Eventually Consistent, Transactional)\timg/software/cassandra.png\t0.997252\n96971\t18\tApache Kafka\tApache Kafka is publish-subscribe messaging system implementaed as a distributed commit log with a cluster centric design with string durability and fault tolerance guarantees.\tWrappedArray(Message Broker, Java, C++, REST API, Messaging, Publish Subscribe, Producer Consumer)\timg/software/kafka.png\t0.9956459\n96971\t7\tApache Spark\tApache Spark is fast and general compute engine for Hadoop data.  Spark provides a simple and expressive programming model that supports a wide range of applications, including ETL, machine learning, stream processing, and graph computation.\tWrappedArray(Data Processing, Java, Scala, SQL, R, Python, DataFrame, Table, DataStream, Streaming Analytics, Batch Analytics, Machine Learning, Graph Analytics, Approximations, Sampling, Lazy)\timg/software/spark.png\t0.9951445\n96971\t44\tPython\tPython is a widely used general-purpose, high-level programming language. Its design philosophy emphasizes code readability, and its syntax allows programmers to express concepts in fewer lines of code than would be possible in languages such as C++ or Java.\tWrappedArray(Programming Language, Dynamic Typing, Interpreted)\timg/software/python.png\t0.98575556\n99839\t7\tApache Spark\tApache Spark is fast and general compute engine for Hadoop data.  Spark provides a simple and expressive programming model that supports a wide range of applications, including ETL, machine learning, stream processing, and graph computation.\tWrappedArray(Data Processing, Java, Scala, SQL, R, Python, DataFrame, Table, DataStream, Streaming Analytics, Batch Analytics, Machine Learning, Graph Analytics, Approximations, Sampling, Lazy)\timg/software/spark.png\t1.001281\n99839\t10\tApache HDFS\t A distributed file system that provides high-throughput access to application data.\tWrappedArray(File System, Hadoop, Java)\timg/software/hdfs.png\t1.0008496\n99839\t77\tS3\tSimple Storage Service (S3) provides developers and IT teams with secure, durable, highly-scalable object storage.\tWrappedArray(File System, Object Store, AWS, Eventually Consistent)\timg/software/s3.png\t0.99952585\n99839\t69\tSpark GraphX\tGraphX, Spark\u0027s API for graph and graph-parallel computation, unifies ETL, exploratory analysis, and iterative graph computation within a single system.\tWrappedArray(Library, Graph Analytics, Spark)\timg/software/spark-graphx.png\t0.99713075\n99839\t11\tApache YARN\tA framework for job scheduling and cluster resource management.\tWrappedArray(Cluster Resource Manager, Hadoop, Java)\timg/software/yarn.png\t0.99649715\n99839\t18\tApache Kafka\tApache Kafka is publish-subscribe messaging system implementaed as a distributed commit log with a cluster centric design with string durability and fault tolerance guarantees.\tWrappedArray(Message Broker, Java, C++, REST API, Messaging, Publish Subscribe, Producer Consumer)\timg/software/kafka.png\t0.9930423\n99839\t31\tApache Storm\tStanford CoreNLP provides a set of natural language analysis tools. It can give the base forms of words, their parts of speech, whether they are names of companies, people, etc., normalize dates, times, and numeric quantities, and mark up the structure of sentences in terms of phrases and word dependencies, indicate which noun phrases refer to the same entities, indicate sentiment, and extract open-class relations between mentions.\tWrappedArray(Streaming, Java)\timg/software/storm.png\t0.9656631\n"
      },
      "dateCreated": "Apr 19, 2016 9:14:38 PM",
      "dateStarted": "May 1, 2016 4:42:37 AM",
      "dateFinished": "May 1, 2016 4:43:07 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Show UserFactors Matrix",
      "text": "import org.apache.spark.mllib.linalg.Vectors\n\nval userFactorsDF \u003d model.userFactors.map(row \u003d\u003e \n  (row.getInt(0), row.getSeq[Float](1).toArray.map(_.toDouble))\n).toDF(\"userId\", \"userFactors\")\n .sort($\"userId\" asc)\n .as(\"userFactors\")\n\nz.show(userFactorsDF)",
      "dateUpdated": "May 1, 2016 4:42:37 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "userId",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "userFactors",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "userId",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "userFactors",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456873568687_1047705598",
      "id": "20160301-230608_2073461478",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "userId\tuserFactors\n3969\tWrappedArray(-0.19477073848247528, 0.053799230605363846, 0.027662307024002075, 0.5213428139686584, -0.07818000018596649, -0.21466809511184692, -0.3854338526725769, 0.07400017976760864, -0.03491170331835747, -0.4784751236438751)\n5342\tWrappedArray(0.09569406509399414, 0.28257039189338684, 0.055603232234716415, 0.34843534231185913, 0.026368385180830956, -0.11862456053495407, -0.46005141735076904, 0.4533407390117645, -0.10020699352025986, -0.22933685779571533)\n6437\tWrappedArray(-0.18767471611499786, -0.03885335475206375, -0.006552035920321941, 0.3320702016353607, -0.3892098069190979, -0.24134628474712372, -0.31979450583457947, 0.03169569373130798, 0.23413819074630737, -0.44655951857566833)\n8910\tWrappedArray(-0.23181407153606415, 0.1532835066318512, 0.048273712396621704, 0.2914113998413086, -0.259197860956192, -0.19612525403499603, -0.151034414768219, 0.25872546434402466, 0.1883588284254074, -0.44136038422584534)\n12663\tWrappedArray(-0.13906610012054443, 0.02493925206363201, -0.00783054530620575, 0.4296412765979767, -0.06806724518537521, -0.2791949212551117, -0.29498687386512756, 0.09946530312299728, 0.07616844028234482, -0.5582133531570435)\n13077\tWrappedArray(-0.09982370585203171, 0.08499021828174591, -0.03233170509338379, 0.4912034571170807, 0.016398146748542786, -0.4421413242816925, -0.2675275206565857, 0.1212405115365982, -0.008053514175117016, -0.3470913767814636)\n13338\tWrappedArray(-0.060030497610569, -0.2882678210735321, 0.20698282122612, 0.41178014874458313, -0.02196323685348034, 0.022295624017715454, 0.34358838200569153, 0.23837366700172424, 0.5444554686546326, -0.47462812066078186)\n17841\tWrappedArray(-0.19935327768325806, 0.19321192800998688, 0.11528897285461426, 0.4247607886791229, -0.13219040632247925, -0.2998884320259094, -0.23044179379940033, 0.24430914223194122, 0.12551768124103546, -0.3948495388031006)\n18102\tWrappedArray(-0.2627531886100769, 0.23338523507118225, -0.10070428252220154, 0.22048963606357574, -0.268001526594162, -0.07182978093624115, -0.17257577180862427, 0.2905314266681671, 0.32129696011543274, -0.3723389804363251)\n20229\tWrappedArray(-0.09089019149541855, 0.1349162608385086, 0.17330364882946014, 0.4264441132545471, -0.20414450764656067, -0.2126229703426361, -0.2057660073041916, 0.19098645448684692, 0.03420782834291458, -0.431302011013031)\n23426\tWrappedArray(-0.07289434224367142, 0.16190581023693085, 0.03944198787212372, 0.3922254741191864, -0.2646959125995636, -0.1764668971300125, -0.22814755141735077, 0.2697475850582123, 0.0915340781211853, -0.43213751912117004)\n25639\tWrappedArray(-0.48507416248321533, -0.10558004677295685, 0.21816012263298035, 0.24283629655838013, -0.18104638159275055, -0.3430538475513458, -0.20163816213607788, 0.1559307873249054, 0.18423697352409363, -0.433615118265152)\n27045\tWrappedArray(-0.06620141863822937, 0.11414255946874619, 0.0789109617471695, 0.4027189612388611, -0.1542065590620041, -0.2950475513935089, -0.20491468906402588, 0.2444608062505722, 0.09878981113433838, -0.4497477412223816)\n27569\tWrappedArray(-0.11783908307552338, 0.16252365708351135, 0.12280163168907166, 0.437540739774704, -0.1388711929321289, -0.2009103000164032, -0.2556898891925812, 0.1539403349161148, 0.025078337639570236, -0.4493219256401062)\n28567\tWrappedArray(-0.15427634119987488, 0.03832556679844856, 0.06447307765483856, 0.5137591361999512, -0.16491994261741638, -0.18606685101985931, -0.36731937527656555, 0.04554956778883934, 0.02674146555364132, -0.4721609652042389)\n29427\tWrappedArray(-0.11261816322803497, 0.12327790260314941, 0.14731279015541077, 0.3935842216014862, -0.26949092745780945, -0.2024460881948471, -0.17951582372188568, 0.048002589493989944, 0.06739490479230881, -0.4837386906147003)\n34063\tWrappedArray(-0.030137749388813972, 0.03812619671225548, 0.0033227354288101196, 0.5044054388999939, -0.22245371341705322, -0.04822339490056038, -0.26252084970474243, -0.09018898755311966, -0.06934943795204163, -0.5301406383514404)\n37022\tWrappedArray(-0.10558339208364487, 0.06893222033977509, 0.23870638012886047, 0.24706746637821198, -0.6033413410186768, -0.07763543725013733, 0.00258841086179018, 0.3098038136959076, -0.036327578127384186, -0.3352857530117035)\n37477\tWrappedArray(-0.37907475233078003, -0.12836438417434692, 0.16984732449054718, 0.22396132349967957, -0.025120718404650688, -0.2670969069004059, -0.24266085028648376, 0.06185588613152504, 0.08925832808017731, -0.4098811745643616)\n37902\tWrappedArray(-0.12471045553684235, 0.14539554715156555, -0.04523177444934845, 0.43937572836875916, -0.1368834227323532, -0.33068612217903137, -0.20787349343299866, 0.15751256048679352, 0.06439580768346786, -0.4609922468662262)\n45777\tWrappedArray(-0.5839051008224487, -0.23334965109825134, 0.30778685212135315, 0.05738293007016182, -0.08860749006271362, -0.27999812364578247, -0.16262947022914886, 0.08622881770133972, 0.14287415146827698, -0.24813345074653625)\n49360\tWrappedArray(-0.11798277497291565, -0.035448331385850906, -0.18739011883735657, 0.32346653938293457, -0.2875063121318817, -0.244133859872818, -0.07203510403633118, 0.1489042341709137, -0.12962234020233154, -0.5690755844116211)\n53734\tWrappedArray(-0.08101487904787064, 0.1465778797864914, 0.03507385775446892, 0.44534221291542053, -0.07855388522148132, -0.3605666756629944, -0.23141926527023315, 0.21424901485443115, 0.06737103313207626, -0.409686803817749)\n54801\tWrappedArray(0.15972928702831268, -0.02374599128961563, 0.37344950437545776, 0.5692894458770752, 0.07963281869888306, -0.018728572875261307, -0.27911439538002014, -0.12070944905281067, -0.4352772533893585, 0.025943851098418236)\n56348\tWrappedArray(-0.04599214717745781, 0.16930508613586426, 0.13675187528133392, 0.4736858308315277, -0.1697167009115219, -0.2530684173107147, -0.21925336122512817, 0.0021771546453237534, 0.039819471538066864, -0.42825090885162354)\n60978\tWrappedArray(-0.07669718563556671, -0.024657974019646645, 0.09529111534357071, 0.5097165703773499, -0.17922665178775787, -0.14487837255001068, -0.409542441368103, 0.14746986329555511, -0.16688202321529388, -0.42081284523010254)\n73744\tWrappedArray(-0.19766786694526672, 0.042465690523386, 0.21951963007450104, 0.2581486403942108, -0.03210701420903206, -0.4165370464324951, -0.3864295482635498, 0.2534562647342682, 0.05375609174370766, -0.462661474943161)\n74393\tWrappedArray(-0.14776919782161713, 0.2056899219751358, -0.06939690560102463, 0.25076067447662354, -0.3461424708366394, -0.10598224401473999, -0.22287115454673767, 0.3055671155452728, 0.32116255164146423, -0.3438360095024109)\n74715\tWrappedArray(-0.12142661213874817, 0.2241470366716385, 0.39762067794799805, 0.2814202308654785, -0.26680371165275574, -0.17409521341323853, -0.2235119640827179, -0.1769060641527176, 0.4149802029132843, -0.38838011026382446)\n80675\tWrappedArray(0.14181850850582123, -0.04877052456140518, -0.0031914731953293085, 0.2289414405822754, -0.6253529787063599, -0.13209077715873718, 0.011101181618869305, 0.3127134144306183, -0.16769546270370483, -0.41527059674263)\n82510\tWrappedArray(0.014966093935072422, 0.06896517425775528, -0.0034881981555372477, 0.4833565354347229, -0.24276627600193024, -0.1879308819770813, -0.286822110414505, 0.08213277906179428, -0.021920818835496902, -0.5028958916664124)\n86868\tWrappedArray(0.17019468545913696, 0.07011730968952179, 0.2145775556564331, 0.3786364197731018, -0.2796824872493744, -0.19070638716220856, -0.12861619889736176, 0.4012378454208374, 0.04299270734190941, -0.3874686360359192)\n88005\tWrappedArray(0.2133256196975708, -0.0765414908528328, -0.03081059269607067, 0.1670055091381073, -0.6513360738754272, -0.08220062404870987, 0.05468427389860153, 0.2939704954624176, -0.21031486988067627, -0.3503904938697815)\n96340\tWrappedArray(-0.06447497755289078, 0.09381689876317978, -0.023319870233535767, 0.4787607192993164, -0.14935874938964844, -0.29218125343322754, -0.2865452468395233, 0.0963209867477417, 0.13320975005626678, -0.4709375500679016)\n96971\tWrappedArray(-0.11452745646238327, 0.15921910107135773, 0.11307120323181152, 0.3932632505893707, -0.2670072019100189, -0.18539731204509735, -0.171731099486351, 0.1494332253932953, 0.062364548444747925, -0.4531766474246979)\n99839\tWrappedArray(-0.24219892919063568, 0.2716312110424042, -0.008747342973947525, 0.3758992552757263, -0.37035900354385376, -0.16017107665538788, -0.04094864800572395, 0.2000235915184021, 0.08111938834190369, -0.3930840492248535)\n"
      },
      "dateCreated": "Mar 1, 2016 11:06:08 PM",
      "dateStarted": "May 1, 2016 4:42:40 AM",
      "dateFinished": "May 1, 2016 4:43:08 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Show ItemFactors Matrix",
      "text": "import org.apache.spark.mllib.linalg.Vectors\n \nval itemFactorsDF \u003d model.itemFactors.map(row \u003d\u003e\n  (row.getInt(0), row.getSeq[Float](1).toArray.map(_.toDouble))\n).toDF(\"itemId\", \"itemFactors\")\n .sort($\"itemId\" asc)\n .as(\"itemFactors\")\n\nz.show(itemFactorsDF)",
      "dateUpdated": "May 1, 2016 4:42:47 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 314.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456865217092_774550692",
      "id": "20160301-204657_541485869",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "itemId\titemFactors\n1\tWrappedArray(-0.2544817328453064, 0.3306563198566437, 0.20086553692817688, 0.6203413605690002, -0.4215177893638611, -0.34924983978271484, -0.2699334919452667, 0.31765225529670715, 0.18379928171634674, -0.8080863356590271)\n2\tWrappedArray(-0.3467819392681122, 0.21429969370365143, 0.19737191498279572, 0.6993507146835327, -0.10256211459636688, -0.5389225482940674, -0.40505194664001465, 0.23032940924167633, 0.0660889595746994, -0.7030198574066162)\n3\tWrappedArray(-0.20722106099128723, 0.10304368287324905, -0.0076145208440721035, 0.7297975420951843, 0.05557956174015999, -0.6476613879203796, -0.41754716634750366, 0.1527077555656433, -0.06424692273139954, -0.5052968263626099)\n5\tWrappedArray(-0.17288987338542938, -0.09216193854808807, -0.3562871813774109, 0.41202354431152344, -0.417449951171875, -0.3752983808517456, -0.041601430624723434, 0.24795033037662506, -0.2367670238018036, -0.8180360198020935)\n6\tWrappedArray(0.2757564187049866, -0.09894173592329025, -0.03982746601104736, 0.21588049829006195, -0.8419528007507324, -0.10625704377889633, 0.07068789750337601, 0.3800024390220642, -0.27186456322669983, -0.45293402671813965)\n7\tWrappedArray(-0.2088037133216858, 0.08837217092514038, 0.1401902586221695, 0.586890697479248, -0.5864546298980713, -0.4123528301715851, -0.21422035992145538, 0.4585816264152527, 0.028453268110752106, -0.8172956705093384)\n8\tWrappedArray(-0.4067160487174988, 0.31866779923439026, -0.13674496114253998, 0.5642879605293274, -0.34001725912094116, -0.2086871862411499, -0.43420684337615967, 0.3600340485572815, 0.39416229724884033, -0.7362350225448608)\n9\tWrappedArray(-0.5284776091575623, 0.30651891231536865, 0.027208276093006134, 0.3932998478412628, -0.37426838278770447, -0.28111594915390015, -0.25837740302085876, 0.4662160277366638, 0.4730754494667053, -0.6607657670974731)\n10\tWrappedArray(-0.4028571546077728, 0.33473578095436096, -0.10545060783624649, 0.5716454386711121, -0.37175559997558594, -0.27986714243888855, -0.3302808701992035, 0.37447473406791687, 0.3290669620037079, -0.7604433298110962)\n11\tWrappedArray(-0.3610791265964508, 0.32083868980407715, -0.10683809965848923, 0.5951521396636963, -0.3992898166179657, -0.24988125264644623, -0.35339656472206116, 0.3674047291278839, 0.3049244284629822, -0.7546535730361938)\n12\tWrappedArray(-0.17633269727230072, 0.22482390701770782, 0.02697460912168026, 0.7031391263008118, -0.08430144190788269, -0.6122434139251709, -0.35374510288238525, 0.27703356742858887, 0.09921126812696457, -0.6116108298301697)\n13\tWrappedArray(-0.12670505046844482, 0.1296645849943161, -0.032141201198101044, 0.7340179085731506, -0.038395076990127563, -0.6213045716285706, -0.41299572587013245, 0.15434490144252777, 0.061208389699459076, -0.5958877205848694)\n14\tWrappedArray(-0.4437881410121918, 0.24218271672725677, -0.06080298125743866, 0.520150363445282, -0.3445744812488556, -0.28147077560424805, -0.3809962868690491, 0.3529355227947235, 0.3962549567222595, -0.7678647637367249)\n15\tWrappedArray(-0.4477807283401489, 0.2521573603153229, -0.05111051723361015, 0.5163428783416748, -0.36239027976989746, -0.26402318477630615, -0.4083215296268463, 0.38588351011276245, 0.4006681442260742, -0.7523483037948608)\n16\tWrappedArray(-0.34379714727401733, 0.2963557541370392, -0.09800387173891068, 0.5042558908462524, -0.3564147353172302, -0.2657952308654785, -0.35854610800743103, 0.3934098780155182, 0.4400072991847992, -0.7815104126930237)\n17\tWrappedArray(-0.4306320548057556, 0.250895619392395, -0.0724450945854187, 0.49703967571258545, -0.3332405984401703, -0.3036646842956543, -0.3642120361328125, 0.3623393177986145, 0.46109360456466675, -0.7692660093307495)\n18\tWrappedArray(-0.28141799569129944, 0.3016318082809448, 0.27619048953056335, 0.6268942952156067, -0.4603566825389862, -0.37292715907096863, -0.28304558992385864, 0.23825795948505402, 0.2516416311264038, -0.7627565860748291)\n19\tWrappedArray(0.2108031064271927, -0.042094938457012177, 0.4741177558898926, 0.6939403414726257, 0.12327690422534943, -0.01541726104915142, -0.33342427015304565, -0.1761029064655304, -0.5573236346244812, 0.07159414142370224)\n20\tWrappedArray(-0.19507436454296112, 0.3128899037837982, 0.1262342482805252, 0.5776459574699402, -0.6066442131996155, -0.22525043785572052, -0.25189101696014404, 0.5537213087081909, 0.32449424266815186, -0.7364267110824585)\n21\tWrappedArray(-0.3645913302898407, 0.36355525255203247, -0.00305375037714839, 0.623849630355835, -0.4522755444049835, -0.10973397642374039, -0.38233235478401184, 0.2191627025604248, 0.3097892701625824, -0.8775742053985596)\n22\tWrappedArray(-0.3524969518184662, 0.3878224790096283, -0.18207409977912903, 0.30234578251838684, -0.4816392660140991, -0.0534086748957634, -0.29393717646598816, 0.4878041744232178, 0.5717175602912903, -0.5332997441291809)\n23\tWrappedArray(-0.4447766840457916, 0.40978020429611206, -0.20876941084861755, 0.2600848972797394, -0.41066285967826843, -0.022024018689990044, -0.23761087656021118, 0.4726729094982147, 0.5796533823013306, -0.5448131561279297)\n24\tWrappedArray(-0.15555205941200256, 0.11306346952915192, 0.23937848210334778, 0.688724160194397, -0.6198500394821167, -0.21234340965747833, -0.275878369808197, 0.25766050815582275, -0.02011236548423767, -0.8413711786270142)\n25\tWrappedArray(-0.06827795505523682, 0.28666043281555176, 0.07797735929489136, 0.6636866331100464, 0.02059285342693329, -0.244264617562294, -0.7074561715126038, 0.4410501718521118, -0.14880113303661346, -0.5079558491706848)\n26\tWrappedArray(-0.167924702167511, 0.03135865554213524, -0.0016733239172026515, 0.5711120963096619, -0.027571363374590874, -0.3880230486392975, -0.3918154537677765, 0.10399629175662994, 0.09871851652860641, -0.8118966221809387)\n27\tWrappedArray(-0.14922930300235748, 0.25408291816711426, -0.10680059343576431, 0.5427180528640747, -0.4865078330039978, -0.2812249958515167, -0.43463677167892456, 0.337194561958313, 0.44763967394828796, -0.6452186703681946)\n28\tWrappedArray(-0.24450650811195374, 0.26194149255752563, 0.19911471009254456, 0.5935252904891968, -0.576793909072876, -0.28265222907066345, -0.34928902983665466, 0.4449510872364044, 0.18617096543312073, -0.7643651962280273)\n29\tWrappedArray(0.05560562387108803, 9.302187827415764E-4, 0.29745620489120483, 0.9528858065605164, -0.13744916021823883, -0.05657631903886795, -0.5191999673843384, -0.21946202218532562, -0.4324529469013214, -0.5381625890731812)\n30\tWrappedArray(-0.167924702167511, 0.03135865554213524, -0.0016733239172026515, 0.5711120963096619, -0.027571363374590874, -0.3880230486392975, -0.3918154537677765, 0.10399629175662994, 0.09871851652860641, -0.8118966221809387)\n31\tWrappedArray(-0.3988303542137146, 0.4499322772026062, -0.06931257247924805, 0.5526285171508789, -0.5853371620178223, -0.22361955046653748, 0.018221575766801834, 0.3179306983947754, 0.08478786796331406, -0.5499700307846069)\n32\tWrappedArray(-0.06810690462589264, 0.11201746761798859, -0.038214974105358124, 0.6497825384140015, -0.1528027355670929, -0.42732444405555725, -0.4044185280799866, 0.1158110573887825, 0.18604017794132233, -0.7385824918746948)\n33\tWrappedArray(-0.24201756715774536, 0.22474101185798645, 0.3010058104991913, 0.598970353603363, -0.48870810866355896, -0.3302156925201416, -0.5694736838340759, 0.6495627164840698, 0.018127456307411194, -0.651386559009552)\n34\tWrappedArray(-0.10331905633211136, 0.25928106904029846, 0.1555107980966568, 0.5812624096870422, 0.022787291556596756, -0.34078070521354675, -0.7095964550971985, 0.4801620543003082, -0.0961529091000557, -0.5368689894676208)\n35\tWrappedArray(0.03329966589808464, -0.004344477318227291, 0.32680660486221313, 0.9692972898483276, -0.14726096391677856, -0.09987714886665344, -0.5514270663261414, -0.18236549198627472, -0.38754332065582275, -0.5314760804176331)\n36\tWrappedArray(0.0925765261054039, 0.0010854190913960338, 0.2979763448238373, 0.9411088228225708, -0.16006489098072052, -0.010541564784944057, -0.4868190288543701, -0.2652944326400757, -0.44162896275520325, -0.5353177189826965)\n37\tWrappedArray(-0.025721274316310883, 0.22115474939346313, 0.4448825418949127, 1.0076069831848145, -0.08525402098894119, -0.2227201759815216, -0.5381038784980774, 0.001703385030850768, -0.3359225392341614, -0.5878482460975647)\n38\tWrappedArray(-0.6856234073638916, -0.23216959834098816, 0.30719879269599915, 0.40507349371910095, -0.04543524235486984, -0.4830917716026306, -0.4388948678970337, 0.11187726259231567, 0.16143940389156342, -0.7413422465324402)\n39\tWrappedArray(-0.12850230932235718, 0.33924320340156555, 0.16214388608932495, 0.7603541016578674, -0.23976455628871918, -0.5025349259376526, -0.3224182724952698, 0.11219217628240585, 0.07804279029369354, -0.67563796043396)\n40\tWrappedArray(0.008327380754053593, 0.28700071573257446, 0.5010725855827332, 1.0031681060791016, -0.08282437175512314, -0.3298179805278778, -0.5572864413261414, 0.2536053955554962, -0.2864028811454773, -0.4679054617881775)\n41\tWrappedArray(0.05560562387108803, 9.302187827415764E-4, 0.29745620489120483, 0.9528858065605164, -0.13744916021823883, -0.05657631903886795, -0.5191999673843384, -0.21946202218532562, -0.4324529469013214, -0.5381625890731812)\n42\tWrappedArray(-0.19625338912010193, 0.14061594009399414, 0.11701667308807373, 0.627216100692749, -0.584231436252594, -0.38379383087158203, -0.20342904329299927, 0.36433082818984985, 0.010681597515940666, -0.8214783072471619)\n43\tWrappedArray(-0.1301112174987793, 0.08157599717378616, 0.34735867381095886, 0.29975631833076477, -0.8546596765518188, -0.05996670573949814, 0.03716343268752098, 0.43159738183021545, -0.046923618763685226, -0.4118598997592926)\n44\tWrappedArray(-0.1588667631149292, 0.31366273760795593, 0.2020890712738037, 0.7599373459815979, -0.40069422125816345, -0.2862909138202667, -0.34360191226005554, 0.1295052170753479, 0.03553452715277672, -0.7839604020118713)\n45\tWrappedArray(-0.8167394399642944, -0.3250980079174042, 0.42814961075782776, 0.08327947556972504, -0.11787068098783493, -0.38725703954696655, -0.24279271066188812, 0.1270662248134613, 0.19250436127185822, -0.34440624713897705)\n47\tWrappedArray(-0.14500407874584198, 0.07885697484016418, -0.23178912699222565, 0.6177809834480286, -0.33146482706069946, -0.489107221364975, -0.2328529953956604, 0.2377542406320572, -0.02326706424355507, -0.8279779553413391)\n49\tWrappedArray(-0.08258912712335587, 0.239365816116333, 0.2544047236442566, 0.8015906810760498, -0.37519827485084534, -0.2818160355091095, -0.33428770303726196, 0.09449948370456696, -0.020202359184622765, -0.7703245878219604)\n50\tWrappedArray(-0.6048746109008789, 0.009590409696102142, 0.4191707968711853, 0.6668025255203247, -0.16814403235912323, -0.37603503465652466, -0.8399123549461365, 0.4359701871871948, -0.03599667549133301, -0.7796741724014282)\n51\tWrappedArray(-0.5954433679580688, -0.011168081313371658, 0.5389360785484314, 0.5055447816848755, -0.4214029312133789, -0.4729137122631073, -0.28918325901031494, 0.2557692527770996, 0.19641946256160736, -0.7541308999061584)\n52\tWrappedArray(-0.09284067153930664, 0.26293739676475525, 0.2622620165348053, 0.7043391466140747, -0.4031619429588318, -0.2947964370250702, -0.3468286097049713, -0.12109831720590591, 0.14403660595417023, -0.7984926104545593)\n53\tWrappedArray(0.014735545963048935, 0.12828105688095093, -0.04945451393723488, 0.6971790790557861, -0.3168346583843231, -0.3333739638328552, -0.43732160329818726, 0.11432170867919922, 0.09551554173231125, -0.716899573802948)\n54\tWrappedArray(-0.13152624666690826, -0.017124826088547707, -0.17571601271629333, 0.6248166561126709, -0.3677620589733124, -0.2672117352485657, -0.27814269065856934, 0.06448439508676529, -0.13932186365127563, -0.9181841611862183)\n56\tWrappedArray(-0.05962496995925903, -0.28632044792175293, 0.2055845707654953, 0.40899842977523804, -0.021814865991473198, 0.02214500866830349, 0.34126731753349304, 0.2367633581161499, 0.5407774448394775, -0.47142183780670166)\n59\tWrappedArray(0.32289931178092957, 0.07905493676662445, 0.34544968605041504, 0.5260245203971863, -0.4252224564552307, -0.2499203085899353, -0.12939104437828064, 0.6028048992156982, 0.07713814079761505, -0.5282968282699585)\n60\tWrappedArray(-0.2475678026676178, 0.11423853039741516, 0.16238220036029816, 0.5942345261573792, -0.2649441659450531, -0.5162414312362671, -0.30463099479675293, 0.35681870579719543, 0.2442348450422287, -0.7272897362709045)\n61\tWrappedArray(-0.3208337128162384, 0.002677592448890209, 0.08471442013978958, 0.5746505260467529, -0.2915109694004059, -0.4623505175113678, -0.4158332049846649, 0.12974244356155396, 0.2502904236316681, -0.7142737507820129)\n62\tWrappedArray(0.03624212369322777, 0.31895023584365845, 0.22440610826015472, 0.7029616236686707, -0.21216514706611633, -0.32854288816452026, -0.4773132801055908, 0.5226541757583618, 0.01932278648018837, -0.6797628402709961)\n63\tWrappedArray(0.06136373057961464, 0.2709948718547821, 0.14768391847610474, 0.6887113451957703, -0.21344327926635742, -0.34902051091194153, -0.49665817618370056, 0.5545458793640137, 0.03386346250772476, -0.6654790043830872)\n64\tWrappedArray(0.13758553564548492, 0.12649588286876678, 0.34112536907196045, 1.0588291883468628, -0.0968618094921112, -0.36693835258483887, -0.5470615029335022, -0.05932427942752838, -0.24613267183303833, -0.4944850206375122)\n65\tWrappedArray(-0.24366962909698486, -0.09388603270053864, -0.025118744000792503, 0.4097338616847992, -0.5697855353355408, -0.31673505902290344, -0.4517820179462433, 0.013232502155005932, 0.3258446156978607, -0.5882519483566284)\n66\tWrappedArray(0.12586575746536255, 0.40491917729377747, 0.09785541892051697, 0.450912743806839, 0.09707479178905487, -0.1272643506526947, -0.6650867462158203, 0.6347675919532776, -0.17169277369976044, -0.24240076541900635)\n67\tWrappedArray(0.013044989667832851, 0.1921636462211609, 0.13338856399059296, 0.6542652249336243, -0.07150421291589737, -0.18585944175720215, -0.7196194529533386, 0.4920009672641754, -0.23645544052124023, -0.4629349112510681)\n68\tWrappedArray(-0.2716119587421417, 0.03002968244254589, 0.30040717124938965, 0.27900364995002747, -0.022070256993174553, -0.5503411889076233, -0.49595969915390015, 0.3123537003993988, 0.09183589369058609, -0.5801337957382202)\n69\tWrappedArray(-0.19009090960025787, 0.1988692283630371, 0.0964030921459198, 0.6103183031082153, -0.7210771441459656, -0.23884016275405884, -0.25137439370155334, 0.3541732728481293, 0.08976130187511444, -0.6990015506744385)\n70\tWrappedArray(0.009259778074920177, 0.07667741924524307, -0.006626259069889784, 0.6249074935913086, -0.47099769115448, -0.40737247467041016, -0.19005843997001648, 0.5011422634124756, -0.009464635513722897, -0.8390084505081177)\n72\tWrappedArray(0.12586575746536255, 0.40491917729377747, 0.09785541892051697, 0.450912743806839, 0.09707479178905487, -0.1272643506526947, -0.6650867462158203, 0.6347675919532776, -0.17169277369976044, -0.24240076541900635)\n73\tWrappedArray(0.2108031064271927, -0.042094938457012177, 0.4741177558898926, 0.6939403414726257, 0.12327690422534943, -0.01541726104915142, -0.33342427015304565, -0.1761029064655304, -0.5573236346244812, 0.07159414142370224)\n74\tWrappedArray(-0.07966942340135574, 0.051505398005247116, -0.014489254914224148, 0.6898952126502991, -0.2644991874694824, -0.1943882703781128, -0.4300067722797394, -0.027526037767529488, -0.0271692406386137, -0.8362699747085571)\n75\tWrappedArray(0.2108031064271927, -0.042094938457012177, 0.4741177558898926, 0.6939403414726257, 0.12327690422534943, -0.01541726104915142, -0.33342427015304565, -0.1761029064655304, -0.5573236346244812, 0.07159414142370224)\n76\tWrappedArray(-0.1301112174987793, 0.08157599717378616, 0.34735867381095886, 0.29975631833076477, -0.8546596765518188, -0.05996670573949814, 0.03716343268752098, 0.43159738183021545, -0.046923618763685226, -0.4118598997592926)\n77\tWrappedArray(-0.21271562576293945, 0.3572525084018707, 0.07097850739955902, 0.7957770228385925, -0.47029024362564087, -0.30437910556793213, -0.25024503469467163, 0.06254646182060242, 0.013837293721735477, -0.7775560021400452)\n78\tWrappedArray(-0.1779230535030365, -0.024052195250988007, 0.1124124526977539, 0.700797438621521, -0.23895403742790222, -0.23945459723472595, -0.5467747449874878, 0.10550880432128906, -0.0666920393705368, -0.6393175721168518)\n79\tWrappedArray(-0.06802155077457428, 0.21838460862636566, 0.09178761392831802, 0.6686820983886719, -0.19118721783161163, -0.5143840909004211, -0.31546303629875183, 0.39565545320510864, 0.15590085089206696, -0.7038408517837524)\n81\tWrappedArray(-0.13160818815231323, 0.2681153416633606, 0.4996410012245178, 0.3169512450695038, -0.3099304437637329, -0.19502566754817963, -0.2708575427532196, -0.26125332713127136, 0.5229541063308716, -0.44517162442207336)\n"
      },
      "dateCreated": "Mar 1, 2016 8:46:57 PM",
      "dateStarted": "May 1, 2016 4:43:08 AM",
      "dateFinished": "May 1, 2016 4:43:09 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Enriched ItemFactors Matrix",
      "text": "val enrichedItemFactorsDF \u003d itemFactorsDF\n  .join(itemsDF, $\"items.itemId\" \u003d\u003d\u003d $\"itemFactors.itemId\")\n  .select($\"items.itemId\", $\"title\", $\"tags\", $\"itemFactors\", $\"img\")\n  .sort($\"items.itemId\")\n  .as(\"enrichedItemFactors\")\n\nz.show(enrichedItemFactorsDF)",
      "dateUpdated": "May 1, 2016 4:42:50 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461098265813_1981370856",
      "id": "20160419-203745_842155819",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "itemId\ttitle\ttags\titemFactors\timg\n1\tApache Cassandra\tWrappedArray(Database, NoSQL, Java, Eventually Consistent, Transactional)\tWrappedArray(-0.2544817328453064, 0.3306563198566437, 0.20086553692817688, 0.6203413605690002, -0.4215177893638611, -0.34924983978271484, -0.2699334919452667, 0.31765225529670715, 0.18379928171634674, -0.8080863356590271)\timg/software/cassandra.png\n2\tTachyon\tWrappedArray(Distributed Cache, Object Store, S3, Swift, HDFS)\tWrappedArray(-0.3467819392681122, 0.21429969370365143, 0.19737191498279572, 0.6993507146835327, -0.10256211459636688, -0.5389225482940674, -0.40505194664001465, 0.23032940924167633, 0.0660889595746994, -0.7030198574066162)\timg/software/tachyon.png\n3\tApache Ambari\tWrappedArray(Cluster Provision, Hadoop, Cluster Monitoring, REST API, Metrics, Alerts)\tWrappedArray(-0.20722106099128723, 0.10304368287324905, -0.0076145208440721035, 0.7297975420951843, 0.05557956174015999, -0.6476613879203796, -0.41754716634750366, 0.1527077555656433, -0.06424692273139954, -0.5052968263626099)\timg/software/ambari.png\n5\tMicrosft Azure\tWrappedArray(Cloud Provider, Microsoft)\tWrappedArray(-0.17288987338542938, -0.09216193854808807, -0.3562871813774109, 0.41202354431152344, -0.417449951171875, -0.3752983808517456, -0.041601430624723434, 0.24795033037662506, -0.2367670238018036, -0.8180360198020935)\timg/software/azure.png\n6\tApache Flink\tWrappedArray(Data Processing, Java, Scala, SQL, DataFrame, Table, Streaming Analytics, Batch Analytics, Machine Learning, Graph Analytics, Approximations, Sampling)\tWrappedArray(0.2757564187049866, -0.09894173592329025, -0.03982746601104736, 0.21588049829006195, -0.8419528007507324, -0.10625704377889633, 0.07068789750337601, 0.3800024390220642, -0.27186456322669983, -0.45293402671813965)\timg/software/flink.png\n7\tApache Spark\tWrappedArray(Data Processing, Java, Scala, SQL, R, Python, DataFrame, Table, DataStream, Streaming Analytics, Batch Analytics, Machine Learning, Graph Analytics, Approximations, Sampling, Lazy)\tWrappedArray(-0.2088037133216858, 0.08837217092514038, 0.1401902586221695, 0.586890697479248, -0.5864546298980713, -0.4123528301715851, -0.21422035992145538, 0.4585816264152527, 0.028453268110752106, -0.8172956705093384)\timg/software/spark.png\n8\tApache Flume\tWrappedArray(Library, Java, Log Collection)\tWrappedArray(-0.4067160487174988, 0.31866779923439026, -0.13674496114253998, 0.5642879605293274, -0.34001725912094116, -0.2086871862411499, -0.43420684337615967, 0.3600340485572815, 0.39416229724884033, -0.7362350225448608)\timg/software/flume.png\n9\tApache Giraph\tWrappedArray(Library, Java, Graph Analytics, Batch)\tWrappedArray(-0.5284776091575623, 0.30651891231536865, 0.027208276093006134, 0.3932998478412628, -0.37426838278770447, -0.28111594915390015, -0.25837740302085876, 0.4662160277366638, 0.4730754494667053, -0.6607657670974731)\timg/software/giraph.png\n10\tApache HDFS\tWrappedArray(File System, Hadoop, Java)\tWrappedArray(-0.4028571546077728, 0.33473578095436096, -0.10545060783624649, 0.5716454386711121, -0.37175559997558594, -0.27986714243888855, -0.3302808701992035, 0.37447473406791687, 0.3290669620037079, -0.7604433298110962)\timg/software/hdfs.png\n11\tApache YARN\tWrappedArray(Cluster Resource Manager, Hadoop, Java)\tWrappedArray(-0.3610791265964508, 0.32083868980407715, -0.10683809965848923, 0.5951521396636963, -0.3992898166179657, -0.24988125264644623, -0.35339656472206116, 0.3674047291278839, 0.3049244284629822, -0.7546535730361938)\timg/software/yarn.png\n12\tApache HBase\tWrappedArray(Database, Hadoop, NoSQL, Java, Eventually Consistent)\tWrappedArray(-0.17633269727230072, 0.22482390701770782, 0.02697460912168026, 0.7031391263008118, -0.08430144190788269, -0.6122434139251709, -0.35374510288238525, 0.27703356742858887, 0.09921126812696457, -0.6116108298301697)\timg/software/hbase.png\n13\tApache MapReduce\tWrappedArray(Data Processing, Hadoop, Java, Python)\tWrappedArray(-0.12670505046844482, 0.1296645849943161, -0.032141201198101044, 0.7340179085731506, -0.038395076990127563, -0.6213045716285706, -0.41299572587013245, 0.15434490144252777, 0.061208389699459076, -0.5958877205848694)\timg/software/mapreduce.png\n14\tApache Hive\tWrappedArray(Data Processing, Hadoop, HiveQL, SQL, Query Processing, Java, MapReduce)\tWrappedArray(-0.4437881410121918, 0.24218271672725677, -0.06080298125743866, 0.520150363445282, -0.3445744812488556, -0.28147077560424805, -0.3809962868690491, 0.3529355227947235, 0.3962549567222595, -0.7678647637367249)\timg/software/hive.png\n15\tHortonworks\tWrappedArray(Distribution, Hadoop, Spark, Kafka)\tWrappedArray(-0.4477807283401489, 0.2521573603153229, -0.05111051723361015, 0.5163428783416748, -0.36239027976989746, -0.26402318477630615, -0.4083215296268463, 0.38588351011276245, 0.4006681442260742, -0.7523483037948608)\timg/software/hortonworks.png\n16\tApache HUE\tWrappedArray(UI, Hadoop, Cloudera, Ad Hoc, HiveQL, SQL, Data Import, Java)\tWrappedArray(-0.34379714727401733, 0.2963557541370392, -0.09800387173891068, 0.5042558908462524, -0.3564147353172302, -0.2657952308654785, -0.35854610800743103, 0.3934098780155182, 0.4400072991847992, -0.7815104126930237)\timg/software/hue.png\n17\tApache Impala\tWrappedArray(Data Processing, Query Processing, SQL, C++, Batch Analytics)\tWrappedArray(-0.4306320548057556, 0.250895619392395, -0.0724450945854187, 0.49703967571258545, -0.3332405984401703, -0.3036646842956543, -0.3642120361328125, 0.3623393177986145, 0.46109360456466675, -0.7692660093307495)\timg/software/impala.png\n18\tApache Kafka\tWrappedArray(Message Broker, Java, C++, REST API, Messaging, Publish Subscribe, Producer Consumer)\tWrappedArray(-0.28141799569129944, 0.3016318082809448, 0.27619048953056335, 0.6268942952156067, -0.4603566825389862, -0.37292715907096863, -0.28304558992385864, 0.23825795948505402, 0.2516416311264038, -0.7627565860748291)\timg/software/kafka.png\n19\tApache Lucene\tWrappedArray(Library, Search, Java, Python)\tWrappedArray(0.2108031064271927, -0.042094938457012177, 0.4741177558898926, 0.6939403414726257, 0.12327690422534943, -0.01541726104915142, -0.33342427015304565, -0.1761029064655304, -0.5573236346244812, 0.07159414142370224)\timg/software/lucene.png\n20\tApache Solr\tWrappedArray(Search Engine, Java, REST API, UI, Python, Ruby, XML, JSON)\tWrappedArray(-0.19507436454296112, 0.3128899037837982, 0.1262342482805252, 0.5776459574699402, -0.6066442131996155, -0.22525043785572052, -0.25189101696014404, 0.5537213087081909, 0.32449424266815186, -0.7364267110824585)\timg/software/solr.png\n21\tElasticSearch\tWrappedArray(Search Engine, Java, Python, REST API, Lucene, XML, JSON, Aggregations)\tWrappedArray(-0.3645913302898407, 0.36355525255203247, -0.00305375037714839, 0.623849630355835, -0.4522755444049835, -0.10973397642374039, -0.38233235478401184, 0.2191627025604248, 0.3097892701625824, -0.8775742053985596)\timg/software/elasticsearch.png\n22\tApache Mahout\tWrappedArray(Library, Machine Learning, Java)\tWrappedArray(-0.3524969518184662, 0.3878224790096283, -0.18207409977912903, 0.30234578251838684, -0.4816392660140991, -0.0534086748957634, -0.29393717646598816, 0.4878041744232178, 0.5717175602912903, -0.5332997441291809)\timg/software/mahout.png\n23\tApache Drill\tWrappedArray(Data Processing, Query Processing, SQL, Aggregations, Joins, Batch Analytics)\tWrappedArray(-0.4447766840457916, 0.40978020429611206, -0.20876941084861755, 0.2600848972797394, -0.41066285967826843, -0.022024018689990044, -0.23761087656021118, 0.4726729094982147, 0.5796533823013306, -0.5448131561279297)\timg/software/drill.png\n24\tApache Mesos\tWrappedArray(Cluster Resource Manager, Docker, Container)\tWrappedArray(-0.15555205941200256, 0.11306346952915192, 0.23937848210334778, 0.688724160194397, -0.6198500394821167, -0.21234340965747833, -0.275878369808197, 0.25766050815582275, -0.02011236548423767, -0.8413711786270142)\timg/software/mesos.png\n25\tApache Parquet\tWrappedArray(File Format, Columnar, Compression, Evolving Schema, Nested Schema, Java, C++, Python)\tWrappedArray(-0.06827795505523682, 0.28666043281555176, 0.07797735929489136, 0.6636866331100464, 0.02059285342693329, -0.244264617562294, -0.7074561715126038, 0.4410501718521118, -0.14880113303661346, -0.5079558491706848)\timg/software/parquet.png\n26\tApache ORC\tWrappedArray(File Format, Columnar, Compression, Evolving Schema, Nested Schema)\tWrappedArray(-0.167924702167511, 0.03135865554213524, -0.0016733239172026515, 0.5711120963096619, -0.027571363374590874, -0.3880230486392975, -0.3918154537677765, 0.10399629175662994, 0.09871851652860641, -0.8118966221809387)\timg/software/orc.png\n27\tApache Pig\tWrappedArray(Data Processing, Hadoop, HiveQL, SQL, Query Processing, Java, Lazy)\tWrappedArray(-0.14922930300235748, 0.25408291816711426, -0.10680059343576431, 0.5427180528640747, -0.4865078330039978, -0.2812249958515167, -0.43463677167892456, 0.337194561958313, 0.44763967394828796, -0.6452186703681946)\timg/software/pig.png\n28\tApache ZooKeeper\tWrappedArray(Distribured Coordinator, Paxos, RAFT, Hadoop, HiveQL, SQL, Query Processing, Java, Lazy)\tWrappedArray(-0.24450650811195374, 0.26194149255752563, 0.19911471009254456, 0.5935252904891968, -0.576793909072876, -0.28265222907066345, -0.34928902983665466, 0.4449510872364044, 0.18617096543312073, -0.7643651962280273)\timg/software/zookeeper.png\n29\tStanford CoreNLP\tWrappedArray(Library, NLP, Java, Text Analytics)\tWrappedArray(0.05560562387108803, 9.302187827415764E-4, 0.29745620489120483, 0.9528858065605164, -0.13744916021823883, -0.05657631903886795, -0.5191999673843384, -0.21946202218532562, -0.4324529469013214, -0.5381625890731812)\timg/software/corenlp.png\n30\tApache Tez\tWrappedArray(Data Processing, Hadoop, YARN, Query Processing, Java, Lazy, HiveQL, Pig, SQL)\tWrappedArray(-0.167924702167511, 0.03135865554213524, -0.0016733239172026515, 0.5711120963096619, -0.027571363374590874, -0.3880230486392975, -0.3918154537677765, 0.10399629175662994, 0.09871851652860641, -0.8118966221809387)\timg/software/tez.png\n31\tApache Storm\tWrappedArray(Streaming, Java)\tWrappedArray(-0.3988303542137146, 0.4499322772026062, -0.06931257247924805, 0.5526285171508789, -0.5853371620178223, -0.22361955046653748, 0.018221575766801834, 0.3179306983947754, 0.08478786796331406, -0.5499700307846069)\timg/software/storm.png\n32\tApache Sqoop\tWrappedArray(Data Import, Hadoop, Java)\tWrappedArray(-0.06810690462589264, 0.11201746761798859, -0.038214974105358124, 0.6497825384140015, -0.1528027355670929, -0.42732444405555725, -0.4044185280799866, 0.1158110573887825, 0.18604017794132233, -0.7385824918746948)\timg/software/sqoop.png\n33\tApache Oozie\tWrappedArray(Workflow, Hadoop, Java, UI)\tWrappedArray(-0.24201756715774536, 0.22474101185798645, 0.3010058104991913, 0.598970353603363, -0.48870810866355896, -0.3302156925201416, -0.5694736838340759, 0.6495627164840698, 0.018127456307411194, -0.651386559009552)\timg/software/oozie.png\n34\tApache Nifi\tWrappedArray(Workflow, Streaming, Message Broker, Java, UI)\tWrappedArray(-0.10331905633211136, 0.25928106904029846, 0.1555107980966568, 0.5812624096870422, 0.022787291556596756, -0.34078070521354675, -0.7095964550971985, 0.4801620543003082, -0.0961529091000557, -0.5368689894676208)\timg/software/nifi.png\n35\tNLTK\tWrappedArray(Library, NLP, Python, Text Analytics)\tWrappedArray(0.03329966589808464, -0.004344477318227291, 0.32680660486221313, 0.9692972898483276, -0.14726096391677856, -0.09987714886665344, -0.5514270663261414, -0.18236549198627472, -0.38754332065582275, -0.5314760804176331)\timg/software/nltk.png\n36\tSci-Kit Learn\tWrappedArray(Library, Python, Machine Learning)\tWrappedArray(0.0925765261054039, 0.0010854190913960338, 0.2979763448238373, 0.9411088228225708, -0.16006489098072052, -0.010541564784944057, -0.4868190288543701, -0.2652944326400757, -0.44162896275520325, -0.5353177189826965)\timg/software/scikit-learn.png\n37\tiPython/Jupyter\tWrappedArray(Notebook, Python, Java, Scala, R, Visualization, SQL)\tWrappedArray(-0.025721274316310883, 0.22115474939346313, 0.4448825418949127, 1.0076069831848145, -0.08525402098894119, -0.2227201759815216, -0.5381038784980774, 0.001703385030850768, -0.3359225392341614, -0.5878482460975647)\timg/software/ipython.png\n38\tApache Zeppelin\tWrappedArray(Notebook, Python, Java, Scala, R, HiveQL, Cassandra, Visualization, SQL)\tWrappedArray(-0.6856234073638916, -0.23216959834098816, 0.30719879269599915, 0.40507349371910095, -0.04543524235486984, -0.4830917716026306, -0.4388948678970337, 0.11187726259231567, 0.16143940389156342, -0.7413422465324402)\timg/software/zeppelin.png\n39\tTableau\tWrappedArray(BI, UI, Visualization, SQL)\tWrappedArray(-0.12850230932235718, 0.33924320340156555, 0.16214388608932495, 0.7603541016578674, -0.23976455628871918, -0.5025349259376526, -0.3224182724952698, 0.11219217628240585, 0.07804279029369354, -0.67563796043396)\timg/software/tableau.png\n40\tR\tWrappedArray(Programming Language, Dynamic Typing, Interpreted)\tWrappedArray(0.008327380754053593, 0.28700071573257446, 0.5010725855827332, 1.0031681060791016, -0.08282437175512314, -0.3298179805278778, -0.5572864413261414, 0.2536053955554962, -0.2864028811454773, -0.4679054617881775)\timg/software/r.png\n41\tSQL\tWrappedArray(Programming Language, SQL, RDBMS, Interpreted)\tWrappedArray(0.05560562387108803, 9.302187827415764E-4, 0.29745620489120483, 0.9528858065605164, -0.13744916021823883, -0.05657631903886795, -0.5191999673843384, -0.21946202218532562, -0.4324529469013214, -0.5381625890731812)\timg/software/sql.png\n42\tScala\tWrappedArray(Programming Language, Functional, Java, Static Typing, Compiled)\tWrappedArray(-0.19625338912010193, 0.14061594009399414, 0.11701667308807373, 0.627216100692749, -0.584231436252594, -0.38379383087158203, -0.20342904329299927, 0.36433082818984985, 0.010681597515940666, -0.8214783072471619)\timg/software/scala.png\n43\tJava\tWrappedArray(Programming Language, Object Oriented, Java, Static Typing, Compiled)\tWrappedArray(-0.1301112174987793, 0.08157599717378616, 0.34735867381095886, 0.29975631833076477, -0.8546596765518188, -0.05996670573949814, 0.03716343268752098, 0.43159738183021545, -0.046923618763685226, -0.4118598997592926)\timg/software/java.png\n44\tPython\tWrappedArray(Programming Language, Dynamic Typing, Interpreted)\tWrappedArray(-0.1588667631149292, 0.31366273760795593, 0.2020890712738037, 0.7599373459815979, -0.40069422125816345, -0.2862909138202667, -0.34360191226005554, 0.1295052170753479, 0.03553452715277672, -0.7839604020118713)\timg/software/python.png\n45\tPresto\tWrappedArray(Data Processing, Query Processing, Java, SQL, Machine Learning)\tWrappedArray(-0.8167394399642944, -0.3250980079174042, 0.42814961075782776, 0.08327947556972504, -0.11787068098783493, -0.38725703954696655, -0.24279271066188812, 0.1270662248134613, 0.19250436127185822, -0.34440624713897705)\timg/software/presto.png\n47\tCloudera\tWrappedArray(Distribution, Hadoop, Spark, Kafka)\tWrappedArray(-0.14500407874584198, 0.07885697484016418, -0.23178912699222565, 0.6177809834480286, -0.33146482706069946, -0.489107221364975, -0.2328529953956604, 0.2377542406320572, -0.02326706424355507, -0.8279779553413391)\timg/software/cloudera.png\n49\tAmazon Web Services\tWrappedArray(Cloud Provider, AWS)\tWrappedArray(-0.08258912712335587, 0.239365816116333, 0.2544047236442566, 0.8015906810760498, -0.37519827485084534, -0.2818160355091095, -0.33428770303726196, 0.09449948370456696, -0.020202359184622765, -0.7703245878219604)\timg/software/aws.png\n50\tGoogle Cloud Platform\tWrappedArray(Cloud Provider, Google)\tWrappedArray(-0.6048746109008789, 0.009590409696102142, 0.4191707968711853, 0.6668025255203247, -0.16814403235912323, -0.37603503465652466, -0.8399123549461365, 0.4359701871871948, -0.03599667549133301, -0.7796741724014282)\timg/software/googlecloud.png\n51\tRedis\tWrappedArray(Distributed Cache, Key Value Store, HyperLogLog, Approximations, Probabilistic Data Structures, UDAF)\tWrappedArray(-0.5954433679580688, -0.011168081313371658, 0.5389360785484314, 0.5055447816848755, -0.4214029312133789, -0.4729137122631073, -0.28918325901031494, 0.2557692527770996, 0.19641946256160736, -0.7541308999061584)\timg/software/redis.png\n52\tJSON\tWrappedArray(File Format, Key Value Store)\tWrappedArray(-0.09284067153930664, 0.26293739676475525, 0.2622620165348053, 0.7043391466140747, -0.4031619429588318, -0.2947964370250702, -0.3468286097049713, -0.12109831720590591, 0.14403660595417023, -0.7984926104545593)\timg/software/json.png\n53\tXML\tWrappedArray(File Format, Key Value Store)\tWrappedArray(0.014735545963048935, 0.12828105688095093, -0.04945451393723488, 0.6971790790557861, -0.3168346583843231, -0.3333739638328552, -0.43732160329818726, 0.11432170867919922, 0.09551554173231125, -0.716899573802948)\timg/software/xml.png\n54\tMongoDB\tWrappedArray(Database, Document Store, Key Value Store, NoSQL, JSON, Eventually Consistent)\tWrappedArray(-0.13152624666690826, -0.017124826088547707, -0.17571601271629333, 0.6248166561126709, -0.3677620589733124, -0.2672117352485657, -0.27814269065856934, 0.06448439508676529, -0.13932186365127563, -0.9181841611862183)\timg/software/mongodb.png\n56\tMicroStrategy\tWrappedArray(BI, UI, Visualization, SQL)\tWrappedArray(-0.05962496995925903, -0.28632044792175293, 0.2055845707654953, 0.40899842977523804, -0.021814865991473198, 0.02214500866830349, 0.34126731753349304, 0.2367633581161499, 0.5407774448394775, -0.47142183780670166)\timg/software/microstrategy.png\n59\tOracle\tWrappedArray(Database, SQL, RDBMS, Transactional)\tWrappedArray(0.32289931178092957, 0.07905493676662445, 0.34544968605041504, 0.5260245203971863, -0.4252224564552307, -0.2499203085899353, -0.12939104437828064, 0.6028048992156982, 0.07713814079761505, -0.5282968282699585)\timg/software/oracle.png\n60\tMySQL\tWrappedArray(Database, SQL, RDBMS, Transactional)\tWrappedArray(-0.2475678026676178, 0.11423853039741516, 0.16238220036029816, 0.5942345261573792, -0.2649441659450531, -0.5162414312362671, -0.30463099479675293, 0.35681870579719543, 0.2442348450422287, -0.7272897362709045)\timg/software/mysql.png\n61\tSpark ML/MLlib\tWrappedArray(Library, Spark, Machine Learning)\tWrappedArray(-0.3208337128162384, 0.002677592448890209, 0.08471442013978958, 0.5746505260467529, -0.2915109694004059, -0.4623505175113678, -0.4158332049846649, 0.12974244356155396, 0.2502904236316681, -0.7142737507820129)\timg/software/spark-ml.png\n62\tSpark Streaming\tWrappedArray(Library, Spark, Streaming)\tWrappedArray(0.03624212369322777, 0.31895023584365845, 0.22440610826015472, 0.7029616236686707, -0.21216514706611633, -0.32854288816452026, -0.4773132801055908, 0.5226541757583618, 0.01932278648018837, -0.6797628402709961)\timg/software/spark-streaming.png\n63\tSpark SQL\tWrappedArray(Library, Spark, HiveQL, SQL)\tWrappedArray(0.06136373057961464, 0.2709948718547821, 0.14768391847610474, 0.6887113451957703, -0.21344327926635742, -0.34902051091194153, -0.49665817618370056, 0.5545458793640137, 0.03386346250772476, -0.6654790043830872)\timg/software/spark-sql.png\n64\tCSV\tWrappedArray(File Format)\tWrappedArray(0.13758553564548492, 0.12649588286876678, 0.34112536907196045, 1.0588291883468628, -0.0968618094921112, -0.36693835258483887, -0.5470615029335022, -0.05932427942752838, -0.24613267183303833, -0.4944850206375122)\timg/software/csv.png\n65\tDeep Learning 4J\tWrappedArray(Library, Deep Learning, Neural Networks)\tWrappedArray(-0.24366962909698486, -0.09388603270053864, -0.025118744000792503, 0.4097338616847992, -0.5697855353355408, -0.31673505902290344, -0.4517820179462433, 0.013232502155005932, 0.3258446156978607, -0.5882519483566284)\timg/software/deeplearning4j.png\n66\tRedshift\tWrappedArray(Database, Columnar, Data Warehouse, AWS, SQL)\tWrappedArray(0.12586575746536255, 0.40491917729377747, 0.09785541892051697, 0.450912743806839, 0.09707479178905487, -0.1272643506526947, -0.6650867462158203, 0.6347675919532776, -0.17169277369976044, -0.24240076541900635)\timg/software/redshift.png\n67\tKinesis\tWrappedArray(Library, Streaming, AWS)\tWrappedArray(0.013044989667832851, 0.1921636462211609, 0.13338856399059296, 0.6542652249336243, -0.07150421291589737, -0.18585944175720215, -0.7196194529533386, 0.4920009672641754, -0.23645544052124023, -0.4629349112510681)\timg/software/kinesis.png\n68\tDynamoDB\tWrappedArray(Database, NoSQL, AWS, SQL, Approximations, Eventually Consistent)\tWrappedArray(-0.2716119587421417, 0.03002968244254589, 0.30040717124938965, 0.27900364995002747, -0.022070256993174553, -0.5503411889076233, -0.49595969915390015, 0.3123537003993988, 0.09183589369058609, -0.5801337957382202)\timg/software/dynamodb.png\n69\tSpark GraphX\tWrappedArray(Library, Graph Analytics, Spark)\tWrappedArray(-0.19009090960025787, 0.1988692283630371, 0.0964030921459198, 0.6103183031082153, -0.7210771441459656, -0.23884016275405884, -0.25137439370155334, 0.3541732728481293, 0.08976130187511444, -0.6990015506744385)\timg/software/spark-graphx.png\n70\tSQL Server\tWrappedArray(Database, SQL, Microsoft, RDBMS, Transactional)\tWrappedArray(0.009259778074920177, 0.07667741924524307, -0.006626259069889784, 0.6249074935913086, -0.47099769115448, -0.40737247467041016, -0.19005843997001648, 0.5011422634124756, -0.009464635513722897, -0.8390084505081177)\timg/software/sqlserver.png\n72\tDato GraphLab Create\tWrappedArray(Library, UI, Graph Analytics, Machine Learning, Query Processing, Visualization)\tWrappedArray(0.12586575746536255, 0.40491917729377747, 0.09785541892051697, 0.450912743806839, 0.09707479178905487, -0.1272643506526947, -0.6650867462158203, 0.6347675919532776, -0.17169277369976044, -0.24240076541900635)\timg/software/graphlab.png\n73\tMemcached\tWrappedArray(Distributed Cache, Key Value Store, Java, Python, C++)\tWrappedArray(0.2108031064271927, -0.042094938457012177, 0.4741177558898926, 0.6939403414726257, 0.12327690422534943, -0.01541726104915142, -0.33342427015304565, -0.1761029064655304, -0.5573236346244812, 0.07159414142370224)\timg/software/memcached.png\n74\tNeo4j\tWrappedArray(Library, Graph Analytics, Java)\tWrappedArray(-0.07966942340135574, 0.051505398005247116, -0.014489254914224148, 0.6898952126502991, -0.2644991874694824, -0.1943882703781128, -0.4300067722797394, -0.027526037767529488, -0.0271692406386137, -0.8362699747085571)\timg/software/neo4j.png\n75\tPostgres\tWrappedArray(Database, SQL, RDBMS, Transactional)\tWrappedArray(0.2108031064271927, -0.042094938457012177, 0.4741177558898926, 0.6939403414726257, 0.12327690422534943, -0.01541726104915142, -0.33342427015304565, -0.1761029064655304, -0.5573236346244812, 0.07159414142370224)\timg/software/postgres.png\n76\tProtobuffers\tWrappedArray(File Format, Evolving Schema, Nested Schema)\tWrappedArray(-0.1301112174987793, 0.08157599717378616, 0.34735867381095886, 0.29975631833076477, -0.8546596765518188, -0.05996670573949814, 0.03716343268752098, 0.43159738183021545, -0.046923618763685226, -0.4118598997592926)\timg/software/protobuffers.png\n77\tS3\tWrappedArray(File System, Object Store, AWS, Eventually Consistent)\tWrappedArray(-0.21271562576293945, 0.3572525084018707, 0.07097850739955902, 0.7957770228385925, -0.47029024362564087, -0.30437910556793213, -0.25024503469467163, 0.06254646182060242, 0.013837293721735477, -0.7775560021400452)\timg/software/s3.png\n78\tTensor Flow\tWrappedArray(Data Processing, Deep Learning, Neural Networks)\tWrappedArray(-0.1779230535030365, -0.024052195250988007, 0.1124124526977539, 0.700797438621521, -0.23895403742790222, -0.23945459723472595, -0.5467747449874878, 0.10550880432128906, -0.0666920393705368, -0.6393175721168518)\timg/software/tensorflow.png\n79\tTitan GraphDB\tWrappedArray(Database, Graph, Graph Analytics, Java, Transactional)\tWrappedArray(-0.06802155077457428, 0.21838460862636566, 0.09178761392831802, 0.6686820983886719, -0.19118721783161163, -0.5143840909004211, -0.31546303629875183, 0.39565545320510864, 0.15590085089206696, -0.7038408517837524)\timg/software/titandb.png\n81\tVertica\tWrappedArray(Database, Data Warehouse, SQL)\tWrappedArray(-0.13160818815231323, 0.2681153416633606, 0.4996410012245178, 0.3169512450695038, -0.3099304437637329, -0.19502566754817963, -0.2708575427532196, -0.26125332713127136, 0.5229541063308716, -0.44517162442207336)\timg/software/vertica.png\n"
      },
      "dateCreated": "Apr 19, 2016 8:37:45 PM",
      "dateStarted": "May 1, 2016 4:43:09 AM",
      "dateFinished": "May 1, 2016 4:43:11 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Write the User and item factor vectors to elasticSearch",
      "text": "val esConfig \u003d Map(\"pushdown\" -\u003e \"true\", \"es.nodes\" -\u003e \"127.0.0.1\", \"es.port\" -\u003e \"9200\")\n\nuserFactorsDF.select($\"userId\", $\"userFactors\")\n .sort($\"userId\" asc)\n .write.format(\"org.elasticsearch.spark.sql\")\n .mode(\"overwrite\")\n .options(esConfig)\n .save(\"advancedspark/user-factors-als\")\n \nenrichedItemFactorsDF.select($\"itemId\", $\"title\", $\"itemFactors\", $\"tags\", $\"img\")\n .sort($\"itemId\" asc)\n .write.format(\"org.elasticsearch.spark.sql\")\n .mode(\"overwrite\")\n .options(esConfig)\n .save(\"advancedspark/item-factors-als\")",
      "dateUpdated": "May 1, 2016 4:42:51 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1460932159717_2026735022",
      "id": "20160417-222919_647801278",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "esConfig: scala.collection.immutable.Map[String,String] \u003d Map(pushdown -\u003e true, es.nodes -\u003e 127.0.0.1, es.port -\u003e 9200)\nwarning: there were 1 feature warning(s); re-run with -feature for details\nwarning: there were 1 feature warning(s); re-run with -feature for details\n"
      },
      "dateCreated": "Apr 17, 2016 10:29:19 PM",
      "dateStarted": "May 1, 2016 4:43:09 AM",
      "dateFinished": "May 1, 2016 4:43:22 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Calculate Predicted Rating for a Given userId and ItemId - compare to above",
      "text": "////////////////////////////////////////////\n// TODO:  Must Update Item ID and User ID //\n////////////////////////////////////////////\nimport org.jblas.DoubleMatrix\nimport org.apache.spark.mllib.linalg.Vector\n\n// User 12663\nval givenUserId \u003d 12663\nval givenUserFactors \u003d userFactorsDF.select($\"userId\", $\"userFactors\")\n  .where($\"userId\" \u003d\u003d\u003d givenUserId)\n  .map(row \u003d\u003e row.getSeq[Double](1).toArray)\n  .collect()(0)\n\n// Item 7\nval givenItemId \u003d 7\nval givenItemFactors \u003d itemFactorsDF.select($\"itemId\", $\"itemFactors\")\n  .where($\"itemId\" \u003d\u003d\u003d givenItemId)\n  .map(row \u003d\u003e row.getSeq[Double](1).toArray)\n  .collect()(0)\n  \nval givenUserFactorsMatrix \u003d new DoubleMatrix(givenUserFactors)\nval givenItemFactorsMatrix \u003d new DoubleMatrix(givenItemFactors)\n\n// Take dot product of the User x Item vectors\n// This should equal the confidence value in the offline-generated matrix\nval confidence \u003d givenUserFactorsMatrix.dot(givenItemFactorsMatrix)\n\n////////////////////////////////////////////\n// TODO:  Must Update Item ID and User ID //\n////////////////////////////////////////////",
      "dateUpdated": "May 1, 2016 4:42:55 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456954812726_1681075178",
      "id": "20160302-214012_540640872",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.jblas.DoubleMatrix\nimport org.apache.spark.mllib.linalg.Vector\ngivenUserId: Int \u003d 12663\ngivenUserFactors: Array[Double] \u003d Array(-0.13906610012054443, 0.02493925206363201, -0.00783054530620575, 0.4296412765979767, -0.06806724518537521, -0.2791949212551117, -0.29498687386512756, 0.09946530312299728, 0.07616844028234482, -0.5582133531570435)\ngivenItemId: Int \u003d 7\ngivenItemFactors: Array[Double] \u003d Array(-0.2088037133216858, 0.08837217092514038, 0.1401902586221695, 0.586890697479248, -0.5864546298980713, -0.4123528301715851, -0.21422035992145538, 0.4585816264152527, 0.028453268110752106, -0.8172956705093384)\ngivenUserFactorsMatrix: org.jblas.DoubleMatrix \u003d [-0.139066; 0.024939; -0.007831; 0.429641; -0.068067; -0.279195; -0.294987; 0.099465; 0.076168; -0.558213]\ngivenItemFactorsMatrix: org.jblas.DoubleMatrix \u003d [-0.208804; 0.088372; 0.140190; 0.586891; -0.586455; -0.412353; -0.214220; 0.458582; 0.028453; -0.817296]\nconfidence: Double \u003d 1.0045390758759336\n"
      },
      "dateCreated": "Mar 2, 2016 9:40:12 PM",
      "dateStarted": "May 1, 2016 4:43:11 AM",
      "dateFinished": "May 1, 2016 4:43:24 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "dateUpdated": "May 1, 2016 4:42:57 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1460922825977_-689845777",
      "id": "20160417-195345_2022099383",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT"
      },
      "dateCreated": "Apr 17, 2016 7:53:45 PM",
      "dateStarted": "May 1, 2016 4:43:22 AM",
      "dateFinished": "May 1, 2016 4:43:24 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Live Recs/02: User-to-Item Collaborative Filter Recs (ALS)",
  "id": "2AUYFSKXN",
  "angularObjects": {
    "2ARR8UZDJ": [],
    "2AS9P7JSA": [],
    "2AR33ZMZJ": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}