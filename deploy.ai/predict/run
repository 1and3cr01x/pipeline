#!/bin/bash

start_model_server_python3 () {
    echo "PIO_MODEL_SERVER_PATH=$PIO_MODEL_SERVER_PATH"
    echo "PIO_MODEL_PATH=$PIO_MODEL_PATH"
    echo "PIO_MODEL_TYPE=$PIO_MODEL_TYPE"
    echo "PIO_MODEL_NAME=$PIO_MODEL_NAME"
    echo "PIO_MODEL_SERVER_PORT=$PIO_MODEL_SERVER_PORT"
    echo "PIO_MODEL_SERVER_PROMETHEUS_PORT=$PIO_MODEL_SERVER_PROMETHEUS_PORT"
    echo "PIO_MODEL_SERVER_TENSORFLOW_SERVING_PORT=$PIO_MODEL_SERVER_TENSORFLOW_SERVING_PORT"

    echo ""
    echo "Starting Python-based Model Server..."
    echo ""

    source activate $PIO_CONDA_ENV_NAME 

    cd $PIO_MODEL_PATH \
      && PYTHONPATH=$PIO_MODEL_PATH:$PYTHONPATH \
        $PIO_MODEL_SERVER_PATH/model_server_python3.py \
        --PIO_MODEL_TYPE=$PIO_MODEL_TYPE \
        --PIO_MODEL_NAME=$PIO_MODEL_NAME \
        --PIO_MODEL_SERVER_PORT=$PIO_MODEL_SERVER_PORT \
        --PIO_MODEL_SERVER_PROMETHEUS_PORT=$PIO_MODEL_SERVER_PROMETHEUS_PORT \
        --PIO_MODEL_SERVER_TENSORFLOW_SERVING_PORT=$PIO_MODEL_SERVER_TENSORFLOW_SERVING_PORT

    cd /root
}

start_model_server_jvm () {
    echo "PIO_MODEL_PATH=$PIO_MODEL_PATH"
    echo "PIO_MODEL_TYPE=$PIO_MODEL_TYPE"
    echo "PIO_MODEL_NAME=$PIO_MODEL_NAME"
    echo "PIO_MODEL_SERVER_PORT=$PIO_MODEL_SERVER_PORT"
    echo "PIO_MODEL_SERVER_TENSORFLOW_SERVING_PORT=$PIO_MODEL_SERVER_TENSORFLOW_SERVING_PORT"

    export JAVA_MAX_MEM_RATIO=85
    export JAVA_OPTIONS="$(sysutils/jvm-limits.sh)"

    echo ""
    echo "Starting JVM-based Model Server..."
    echo ""
    cd $PIO_MODEL_PATH \
      && java $JAVA_OPTIONS -Djava.security.egd=file:/dev/./urandom \
        -jar /root/lib/sbt-launch.jar \
        "run-main io.pipeline.prediction.jvm.PredictionServiceMain"
}

start_tensorflow_serving_in_background () {
    echo "PIO_MODEL_PATH=$PIO_MODEL_PATH"
    echo "PIO_MODEL_TYPE=$PIO_MODEL_TYPE"
    echo "PIO_MODEL_NAME=$PIO_MODEL_NAME"
    echo "PIO_MODEL_SERVER_TENSORFLOW_SERVING_PORT=$PIO_MODEL_SERVER_TENSORFLOW_SERVING_PORT"
    echo "PIO_MODEL_SERVER_TENSORFLOW_SERVING_REQUEST_BATCHING=$PIO_MODEL_SERVER_TENSORFLOW_SERVING_REQUEST_BATCHING"
    echo ""
    echo "Starting TensorFlow Serving..."
    echo ""
    tensorflow_model_server --port=$PIO_MODEL_SERVER_TENSORFLOW_SERVING_PORT \
        --model_name=$PIO_MODEL_NAME --model_base_path=$PIO_MODEL_PATH \
        --batching_parameters_file=/root/config/tf_serving/batching_config.txt \
        --enable_batching=$PIO_MODEL_SERVER_TENSORFLOW_SERVING_REQUEST_BATCHING \
        --file_system_poll_wait_seconds=5 &
    echo ""
    echo "...TensorFlow Serving Started!"
    echo ""
}

source sysutils/container-limits.sh

service nginx start

prometheus -config.file=/root/prometheus-1.7.1.linux-amd64/prometheus.yml &

service grafana-server start

[ -s /root/nvidia/nvidia-prometheus-stats.py ] \
  && python2 /root/nvidia/nvidia-prometheus-stats.py -u 1.0 -p 7070 &

echo "Required Environment Variables..."
echo "PIO_MODEL_PATH=$PIO_MODEL_PATH"
echo "PIO_MODEL_TYPE=$PIO_MODEL_TYPE"
echo "PIO_MODEL_NAME=$PIO_MODEL_NAME"

if [[ $PIO_MODEL_TYPE == "python3" ]] ||
   [[ $PIO_MODEL_TYPE == "keras" ]] ||
   [[ $PIO_MODEL_TYPE == "scikit" ]]; then

  start_model_server_python3
fi;

if [[ $PIO_MODEL_TYPE == "tensorflow" ]]; then

  start_tensorflow_serving_in_background 
  start_model_server_python3
fi;

if [[ $PIO_MODEL_TYPE == "spark" ]] ||
   [[ $PIO_MODEL_TYPE == "pmml" ]] ||
   [[ $PIO_MODEL_TYPE == "java" ]] ||
   [[ $PIO_MODEL_TYPE == "xgboost" ]] ||
   [[ $PIO_MODEL_TYPE == "r" ]]; then

  start_model_server_jvm
fi;
