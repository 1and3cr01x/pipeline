{
  "paragraphs": [
    {
      "title": "Normal Scala/Java Set",
      "text": "import com.madhukaraphatak.sizeof.SizeEstimator\n\nval memorySizeString \u003d SizeEstimator.estimate(\"abc\");\n\nval set \u003d (Set(1) ++ Set(2,3) ++ Set(3,4) ++ Set(5))\nval memorySizeSet \u003d SizeEstimator.estimate(set)",
      "dateUpdated": "Dec 26, 2015 10:49:54 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1450585060337_-1269629404",
      "id": "20151220-041740_860606599",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import com.madhukaraphatak.sizeof.SizeEstimator\nmemorySizeString: Long \u003d 48\nset: scala.collection.immutable.Set[Int] \u003d Set(5, 1, 2, 3, 4)\nmemorySizeSet: Long \u003d 312\n"
      },
      "dateCreated": "Dec 20, 2015 4:17:40 AM",
      "dateStarted": "Dec 26, 2015 1:15:54 AM",
      "dateFinished": "Dec 26, 2015 1:15:55 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Bloom Filter",
      "text": "import com.twitter.algebird.BloomFilterAggregator\n\nval bfAgg \u003d BloomFilterAggregator(5, 64, 0)\n\nval set \u003d (Set(1) ++ Set(2,3) ++ Set(3,4) ++ Set(5))\nval memorySizeSet \u003d SizeEstimator.estimate(set)\n\nval bfAggs \u003d bfAgg(List(\"1\")) ++ bfAgg(List(\"2\",\"3\")) ++ bfAgg(List(\"3\",\"4\")) ++ bfAgg(List(\"5\"))\nval memorySizeSet \u003d SizeEstimator.estimate(bfAggs)\n\nbfAggs.contains(\"3\")",
      "dateUpdated": "Dec 26, 2015 10:55:47 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1450587563774_1352590284",
      "id": "20151220-045923_327498017",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import com.twitter.algebird.BloomFilterAggregator\nbfAgg: com.twitter.algebird.BloomFilterAggregator \u003d BloomFilterAggregator(BloomFilterMonoid(5,64,0))\nset: scala.collection.immutable.Set[Int] \u003d Set(5, 1, 2, 3, 4)\nmemorySizeSet: Long \u003d 312\nbfAggs: com.twitter.algebird.BF \u003d \nBFSparse(\u003cfunction1\u003e, EWAHCompressedBitmap, size in bits \u003d 62 size in words \u003d 2\n0 0x00\n1 dirties\n,64)\nmemorySizeSet: Long \u003d 176\nres52: com.twitter.algebird.ApproximateBoolean \u003d ApproximateBoolean(true,0.9948010483959531)\n"
      },
      "dateCreated": "Dec 20, 2015 4:59:23 AM",
      "dateStarted": "Dec 26, 2015 10:55:47 PM",
      "dateFinished": "Dec 26, 2015 10:55:47 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1451170547010_292898462",
      "id": "20151226-225547_1023736822",
      "dateCreated": "Dec 26, 2015 10:55:47 PM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Approx/04: Algebird Bloom Filter (Contains)",
  "id": "2B89S6BYQ",
  "angularObjects": {
    "2ARR8UZDJ": [],
    "2AS9P7JSA": [],
    "2AR33ZMZJ": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}