{
  "paragraphs": [
    {
      "text": "val itemsDF \u003d sqlContext.read.format(\"json\")\n  .load(\"file:/root/pipeline/html/advancedspark.com/json/software.json\")\n  .select($\"id\", $\"title\", $\"category\", $\"description\")\n  .limit(1)",
      "dateUpdated": "Jan 28, 2016 8:51:03 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "id",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "title",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "id",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "title",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1452407914910_1583997153",
      "id": "20160110-063834_50383130",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "itemsDF: org.apache.spark.sql.DataFrame \u003d [id: bigint, title: string, category: string, description: string]\n"
      },
      "dateCreated": "Jan 10, 2016 6:38:34 AM",
      "dateStarted": "Jan 28, 2016 8:51:03 PM",
      "dateFinished": "Jan 28, 2016 8:51:31 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import com.databricks.spark.corenlp.CoreNLP\n\n// https://github.com/databricks/spark-corenlp\n\nval coreNLP \u003d new CoreNLP()\n  .setInputCol(\"description\")\n  .setOutputCol(\"corenlp\")\n  .setAnnotators(Array(\"tokenize\", \"ssplit\", \"pos\", \"lemma\"))\n  .setFlattenNestedFields(Array(\"sentence_token_lemma\"))\n  \nz.show(coreNLP.transform(itemsDF))",
      "dateUpdated": "Jan 28, 2016 8:51:48 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "id",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "title",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "id",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "title",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1452407914910_1583997153",
      "id": "20160110-063834_1389822814",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "id\ttitle\tcategory\tdescription\tcorenlp\n1\tApache Cassandra\tDatabase\tThe Apache Cassandra database is the right choice when you need scalability and high availability without compromising performance. Linear scalability and proven fault-tolerance on commodity hardware or cloud infrastructure make it the perfect platform for mission-critical data. Cassandra\u0027s support for replicating across multiple datacenters is best-in-class, providing lower latency for your users and the peace of mind of knowing that you can survive regional outages.  Cassandra\u0027s data model offers the convenience of column indexes with the performance of log-structured updates, strong support for denormalization and materialized views, and powerful built-in caching.\t[The Apache Cassandra database is the right choice when you need scalability and high availability without compromising performance. Linear scalability and proven fault-tolerance on commodity hardware or cloud infrastructure make it the perfect platform for mission-critical data. Cassandra\u0027s support for replicating across multiple datacenters is best-in-class, providing lower latency for your users and the peace of mind of knowing that you can survive regional outages.  Cassandra\u0027s data model offers the convenience of column indexes with the performance of log-structured updates, strong support for denormalization and materialized views, and powerful built-in caching.,WrappedArray([WrappedArray([The,DT,The,,, ,The,,,the,0,3,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [Apache,NNP,Apache,, , ,Apache,,,Apache,4,10,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [Cassandra,NNP,Cassandra,, , ,Cassandra,,,Cassandra,11,20,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [database,NN,database,, , ,database,,,database,21,29,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [is,VBZ,is,, , ,is,,,be,30,32,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [the,DT,the,, , ,the,,,the,33,36,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [right,JJ,right,, , ,right,,,right,37,42,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [choice,NN,choice,, , ,choice,,,choice,43,49,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [when,WRB,when,, , ,when,,,when,50,54,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [you,PRP,you,, , ,you,,,you,55,58,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [need,VBP,need,, , ,need,,,need,59,63,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [scalability,NN,scalability,, , ,scalability,,,scalability,64,75,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [and,CC,and,, , ,and,,,and,76,79,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [high,JJ,high,, , ,high,,,high,80,84,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [availability,NN,availability,, , ,availability,,,availability,85,97,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [without,IN,without,, , ,without,,,without,98,105,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [compromising,VBG,compromising,, , ,compromising,,,compromise,106,118,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [performance,NN,performance,, ,,performance,,,performance,119,130,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [.,.,.,,, ,.,,,.,130,131,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,]),0,19,0,0,131,[WrappedArray(),,0,0,0.0,STRONG_NEGATIVE],[WrappedArray(),,0,0,0.0,STRONG_NEGATIVE],[WrappedArray(),,0,0,0.0,STRONG_NEGATIVE],,WrappedArray(),[WrappedArray(),WrappedArray(),WrappedArray()],[WrappedArray(),WrappedArray(),WrappedArray()],[WrappedArray(),WrappedArray(),WrappedArray()],[WrappedArray(),WrappedArray(),WrappedArray()],WrappedArray(),WrappedArray(),0,,false,WrappedArray(),WrappedArray(),false,WrappedArray(),WrappedArray(),false,], [WrappedArray([Linear,JJ,Linear,, , ,Linear,,,linear,132,138,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [scalability,NN,scalability,, , ,scalability,,,scalability,139,150,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [and,CC,and,, , ,and,,,and,151,154,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [proven,JJ,proven,, , ,proven,,,proven,155,161,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [fault-tolerance,NN,fault-tolerance,, , ,fault-tolerance,,,fault-tolerance,162,177,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [on,IN,on,, , ,on,,,on,178,180,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [commodity,NN,commodity,, , ,commodity,,,commodity,181,190,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [hardware,NN,hardware,, , ,hardware,,,hardware,191,199,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [or,CC,or,, , ,or,,,or,200,202,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [cloud,NN,cloud,, , ,cloud,,,cloud,203,208,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [infrastructure,NN,infrastructure,, , ,infrastructure,,,infrastructure,209,223,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [make,VBP,make,, , ,make,,,make,224,228,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [it,PRP,it,, , ,it,,,it,229,231,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [the,DT,the,, , ,the,,,the,232,235,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [perfect,JJ,perfect,, , ,perfect,,,perfect,236,243,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [platform,NN,platform,, , ,platform,,,platform,244,252,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [for,IN,for,, , ,for,,,for,253,256,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [mission-critical,JJ,mission-critical,, , ,mission-critical,,,mission-critical,257,273,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [data,NNS,data,, ,,data,,,datum,274,278,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [.,.,.,,, ,.,,,.,278,279,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,]),19,39,1,132,279,[WrappedArray(),,0,0,0.0,STRONG_NEGATIVE],[WrappedArray(),,0,0,0.0,STRONG_NEGATIVE],[WrappedArray(),,0,0,0.0,STRONG_NEGATIVE],,WrappedArray(),[WrappedArray(),WrappedArray(),WrappedArray()],[WrappedArray(),WrappedArray(),WrappedArray()],[WrappedArray(),WrappedArray(),WrappedArray()],[WrappedArray(),WrappedArray(),WrappedArray()],WrappedArray(),WrappedArray(),0,,false,WrappedArray(),WrappedArray(),false,WrappedArray(),WrappedArray(),false,], [WrappedArray([Cassandra,NNP,Cassandra,, ,,Cassandra,,,Cassandra,280,289,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [\u0027s,POS,\u0027s,,, ,\u0027s,,,\u0027s,289,291,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [support,NN,support,, , ,support,,,support,292,299,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [for,IN,for,, , ,for,,,for,300,303,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [replicating,VBG,replicating,, , ,replicating,,,replicate,304,315,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [across,IN,across,, , ,across,,,across,316,322,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [multiple,JJ,multiple,, , ,multiple,,,multiple,323,331,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [datacenters,NNS,datacenters,, , ,datacenters,,,datacenter,332,343,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [is,VBZ,is,, , ,is,,,be,344,346,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [best-in-class,JJ,best-in-class,, ,,best-in-class,,,best-in-class,347,360,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [,,,,,,,, ,,,,,,,360,361,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [providing,VBG,providing,, , ,providing,,,provide,362,371,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [lower,JJR,lower,, , ,lower,,,lower,372,377,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [latency,NN,latency,, , ,latency,,,latency,378,385,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [for,IN,for,, , ,for,,,for,386,389,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [your,PRP$,your,, , ,your,,,you,390,394,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [users,NNS,users,, , ,users,,,user,395,400,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [and,CC,and,, , ,and,,,and,401,404,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [the,DT,the,, , ,the,,,the,405,408,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [peace,NN,peace,, , ,peace,,,peace,409,414,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [of,IN,of,, , ,of,,,of,415,417,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [mind,NN,mind,, , ,mind,,,mind,418,422,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [of,IN,of,, , ,of,,,of,423,425,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [knowing,VBG,knowing,, , ,knowing,,,know,426,433,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [that,IN,that,, , ,that,,,that,434,438,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [you,PRP,you,, , ,you,,,you,439,442,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [can,MD,can,, , ,can,,,can,443,446,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [survive,VB,survive,, , ,survive,,,survive,447,454,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [regional,JJ,regional,, , ,regional,,,regional,455,463,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [outages,NNS,outages,, ,,outages,,,outage,464,471,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [.,.,.,,,  ,.,,,.,471,472,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,]),39,70,2,280,472,[WrappedArray(),,0,0,0.0,STRONG_NEGATIVE],[WrappedArray(),,0,0,0.0,STRONG_NEGATIVE],[WrappedArray(),,0,0,0.0,STRONG_NEGATIVE],,WrappedArray(),[WrappedArray(),WrappedArray(),WrappedArray()],[WrappedArray(),WrappedArray(),WrappedArray()],[WrappedArray(),WrappedArray(),WrappedArray()],[WrappedArray(),WrappedArray(),WrappedArray()],WrappedArray(),WrappedArray(),0,,false,WrappedArray(),WrappedArray(),false,WrappedArray(),WrappedArray(),false,], [WrappedArray([Cassandra,NNP,Cassandra,,  ,,Cassandra,,,Cassandra,474,483,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [\u0027s,POS,\u0027s,,, ,\u0027s,,,\u0027s,483,485,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [data,NNS,data,, , ,data,,,datum,486,490,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [model,NN,model,, , ,model,,,model,491,496,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [offers,VBZ,offers,, , ,offers,,,offer,497,503,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [the,DT,the,, , ,the,,,the,504,507,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [convenience,NN,convenience,, , ,convenience,,,convenience,508,519,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [of,IN,of,, , ,of,,,of,520,522,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [column,NN,column,, , ,column,,,column,523,529,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [indexes,NNS,indexes,, , ,indexes,,,index,530,537,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [with,IN,with,, , ,with,,,with,538,542,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [the,DT,the,, , ,the,,,the,543,546,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [performance,NN,performance,, , ,performance,,,performance,547,558,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [of,IN,of,, , ,of,,,of,559,561,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [log-structured,JJ,log-structured,, , ,log-structured,,,log-structured,562,576,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [updates,NNS,updates,, ,,updates,,,update,577,584,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [,,,,,,,, ,,,,,,,584,585,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [strong,JJ,strong,, , ,strong,,,strong,586,592,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [support,NN,support,, , ,support,,,support,593,600,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [for,IN,for,, , ,for,,,for,601,604,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [denormalization,NN,denormalization,, , ,denormalization,,,denormalization,605,620,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [and,CC,and,, , ,and,,,and,621,624,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [materialized,VBD,materialized,, , ,materialized,,,materialize,625,637,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [views,NNS,views,, ,,views,,,view,638,643,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [,,,,,,,, ,,,,,,,643,644,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [and,CC,and,, , ,and,,,and,645,648,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [powerful,JJ,powerful,, , ,powerful,,,powerful,649,657,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [built-in,JJ,built-in,, , ,built-in,,,built-in,658,666,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [caching,NN,caching,, ,,caching,,,caching,667,674,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,], [.,.,.,,,,.,,,.,674,675,0,,0,0,0,0,null,false,WrappedArray(),0,,0,null,null,null,,0,null,,null,,null,,,]),70,100,3,474,675,[WrappedArray(),,0,0,0.0,STRONG_NEGATIVE],[WrappedArray(),,0,0,0.0,STRONG_NEGATIVE],[WrappedArray(),,0,0,0.0,STRONG_NEGATIVE],,WrappedArray(),[WrappedArray(),WrappedArray(),WrappedArray()],[WrappedArray(),WrappedArray(),WrappedArray()],[WrappedArray(),WrappedArray(),WrappedArray()],[WrappedArray(),WrappedArray(),WrappedArray()],WrappedArray(),WrappedArray(),0,,false,WrappedArray(),WrappedArray(),false,WrappedArray(),WrappedArray(),false,]),WrappedArray(),,WrappedArray(),WrappedArray(),WrappedArray(the, Apache, Cassandra, database, be, the, right, choice, when, you, need, scalability, and, high, availability, without, compromise, performance, ., linear, scalability, and, proven, fault-tolerance, on, commodity, hardware, or, cloud, infrastructure, make, it, the, perfect, platform, for, mission-critical, datum, ., Cassandra, \u0027s, support, for, replicate, across, multiple, datacenter, be, best-in-class, ,, provide, lower, latency, for, you, user, and, the, peace, of, mind, of, know, that, you, can, survive, regional, outage, ., Cassandra, \u0027s, datum, model, offer, the, convenience, of, column, index, with, the, performance, of, log-structured, update, ,, strong, support, for, denormalization, and, materialize, view, ,, and, powerful, built-in, caching, .)]\n"
      },
      "dateCreated": "Jan 10, 2016 6:38:34 AM",
      "dateStarted": "Jan 28, 2016 8:51:48 PM",
      "dateFinished": "Jan 28, 2016 8:51:49 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import org.apache.spark.ml.feature.StopWordsRemover\n\n// The following list will be used by default if we don\u0027t specify a list:  \n//   http://ir.dcs.gla.ac.uk/resources/linguistic_utils/stop_words\nval stopWordsFilter \u003d new StopWordsRemover()\n  .setInputCol(coreNLP.getOutputCol)\n  .setOutputCol(\"filteredWords\")\n  .setCaseSensitive(false)\n\n//val filteredTokens \u003d stopWordsFilter.transform(itemsDF)",
      "dateUpdated": "Jan 28, 2016 8:39:27 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1452407914910_1583997153",
      "id": "20160110-063834_1306770047",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.apache.spark.ml.feature.StopWordsRemover\nstopWordsFilter: org.apache.spark.ml.feature.StopWordsRemover \u003d stopWords_52b11fafcc5e\n"
      },
      "dateCreated": "Jan 10, 2016 6:38:34 AM",
      "dateStarted": "Jan 28, 2016 8:40:02 PM",
      "dateFinished": "Jan 28, 2016 8:40:08 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val coreNLPLemmatizer \u003d new CoreNLP()\n  .setInputCol(stopWordsFilter.getOutputCol)\n  .setOutputCol(\"lemmaWords\")\n  .setAnnotators(Array(\"lemma\"))\n  .setFlattenNestedFields(Array(\"sentence_token_lemma\"))\n  \n//z.show(coreNLPLemmatizer.transform(itemsDF))\n",
      "dateUpdated": "Jan 28, 2016 8:39:27 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1452470958952_-1650818947",
      "id": "20160111-000918_1206065802",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "coreNLPLemmatizer: com.databricks.spark.corenlp.CoreNLP \u003d corenlp_ed73f9cebe0e\n"
      },
      "dateCreated": "Jan 11, 2016 12:09:18 AM",
      "dateStarted": "Jan 28, 2016 8:40:08 PM",
      "dateFinished": "Jan 28, 2016 8:40:08 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import org.apache.spark.ml.feature.VectorAssembler\n\n// Combine TF and IDF \nval featureVectorAssembler \u003d new VectorAssembler()\n  .setInputCols(Array(tf.getOutputCol, idf.getOutputCol))\n  .setOutputCol(\"allFeatures\")",
      "dateUpdated": "Jan 28, 2016 8:39:27 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1452407914911_1583612404",
      "id": "20160110-063834_108615110",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "import org.apache.spark.ml.feature.VectorAssembler\n\u003cconsole\u003e:33: error: not found: value tf\n         .setInputCols(Array(tf.getOutputCol, idf.getOutputCol))\n                             ^\n"
      },
      "dateCreated": "Jan 10, 2016 6:38:34 AM",
      "dateStarted": "Jan 28, 2016 8:40:08 PM",
      "dateFinished": "Jan 28, 2016 8:40:09 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import org.apache.spark.ml.Pipeline\n\nval pipeline \u003d new Pipeline()\n  .setStages(Array(coreNLPTokenizer, stopWordsFilter, coreNLPLemmatizer))",
      "dateUpdated": "Jan 28, 2016 8:39:27 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1452407914911_1583612404",
      "id": "20160110-063834_1791197538",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "import org.apache.spark.ml.Pipeline\n\u003cconsole\u003e:39: error: not found: value coreNLPTokenizer\n         .setStages(Array(coreNLPTokenizer, stopWordsFilter, coreNLPLemmatizer))\n                          ^\n"
      },
      "dateCreated": "Jan 10, 2016 6:38:34 AM",
      "dateStarted": "Jan 28, 2016 8:40:09 PM",
      "dateFinished": "Jan 28, 2016 8:40:09 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val model \u003d pipeline.fit(itemsDF)",
      "dateUpdated": "Jan 28, 2016 8:39:27 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1452407914911_1583612404",
      "id": "20160110-063834_393936262",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "\u003cconsole\u003e:33: error: not found: value pipeline\n         val model \u003d pipeline.fit(itemsDF)\n                     ^\n"
      },
      "dateCreated": "Jan 10, 2016 6:38:34 AM",
      "dateStarted": "Jan 28, 2016 8:40:09 PM",
      "dateFinished": "Jan 28, 2016 8:40:10 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "dateUpdated": "Jan 28, 2016 8:39:27 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1452407914912_1569376694",
      "id": "20160110-063834_178903318",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT"
      },
      "dateCreated": "Jan 10, 2016 6:38:34 AM",
      "dateStarted": "Jan 28, 2016 8:40:10 PM",
      "dateFinished": "Jan 28, 2016 8:40:10 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "NLP/07: Spark ML + Stanford CoreNLP",
  "id": "2BAFTUCBH",
  "angularObjects": {
    "2ARR8UZDJ": [],
    "2AS9P7JSA": [],
    "2AR33ZMZJ": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}