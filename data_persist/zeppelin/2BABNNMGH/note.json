{
  "paragraphs": [
    {
      "text": "%pyspark \n\n# http://norvig.com/spell-correct.html\n\n# HTML/JavaScript Version\n# https://s3-us-west-2.amazonaws.com/spellcheckerjs/spellcheck.html\n# https://s3-us-west-2.amazonaws.com/spellcheckerjs/spellcorrect.js\n\nimport re, collections\n\ndef words(text): return re.findall(\u0027[a-z]+\u0027, text.lower()) \n\ndef train(features):\n    model \u003d collections.defaultdict(lambda: 1)\n    for f in features:\n        model[f] +\u003d 1\n    return model\n\nNWORDS \u003d train(words(file(\u0027/root/pipeline/datasets/gutenberg-ebooks.txt\u0027).read()))\n\nalphabet \u003d \u0027abcdefghijklmnopqrstuvwxyz\u0027\n\ndef edits1(word):\n   splits     \u003d [(word[:i], word[i:]) for i in range(len(word) + 1)]\n   deletes    \u003d [a + b[1:] for a, b in splits if b]\n   transposes \u003d [a + b[1] + b[0] + b[2:] for a, b in splits if len(b)\u003e1]\n   replaces   \u003d [a + c + b[1:] for a, b in splits for c in alphabet if b]\n   inserts    \u003d [a + c + b     for a, b in splits for c in alphabet]\n   return set(deletes + transposes + replaces + inserts)\n\ndef known_edits2(word):\n    return set(e2 for e1 in edits1(word) for e2 in edits1(e1) if e2 in NWORDS)\n\ndef known(words): return set(w for w in words if w in NWORDS)\n\ndef correct(word):\n    candidates \u003d known([word]) or known(edits1(word)) or known_edits2(word) or [word]\n    return max(candidates, key\u003dNWORDS.get)\n",
      "dateUpdated": "Jan 15, 2016 4:46:03 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1452751070866_-771875555",
      "id": "20160114-055750_1264088550",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "Traceback (most recent call last):\n  File \"/tmp/zeppelin_pyspark.py\", line 223, in \u003cmodule\u003e\n    eval(compiledCode)\n  File \"\u003cstring\u003e\", line 8, in \u003cmodule\u003e\nIOError: [Errno 2] No such file or directory: \u0027/root/pipeline/datasets/gutenberg-ebooks.txt\u0027\n"
      },
      "dateCreated": "Jan 14, 2016 5:57:50 AM",
      "dateStarted": "Jan 15, 2016 4:55:41 AM",
      "dateFinished": "Jan 15, 2016 4:55:50 AM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark \n# Try the following:  \"acess\", \"accomodation\", \"deciscions\", \"definately\", \"forbiden\", \"speling\", \"supposidly\"\nprint correct(\u0027speling\u0027)\nprint correct(\u0027korrect\u0027)\nprint correct(\u0027dateng\u0027)",
      "dateUpdated": "Jan 14, 2016 6:04:04 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1452751077031_1571629995",
      "id": "20160114-055757_8594800",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "spelling\ncorrect\ndating\n"
      },
      "dateCreated": "Jan 14, 2016 5:57:57 AM",
      "dateStarted": "Jan 14, 2016 6:04:04 AM",
      "dateFinished": "Jan 14, 2016 6:04:04 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1452751365162_1851371450",
      "id": "20160114-060245_1376871006",
      "dateCreated": "Jan 14, 2016 6:02:45 AM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "NLP/01: Edit Distance",
  "id": "2BABNNMGH",
  "angularObjects": {
    "2ARR8UZDJ": [],
    "2AS9P7JSA": [],
    "2AR33ZMZJ": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}