{%- set train_dir = "/train" -%}
{%- set port = 2222 -%}

{%- set replicas = {"worker": PIPELINE_WORKER_REPLICAS, "ps": PIPELINE_PS_REPLICAS} -%}

{%- macro worker_hosts() -%}
  {%- for i in range(PIPELINE_WORKER_REPLICAS) -%}
    {%- if not loop.first -%},{%- endif -%}
    clustered-{{ PIPELINE_MODEL_TYPE }}-{{ PIPELINE_MODEL_NAME }}-{{ PIPELINE_MODEL_CHIP }}-{{ PIPELINE_MODEL_TAG }}-worker-{{ i }}:{{ port }}
  {%- endfor -%}
{%- endmacro -%}

{%- macro ps_hosts() -%}
  {%- for i in range(PIPELINE_PS_REPLICAS) -%}
    {%- if not loop.first -%},{%- endif -%}
    clustered-{{ PIPELINE_MODEL_TYPE }}-{{ PIPELINE_MODEL_NAME }}-{{ PIPELINE_MODEL_CHIP }}-{{ PIPELINE_MODEL_TAG }}-ps-{{ i }}:{{ port }}
  {%- endfor -%}
{%- endmacro -%}

{%- for job in ["worker", "ps"] -%}
{%- for i in range(replicas[job]) -%}
kind: Service
apiVersion: v1
metadata:
  name: clustered-{{ PIPELINE_MODEL_TYPE }}-{{ PIPELINE_MODEL_NAME }}-{{ PIPELINE_MODEL_CHIP }}-{{ PIPELINE_MODEL_TAG }}-{{ job }}-{{ i }}
spec:
  selector:
    name: clustered-{{ PIPELINE_MODEL_TYPE }}-{{ PIPELINE_MODEL_NAME }}-{{ PIPELINE_MODEL_CHIP }}-{{ PIPELINE_MODEL_TAG }}
    job: {{ job }}
    task: "{{ i }}"
  ports:
  - port: {{ port }}
---
kind: ReplicaSet
apiVersion: extensions/v1beta1
metadata:
  name: clustered-{{ PIPELINE_MODEL_TYPE }}-{{ PIPELINE_MODEL_NAME }}-{{ PIPELINE_MODEL_CHIP }}-{{ PIPELINE_MODEL_TAG }}-{{ job }}-{{ i }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: clustered-{{ PIPELINE_MODEL_TYPE }}-{{ PIPELINE_MODEL_NAME }}-{{ PIPELINE_MODEL_CHIP }}-{{ PIPELINE_MODEL_TAG }}
        job: {{ job }}
        task: "{{ i }}"
    spec:
      containers:
      - name: clustered-{{ PIPELINE_MODEL_TYPE }}-{{ PIPELINE_MODEL_NAME }}-{{ PIPELINE_MODEL_CHIP }}-{{PIPELINE_MODEL_TAG }} 
        image: fluxcapacitor/clustered-{{ PIPELINE_MODEL_TYPE }}-{{ PIPELINE_MODEL_NAME }}-{{ PIPELINE_MODEL_CHIP }}:{{PIPELINE_MODEL_TAG }} 
        resources:
          limits:
            cpu: {{ PIPELINE_WORKER_CPU_LIMIT }}
            memory: {{ PIPELINE_WORKER_MEMORY_LIMIT }}
          requests:
            cpu: 100m
            memory: 100Mi
        imagePullPolicy: "Always"
        ports:
        - containerPort: {{ port }}
{% if job == "tensorboard" %}
        command:
        - "tensorboard"
        args:
        - "--logdir={{ train_dir }}"
{% else %}
        command:
        - "/usr/bin/python3"
        - "src/pipeline_train.py"
        args:
        - "--data_dir=./datasets"
        - "--train_dir=./train"
        - "--task_index={{ i }}"
        - "--job_name={{ job }}"
        - "--worker_hosts={{ worker_hosts() }}"
        - "--ps_hosts={{ ps_hosts() }}"
{% endif %}
---
{% endfor %}
{%- endfor -%}
